   1              		.file	"ADXL345.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   6              		.global	_ZN8cADXL345C2Eic
   8              	_ZN8cADXL345C2Eic:
   9              	.LFB1:
  10              		.file 1 "../Library/adxl345/ADXL345.cpp"
   1:../Library/adxl345/ADXL345.cpp **** /*
   2:../Library/adxl345/ADXL345.cpp **** 	ADXL345 Library
   3:../Library/adxl345/ADXL345.cpp **** 	
   4:../Library/adxl345/ADXL345.cpp **** 	This libary contains functions to interact with the ADXL345 Triple Axis Digital Accelerometer from
   5:../Library/adxl345/ADXL345.cpp **** 	In order to use this libary, define the appropriate pins in the ADXL345.h file
   6:../Library/adxl345/ADXL345.cpp **** 
   7:../Library/adxl345/ADXL345.cpp **** 	created 20 Aug 2009
   8:../Library/adxl345/ADXL345.cpp **** 	by Ryan Owens
   9:../Library/adxl345/ADXL345.cpp **** 	http://www.sparkfun.com
  10:../Library/adxl345/ADXL345.cpp **** 	
  11:../Library/adxl345/ADXL345.cpp **** 	Example Code:
  12:../Library/adxl345/ADXL345.cpp **** 	char values[6];
  13:../Library/adxl345/ADXL345.cpp **** 	char status=0;
  14:../Library/adxl345/ADXL345.cpp **** 	accelerometer.begin();
  15:../Library/adxl345/ADXL345.cpp **** 	values[0]=POWER_CTL;
  16:../Library/adxl345/ADXL345.cpp **** 	status=accelerometer.read(values, 1);
  17:../Library/adxl345/ADXL345.cpp **** 	
  18:../Library/adxl345/ADXL345.cpp **** 	status=0;
  19:../Library/adxl345/ADXL345.cpp **** 	while(!status){
  20:../Library/adxl345/ADXL345.cpp **** 		values[0]=POWER_CTL;
  21:../Library/adxl345/ADXL345.cpp **** 		values[1] = MEASURE;
  22:../Library/adxl345/ADXL345.cpp **** 		status=accelerometer.write(values, 2);
  23:../Library/adxl345/ADXL345.cpp **** 		if(status)
  24:../Library/adxl345/ADXL345.cpp **** 			status=accelerometer.read(values, 1);
  25:../Library/adxl345/ADXL345.cpp **** 	}
  26:../Library/adxl345/ADXL345.cpp **** 	rprintf("New Power 2: %02x\t%d\n\r", values[0], status);
  27:../Library/adxl345/ADXL345.cpp **** 	
  28:../Library/adxl345/ADXL345.cpp **** 	
  29:../Library/adxl345/ADXL345.cpp **** 	while(1){
  30:../Library/adxl345/ADXL345.cpp **** 		values[0]=DATAX0;
  31:../Library/adxl345/ADXL345.cpp **** 		status=accelerometer.read(values, 6);
  32:../Library/adxl345/ADXL345.cpp **** 		if(status)
  33:../Library/adxl345/ADXL345.cpp **** 			for(int i=0; i<3; i++)
  34:../Library/adxl345/ADXL345.cpp **** 				rprintf("%02x%02x\t", values[i*2], values[i*2+1]);
  35:../Library/adxl345/ADXL345.cpp **** 		rprintf("\n\r");
  36:../Library/adxl345/ADXL345.cpp **** 	}	
  37:../Library/adxl345/ADXL345.cpp ****  
  38:../Library/adxl345/ADXL345.cpp **** */
  39:../Library/adxl345/ADXL345.cpp **** #include "ADXL345.h"
  40:../Library/adxl345/ADXL345.cpp **** #include <stdlib.h>
  41:../Library/adxl345/ADXL345.cpp **** #include <stdio.h>
  42:../Library/adxl345/ADXL345.cpp **** #include "LPC21xx_SFE.h"
  43:../Library/adxl345/ADXL345.cpp **** #include "main.h"
  44:../Library/adxl345/ADXL345.cpp **** 
  45:../Library/adxl345/ADXL345.cpp **** extern "C"{
  46:../Library/adxl345/ADXL345.cpp **** #include "timer1.h"
  47:../Library/adxl345/ADXL345.cpp **** }
  48:../Library/adxl345/ADXL345.cpp **** 
  49:../Library/adxl345/ADXL345.cpp **** #define GLOBALOBJECT
  50:../Library/adxl345/ADXL345.cpp **** 
  51:../Library/adxl345/ADXL345.cpp **** cADXL345 accelerometer(0, ADXL_ADDR);
  52:../Library/adxl345/ADXL345.cpp **** char status=0;
  53:../Library/adxl345/ADXL345.cpp **** 
  54:../Library/adxl345/ADXL345.cpp **** cADXL345::cADXL345(int port, char i2c_address)
  11              		.loc 1 54 0
  12              		.cfi_startproc
  13              		@ Function supports interworking.
  14              		@ args = 0, pretend = 0, frame = 0
  15              		@ frame_needed = 0, uses_anonymous_args = 0
  16              	.LVL0:
  17 0000 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
  18              	.LCFI0:
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 14, -4
  21              		.cfi_offset 6, -8
  22              		.cfi_offset 5, -12
  23              		.cfi_offset 4, -16
  24              		.loc 1 54 0
  25 0004 0040A0E1 		mov	r4, r0
  26 0008 0150A0E1 		mov	r5, r1
  27 000c FF6002E2 		and	r6, r2, #255
  28              	.LBB9:
  29 0010 FEFFFFEB 		bl	_ZN3I2CC2Ev
  30              	.LVL1:
  55:../Library/adxl345/ADXL345.cpp **** {
  56:../Library/adxl345/ADXL345.cpp **** 	_i2c_port = port;
  31              		.loc 1 56 0
  32 0014 005084E5 		str	r5, [r4, #0]
  57:../Library/adxl345/ADXL345.cpp **** 	_i2c_address = i2c_address;
  33              		.loc 1 57 0
  34 0018 0560C4E5 		strb	r6, [r4, #5]
  35              	.LBE9:
  58:../Library/adxl345/ADXL345.cpp **** 	
  59:../Library/adxl345/ADXL345.cpp **** }
  36              		.loc 1 59 0
  37 001c 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
  38 0020 1EFF2FE1 		bx	lr
  39              		.cfi_endproc
  40              	.LFE1:
  42              		.align	2
  43              		.global	_ZN8cADXL3459powerDownEv
  45              	_ZN8cADXL3459powerDownEv:
  46              	.LFB4:
  60:../Library/adxl345/ADXL345.cpp **** 
  61:../Library/adxl345/ADXL345.cpp **** void cADXL345::begin(char range)
  62:../Library/adxl345/ADXL345.cpp **** {
  63:../Library/adxl345/ADXL345.cpp **** 	configure();
  64:../Library/adxl345/ADXL345.cpp **** 
  65:../Library/adxl345/ADXL345.cpp **** 	//Put the accelerometer in MEASURE mode
  66:../Library/adxl345/ADXL345.cpp **** 	values[0]=POWER_CTL;
  67:../Library/adxl345/ADXL345.cpp **** 	values[1] = MEASURE;
  68:../Library/adxl345/ADXL345.cpp **** 	write(values, 2);		//Put the Accelerometer into measurement mode
  69:../Library/adxl345/ADXL345.cpp **** 	
  70:../Library/adxl345/ADXL345.cpp **** 	//Set the Range to +/- 4G
  71:../Library/adxl345/ADXL345.cpp **** 	values[0] = DATA_FORMAT;
  72:../Library/adxl345/ADXL345.cpp **** 	values[1] = range;
  73:../Library/adxl345/ADXL345.cpp **** 	write(values, 2);
  74:../Library/adxl345/ADXL345.cpp **** 	
  75:../Library/adxl345/ADXL345.cpp **** 	//default ADXL345 rate is 100 Hz. Perfect!
  76:../Library/adxl345/ADXL345.cpp **** 	
  77:../Library/adxl345/ADXL345.cpp **** 	//Assign the gain depending on the range input.
  78:../Library/adxl345/ADXL345.cpp **** 	//gain = (total range)/1024
  79:../Library/adxl345/ADXL345.cpp **** 	switch(range){
  80:../Library/adxl345/ADXL345.cpp **** 		case 0: gain = 0.0039;	// range = +/-2g. gain = 4/1024.
  81:../Library/adxl345/ADXL345.cpp **** 			break;
  82:../Library/adxl345/ADXL345.cpp **** 		case 1: gain = 0.0078;	// range = +/-4g. gain = 8/1024.
  83:../Library/adxl345/ADXL345.cpp **** 			break;
  84:../Library/adxl345/ADXL345.cpp **** 		case 2: gain = 0.0156;  // range = +/-8g. gain = 16/1024.
  85:../Library/adxl345/ADXL345.cpp **** 			break;
  86:../Library/adxl345/ADXL345.cpp **** 		case 3: gain = 0.0313;  // range = +/-16g. gain = 32/1024.
  87:../Library/adxl345/ADXL345.cpp **** 			break;
  88:../Library/adxl345/ADXL345.cpp **** 		default: gain = 0.0078;
  89:../Library/adxl345/ADXL345.cpp **** 			break;
  90:../Library/adxl345/ADXL345.cpp **** 	}
  91:../Library/adxl345/ADXL345.cpp **** 	
  92:../Library/adxl345/ADXL345.cpp **** 	updated=0;
  93:../Library/adxl345/ADXL345.cpp **** }
  94:../Library/adxl345/ADXL345.cpp **** 
  95:../Library/adxl345/ADXL345.cpp **** void cADXL345::powerDown(void)
  96:../Library/adxl345/ADXL345.cpp **** {
  47              		.loc 1 96 0
  48              		.cfi_startproc
  49              		@ Function supports interworking.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL2:
  97:../Library/adxl345/ADXL345.cpp **** 
  98:../Library/adxl345/ADXL345.cpp **** }
  54              		.loc 1 98 0
  55 0024 1EFF2FE1 		bx	lr
  56              		.cfi_endproc
  57              	.LFE4:
  59              		.align	2
  60              		.global	_ZN8cADXL3455writeEPcc
  62              	_ZN8cADXL3455writeEPcc:
  63              	.LFB6:
  99:../Library/adxl345/ADXL345.cpp **** 
 100:../Library/adxl345/ADXL345.cpp **** char cADXL345::read(char * value, char length){
 101:../Library/adxl345/ADXL345.cpp **** 	
 102:../Library/adxl345/ADXL345.cpp **** 	write(value, 1);	//Set up the i2c address to read from
 103:../Library/adxl345/ADXL345.cpp **** 	return send(_i2c_address, value, READ, length);	
 104:../Library/adxl345/ADXL345.cpp **** }
 105:../Library/adxl345/ADXL345.cpp **** 
 106:../Library/adxl345/ADXL345.cpp **** char cADXL345::write(char * value, char length){
  64              		.loc 1 106 0
  65              		.cfi_startproc
  66              		@ Function supports interworking.
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              	.LVL3:
  70 0028 01402DE9 		stmfd	sp!, {r0, lr}
  71              	.LCFI1:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 14, -4
  74              		.cfi_offset 0, -8
  75              		.loc 1 106 0
  76 002c 0130A0E1 		mov	r3, r1
  77 0030 FF2002E2 		and	r2, r2, #255
  78              	.LVL4:
 107:../Library/adxl345/ADXL345.cpp **** 
 108:../Library/adxl345/ADXL345.cpp **** 	return send(_i2c_address, value, WRITE, length);
  79              		.loc 1 108 0
  80 0034 0510D0E5 		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  81              	.LVL5:
  82 0038 00208DE5 		str	r2, [sp, #0]
  83 003c 0320A0E1 		mov	r2, r3
  84 0040 0030A0E3 		mov	r3, #0
  85              	.LVL6:
  86 0044 FEFFFFEB 		bl	_ZN3I2C4sendEcPccc
  87              	.LVL7:
 109:../Library/adxl345/ADXL345.cpp **** }
  88              		.loc 1 109 0
  89 0048 0840BDE8 		ldmfd	sp!, {r3, lr}
  90 004c 1EFF2FE1 		bx	lr
  91              		.cfi_endproc
  92              	.LFE6:
  94              		.align	2
  95              		.global	_ZN8cADXL3454readEPcc
  97              	_ZN8cADXL3454readEPcc:
  98              	.LFB5:
 100:../Library/adxl345/ADXL345.cpp **** char cADXL345::read(char * value, char length){
  99              		.loc 1 100 0
 100              		.cfi_startproc
 101              		@ Function supports interworking.
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              	.LVL8:
 105 0050 71402DE9 		stmfd	sp!, {r0, r4, r5, r6, lr}
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 20
 108              		.cfi_offset 14, -4
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 5, -12
 111              		.cfi_offset 4, -16
 112              		.cfi_offset 0, -20
 100:../Library/adxl345/ADXL345.cpp **** char cADXL345::read(char * value, char length){
 113              		.loc 1 100 0
 114 0054 0040A0E1 		mov	r4, r0
 115 0058 0150A0E1 		mov	r5, r1
 116 005c FF6002E2 		and	r6, r2, #255
 102:../Library/adxl345/ADXL345.cpp **** 	write(value, 1);	//Set up the i2c address to read from
 117              		.loc 1 102 0
 118 0060 0120A0E3 		mov	r2, #1
 119              	.LVL9:
 120 0064 FEFFFFEB 		bl	_ZN8cADXL3455writeEPcc
 121              	.LVL10:
 103:../Library/adxl345/ADXL345.cpp **** 	return send(_i2c_address, value, READ, length);	
 122              		.loc 1 103 0
 123 0068 0510D4E5 		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 124 006c 0400A0E1 		mov	r0, r4
 125 0070 0520A0E1 		mov	r2, r5
 126 0074 0130A0E3 		mov	r3, #1
 127 0078 00608DE5 		str	r6, [sp, #0]
 128 007c FEFFFFEB 		bl	_ZN3I2C4sendEcPccc
 104:../Library/adxl345/ADXL345.cpp **** }
 129              		.loc 1 104 0
 130 0080 7840BDE8 		ldmfd	sp!, {r3, r4, r5, r6, lr}
 131 0084 1EFF2FE1 		bx	lr
 132              		.cfi_endproc
 133              	.LFE5:
 135              		.align	2
 136              		.global	_ZN8cADXL3455beginEc
 138              	_ZN8cADXL3455beginEc:
 139              	.LFB3:
  62:../Library/adxl345/ADXL345.cpp **** {
 140              		.loc 1 62 0
 141              		.cfi_startproc
 142              		@ Function supports interworking.
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL11:
 146 0088 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 16
 149              		.cfi_offset 14, -4
 150              		.cfi_offset 6, -8
 151              		.cfi_offset 5, -12
 152              		.cfi_offset 4, -16
  62:../Library/adxl345/ADXL345.cpp **** {
 153              		.loc 1 62 0
 154 008c 0040A0E1 		mov	r4, r0
 155 0090 FF5001E2 		and	r5, r1, #255
  63:../Library/adxl345/ADXL345.cpp **** 	configure();
 156              		.loc 1 63 0
 157 0094 FEFFFFEB 		bl	_ZN3I2C9configureEv
 158              	.LVL12:
  66:../Library/adxl345/ADXL345.cpp **** 	values[0]=POWER_CTL;
 159              		.loc 1 66 0
 160 0098 2D30A0E3 		mov	r3, #45
 161 009c 2030C4E5 		strb	r3, [r4, #32]
  68:../Library/adxl345/ADXL345.cpp **** 	write(values, 2);		//Put the Accelerometer into measurement mode
 162              		.loc 1 68 0
 163 00a0 206084E2 		add	r6, r4, #32
  67:../Library/adxl345/ADXL345.cpp **** 	values[1] = MEASURE;
 164              		.loc 1 67 0
 165 00a4 0830A0E3 		mov	r3, #8
 166 00a8 2130C4E5 		strb	r3, [r4, #33]
  68:../Library/adxl345/ADXL345.cpp **** 	write(values, 2);		//Put the Accelerometer into measurement mode
 167              		.loc 1 68 0
 168 00ac 0610A0E1 		mov	r1, r6
 169 00b0 0220A0E3 		mov	r2, #2
 170 00b4 0400A0E1 		mov	r0, r4
 171 00b8 FEFFFFEB 		bl	_ZN8cADXL3455writeEPcc
  71:../Library/adxl345/ADXL345.cpp **** 	values[0] = DATA_FORMAT;
 172              		.loc 1 71 0
 173 00bc 3130A0E3 		mov	r3, #49
 174 00c0 2030C4E5 		strb	r3, [r4, #32]
  72:../Library/adxl345/ADXL345.cpp **** 	values[1] = range;
 175              		.loc 1 72 0
 176 00c4 2150C4E5 		strb	r5, [r4, #33]
  73:../Library/adxl345/ADXL345.cpp **** 	write(values, 2);
 177              		.loc 1 73 0
 178 00c8 0400A0E1 		mov	r0, r4
 179 00cc 0610A0E1 		mov	r1, r6
 180 00d0 0220A0E3 		mov	r2, #2
 181 00d4 FEFFFFEB 		bl	_ZN8cADXL3455writeEPcc
  79:../Library/adxl345/ADXL345.cpp **** 	switch(range){
 182              		.loc 1 79 0
 183 00d8 030055E3 		cmp	r5, #3
 184 00dc 05F19F97 		ldrls	pc, [pc, r5, asl #2]
 185 00e0 090000EA 		b	.L6
 186              	.L11:
 187 00e4 F4000000 		.word	.L7
 188 00e8 0C010000 		.word	.L6
 189 00ec FC000000 		.word	.L9
 190 00f0 04010000 		.word	.L10
 191              	.L7:
  80:../Library/adxl345/ADXL345.cpp **** 		case 0: gain = 0.0039;	// range = +/-2g. gain = 4/1024.
 192              		.loc 1 80 0
 193 00f4 28309FE5 		ldr	r3, .L14
 194 00f8 040000EA 		b	.L13
 195              	.L9:
  84:../Library/adxl345/ADXL345.cpp **** 		case 2: gain = 0.0156;  // range = +/-8g. gain = 16/1024.
 196              		.loc 1 84 0
 197 00fc 24309FE5 		ldr	r3, .L14+4
 198 0100 020000EA 		b	.L13
 199              	.L10:
  86:../Library/adxl345/ADXL345.cpp **** 		case 3: gain = 0.0313;  // range = +/-16g. gain = 32/1024.
 200              		.loc 1 86 0
 201 0104 20309FE5 		ldr	r3, .L14+8
 202 0108 000000EA 		b	.L13
 203              	.L6:
  88:../Library/adxl345/ADXL345.cpp **** 		default: gain = 0.0078;
 204              		.loc 1 88 0
 205 010c 1C309FE5 		ldr	r3, .L14+12
 206              	.L13:
 207 0110 1C3084E5 		str	r3, [r4, #28]	@ float
  92:../Library/adxl345/ADXL345.cpp **** 	updated=0;
 208              		.loc 1 92 0
 209 0114 0030A0E3 		mov	r3, #0
 210 0118 0430C4E5 		strb	r3, [r4, #4]
  93:../Library/adxl345/ADXL345.cpp **** }
 211              		.loc 1 93 0
 212 011c 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 213 0120 1EFF2FE1 		bx	lr
 214              	.L15:
 215              		.align	2
 216              	.L14:
 217 0124 24977F3B 		.word	998217508
 218 0128 24977F3C 		.word	1014994724
 219 012c 6E34003D 		.word	1023423598
 220 0130 2497FF3B 		.word	1006606116
 221              		.cfi_endproc
 222              	.LFE3:
 224              		.global	__floatsisf
 225              		.align	2
 226              		.global	_ZN8cADXL3456updateEv
 228              	_ZN8cADXL3456updateEv:
 229              	.LFB7:
 110:../Library/adxl345/ADXL345.cpp **** 
 111:../Library/adxl345/ADXL345.cpp **** char cADXL345::update(void)
 112:../Library/adxl345/ADXL345.cpp **** {
 230              		.loc 1 112 0
 231              		.cfi_startproc
 232              		@ Function supports interworking.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL13:
 236 0134 30402DE9 		stmfd	sp!, {r4, r5, lr}
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 12
 239              		.cfi_offset 14, -4
 240              		.cfi_offset 5, -8
 241              		.cfi_offset 4, -12
 113:../Library/adxl345/ADXL345.cpp **** 	values[0] = DATAX0;
 114:../Library/adxl345/ADXL345.cpp **** 	status=accelerometer.read(values, 6);
 242              		.loc 1 114 0
 243 0138 84509FE5 		ldr	r5, .L19
 113:../Library/adxl345/ADXL345.cpp **** 	values[0] = DATAX0;
 244              		.loc 1 113 0
 245 013c 0010A0E1 		mov	r1, r0
 246 0140 3230A0E3 		mov	r3, #50
 112:../Library/adxl345/ADXL345.cpp **** {
 247              		.loc 1 112 0
 248 0144 0040A0E1 		mov	r4, r0
 113:../Library/adxl345/ADXL345.cpp **** 	values[0] = DATAX0;
 249              		.loc 1 113 0
 250 0148 2030E1E5 		strb	r3, [r1, #32]!
 251              		.loc 1 114 0
 252 014c 0500A0E1 		mov	r0, r5
 253              	.LVL14:
 254 0150 0620A0E3 		mov	r2, #6
 255 0154 FEFFFFEB 		bl	_ZN8cADXL3454readEPcc
 115:../Library/adxl345/ADXL345.cpp **** 	if(status)
 256              		.loc 1 115 0
 257 0158 000050E3 		cmp	r0, #0
 114:../Library/adxl345/ADXL345.cpp **** 	status=accelerometer.read(values, 6);
 258              		.loc 1 114 0
 259 015c 2800C5E5 		strb	r0, [r5, #40]
 260              		.loc 1 115 0
 261 0160 1500000A 		beq	.L17
 116:../Library/adxl345/ADXL345.cpp **** 	{
 117:../Library/adxl345/ADXL345.cpp **** 		xg = (int16_t)((values[1]<<8)|values[0]);
 262              		.loc 1 117 0
 263 0164 2030D4E5 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 264 0168 2100D4E5 		ldrb	r0, [r4, #33]	@ zero_extendqisi2
 265 016c 000483E1 		orr	r0, r3, r0, asl #8
 266 0170 0008A0E1 		mov	r0, r0, asl #16
 267 0174 4008A0E1 		mov	r0, r0, asr #16
 268 0178 FEFFFFEB 		bl	__floatsisf
 118:../Library/adxl345/ADXL345.cpp **** 		yg = (int16_t)((values[3]<<8)|values[2]);
 269              		.loc 1 118 0
 270 017c 2230D4E5 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 117:../Library/adxl345/ADXL345.cpp **** 		xg = (int16_t)((values[1]<<8)|values[0]);
 271              		.loc 1 117 0
 272 0180 100084E5 		str	r0, [r4, #16]	@ float
 273              		.loc 1 118 0
 274 0184 2300D4E5 		ldrb	r0, [r4, #35]	@ zero_extendqisi2
 275 0188 000483E1 		orr	r0, r3, r0, asl #8
 276 018c 0008A0E1 		mov	r0, r0, asl #16
 277 0190 4008A0E1 		mov	r0, r0, asr #16
 278 0194 FEFFFFEB 		bl	__floatsisf
 119:../Library/adxl345/ADXL345.cpp **** 		zg = (int16_t)((values[5]<<8)|values[4]);
 279              		.loc 1 119 0
 280 0198 2430D4E5 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 118:../Library/adxl345/ADXL345.cpp **** 		yg = (int16_t)((values[3]<<8)|values[2]);
 281              		.loc 1 118 0
 282 019c 140084E5 		str	r0, [r4, #20]	@ float
 283              		.loc 1 119 0
 284 01a0 2500D4E5 		ldrb	r0, [r4, #37]	@ zero_extendqisi2
 285 01a4 000483E1 		orr	r0, r3, r0, asl #8
 286 01a8 0008A0E1 		mov	r0, r0, asl #16
 287 01ac 4008A0E1 		mov	r0, r0, asr #16
 288 01b0 FEFFFFEB 		bl	__floatsisf
 289 01b4 180084E5 		str	r0, [r4, #24]	@ float
 120:../Library/adxl345/ADXL345.cpp **** 	}
 121:../Library/adxl345/ADXL345.cpp **** 	else return 0;
 122:../Library/adxl345/ADXL345.cpp **** 	
 123:../Library/adxl345/ADXL345.cpp **** 	return 1;
 290              		.loc 1 123 0
 291 01b8 0100A0E3 		mov	r0, #1
 292              	.L17:
 124:../Library/adxl345/ADXL345.cpp **** }
 293              		.loc 1 124 0
 294 01bc 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 295 01c0 1EFF2FE1 		bx	lr
 296              	.L20:
 297              		.align	2
 298              	.L19:
 299 01c4 00000000 		.word	.LANCHOR0
 300              		.cfi_endproc
 301              	.LFE7:
 303              		.global	__subsf3
 304              		.global	__mulsf3
 305              		.global	__extendsfdf2
 306              		.align	2
 307              		.global	_ZN8cADXL3454getXEv
 309              	_ZN8cADXL3454getXEv:
 310              	.LFB8:
 125:../Library/adxl345/ADXL345.cpp **** 
 126:../Library/adxl345/ADXL345.cpp **** double cADXL345::getX(void)
 127:../Library/adxl345/ADXL345.cpp **** {
 311              		.loc 1 127 0
 312              		.cfi_startproc
 313              		@ Function supports interworking.
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              	.LVL15:
 317 01c8 10402DE9 		stmfd	sp!, {r4, lr}
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 14, -4
 321              		.cfi_offset 4, -8
 322              		.loc 1 127 0
 323 01cc 0040A0E1 		mov	r4, r0
 128:../Library/adxl345/ADXL345.cpp **** 	xg-=x_cal;
 324              		.loc 1 128 0
 325 01d0 F600D0E1 		ldrsh	r0, [r0, #6]
 326              	.LVL16:
 327 01d4 FEFFFFEB 		bl	__floatsisf
 328 01d8 0010A0E1 		mov	r1, r0
 329 01dc 100094E5 		ldr	r0, [r4, #16]	@ float
 330 01e0 FEFFFFEB 		bl	__subsf3
 129:../Library/adxl345/ADXL345.cpp **** 	xg=xg*gain;
 331              		.loc 1 129 0
 332 01e4 1C1094E5 		ldr	r1, [r4, #28]	@ float
 333 01e8 FEFFFFEB 		bl	__mulsf3
 334 01ec 100084E5 		str	r0, [r4, #16]	@ float
 130:../Library/adxl345/ADXL345.cpp **** 	return xg;
 335              		.loc 1 130 0
 336 01f0 FEFFFFEB 		bl	__extendsfdf2
 131:../Library/adxl345/ADXL345.cpp **** }
 337              		.loc 1 131 0
 338 01f4 1040BDE8 		ldmfd	sp!, {r4, lr}
 339 01f8 1EFF2FE1 		bx	lr
 340              		.cfi_endproc
 341              	.LFE8:
 343              		.align	2
 344              		.global	_ZN8cADXL3454getYEv
 346              	_ZN8cADXL3454getYEv:
 347              	.LFB9:
 132:../Library/adxl345/ADXL345.cpp **** 
 133:../Library/adxl345/ADXL345.cpp **** double cADXL345::getY(void)
 134:../Library/adxl345/ADXL345.cpp **** {
 348              		.loc 1 134 0
 349              		.cfi_startproc
 350              		@ Function supports interworking.
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              	.LVL17:
 354 01fc 10402DE9 		stmfd	sp!, {r4, lr}
 355              	.LCFI6:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 14, -4
 358              		.cfi_offset 4, -8
 359              		.loc 1 134 0
 360 0200 0040A0E1 		mov	r4, r0
 135:../Library/adxl345/ADXL345.cpp **** 	yg-=y_cal;
 361              		.loc 1 135 0
 362 0204 F800D0E1 		ldrsh	r0, [r0, #8]
 363              	.LVL18:
 364 0208 FEFFFFEB 		bl	__floatsisf
 365 020c 0010A0E1 		mov	r1, r0
 366 0210 140094E5 		ldr	r0, [r4, #20]	@ float
 367 0214 FEFFFFEB 		bl	__subsf3
 136:../Library/adxl345/ADXL345.cpp **** 	yg=yg*gain;
 368              		.loc 1 136 0
 369 0218 1C1094E5 		ldr	r1, [r4, #28]	@ float
 370 021c FEFFFFEB 		bl	__mulsf3
 371 0220 140084E5 		str	r0, [r4, #20]	@ float
 137:../Library/adxl345/ADXL345.cpp **** 	return yg;
 372              		.loc 1 137 0
 373 0224 FEFFFFEB 		bl	__extendsfdf2
 138:../Library/adxl345/ADXL345.cpp **** }
 374              		.loc 1 138 0
 375 0228 1040BDE8 		ldmfd	sp!, {r4, lr}
 376 022c 1EFF2FE1 		bx	lr
 377              		.cfi_endproc
 378              	.LFE9:
 380              		.align	2
 381              		.global	_ZN8cADXL3454getZEv
 383              	_ZN8cADXL3454getZEv:
 384              	.LFB10:
 139:../Library/adxl345/ADXL345.cpp **** 
 140:../Library/adxl345/ADXL345.cpp **** double cADXL345::getZ(void)
 141:../Library/adxl345/ADXL345.cpp **** {
 385              		.loc 1 141 0
 386              		.cfi_startproc
 387              		@ Function supports interworking.
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL19:
 391 0230 10402DE9 		stmfd	sp!, {r4, lr}
 392              	.LCFI7:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 14, -4
 395              		.cfi_offset 4, -8
 396              		.loc 1 141 0
 397 0234 0040A0E1 		mov	r4, r0
 142:../Library/adxl345/ADXL345.cpp **** 	zg-=z_cal;
 398              		.loc 1 142 0
 399 0238 0C1094E5 		ldr	r1, [r4, #12]	@ float
 400 023c 180090E5 		ldr	r0, [r0, #24]	@ float
 401              	.LVL20:
 402 0240 FEFFFFEB 		bl	__subsf3
 143:../Library/adxl345/ADXL345.cpp **** 	zg=zg*gain;
 403              		.loc 1 143 0
 404 0244 1C1094E5 		ldr	r1, [r4, #28]	@ float
 405 0248 FEFFFFEB 		bl	__mulsf3
 406 024c 180084E5 		str	r0, [r4, #24]	@ float
 144:../Library/adxl345/ADXL345.cpp **** 	return zg;
 407              		.loc 1 144 0
 408 0250 FEFFFFEB 		bl	__extendsfdf2
 145:../Library/adxl345/ADXL345.cpp **** }
 409              		.loc 1 145 0
 410 0254 1040BDE8 		ldmfd	sp!, {r4, lr}
 411 0258 1EFF2FE1 		bx	lr
 412              		.cfi_endproc
 413              	.LFE10:
 415              		.align	2
 416              		.global	_ZN8cADXL34520setCalibrationValuesEiif
 418              	_ZN8cADXL34520setCalibrationValuesEiif:
 419              	.LFB11:
 146:../Library/adxl345/ADXL345.cpp **** 
 147:../Library/adxl345/ADXL345.cpp **** void cADXL345::setCalibrationValues(int x, int y, float z)
 148:../Library/adxl345/ADXL345.cpp **** {
 420              		.loc 1 148 0
 421              		.cfi_startproc
 422              		@ Function supports interworking.
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL21:
 149:../Library/adxl345/ADXL345.cpp **** 	x_cal=x;
 427              		.loc 1 149 0
 428 025c B610C0E1 		strh	r1, [r0, #6]	@ movhi
 150:../Library/adxl345/ADXL345.cpp **** 	y_cal=y;
 429              		.loc 1 150 0
 430 0260 B820C0E1 		strh	r2, [r0, #8]	@ movhi
 151:../Library/adxl345/ADXL345.cpp **** 	z_cal=z;
 431              		.loc 1 151 0
 432 0264 0C3080E5 		str	r3, [r0, #12]	@ float
 152:../Library/adxl345/ADXL345.cpp **** }
 433              		.loc 1 152 0
 434 0268 1EFF2FE1 		bx	lr
 435              		.cfi_endproc
 436              	.LFE11:
 438              		.align	2
 439              		.global	_ZN8cADXL3457getXcalEv
 441              	_ZN8cADXL3457getXcalEv:
 442              	.LFB12:
 153:../Library/adxl345/ADXL345.cpp **** 
 154:../Library/adxl345/ADXL345.cpp **** int16_t cADXL345::getXcal(void)
 155:../Library/adxl345/ADXL345.cpp **** {
 443              		.loc 1 155 0
 444              		.cfi_startproc
 445              		@ Function supports interworking.
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL22:
 156:../Library/adxl345/ADXL345.cpp **** 	return x_cal;
 157:../Library/adxl345/ADXL345.cpp **** }
 450              		.loc 1 157 0
 451 026c F600D0E1 		ldrsh	r0, [r0, #6]
 452              	.LVL23:
 453 0270 1EFF2FE1 		bx	lr
 454              		.cfi_endproc
 455              	.LFE12:
 457              		.align	2
 458              		.global	_ZN8cADXL3457getYcalEv
 460              	_ZN8cADXL3457getYcalEv:
 461              	.LFB13:
 158:../Library/adxl345/ADXL345.cpp **** 
 159:../Library/adxl345/ADXL345.cpp **** int16_t cADXL345::getYcal(void)
 160:../Library/adxl345/ADXL345.cpp **** {
 462              		.loc 1 160 0
 463              		.cfi_startproc
 464              		@ Function supports interworking.
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL24:
 161:../Library/adxl345/ADXL345.cpp **** 	return y_cal;
 162:../Library/adxl345/ADXL345.cpp **** }
 469              		.loc 1 162 0
 470 0274 F800D0E1 		ldrsh	r0, [r0, #8]
 471              	.LVL25:
 472 0278 1EFF2FE1 		bx	lr
 473              		.cfi_endproc
 474              	.LFE13:
 476              		.align	2
 477              		.global	_ZN8cADXL3457getZcalEv
 479              	_ZN8cADXL3457getZcalEv:
 480              	.LFB14:
 163:../Library/adxl345/ADXL345.cpp **** 
 164:../Library/adxl345/ADXL345.cpp **** float cADXL345::getZcal(void)
 165:../Library/adxl345/ADXL345.cpp **** {
 481              		.loc 1 165 0
 482              		.cfi_startproc
 483              		@ Function supports interworking.
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 487              	.LVL26:
 166:../Library/adxl345/ADXL345.cpp **** 	return z_cal;
 167:../Library/adxl345/ADXL345.cpp **** }
 488              		.loc 1 167 0
 489 027c 0C0090E5 		ldr	r0, [r0, #12]	@ float
 490              	.LVL27:
 491 0280 1EFF2FE1 		bx	lr
 492              		.cfi_endproc
 493              	.LFE14:
 495              		.global	__fixsfsi
 496              		.global	__addsf3
 497              		.global	__divdf3
 498              		.global	__subdf3
 499              		.global	__truncdfsf2
 500              		.align	2
 501              		.global	_ZN8cADXL3459calibrateEv
 503              	_ZN8cADXL3459calibrateEv:
 504              	.LFB15:
 168:../Library/adxl345/ADXL345.cpp **** 
 169:../Library/adxl345/ADXL345.cpp **** void cADXL345::calibrate(void)
 170:../Library/adxl345/ADXL345.cpp **** {
 505              		.loc 1 170 0
 506              		.cfi_startproc
 507              		@ Function supports interworking.
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              	.LVL28:
 511 0284 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 512              	.LCFI8:
 513              		.cfi_def_cfa_offset 20
 514              		.cfi_offset 14, -4
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 6, -12
 517              		.cfi_offset 5, -16
 518              		.cfi_offset 4, -20
 519              		.loc 1 170 0
 520 0288 0040A0E1 		mov	r4, r0
 521 028c 1050A0E3 		mov	r5, #16
 522              	.LVL29:
 523              	.L29:
 524              	.LBB10:
 525              	.LBB11:
 171:../Library/adxl345/ADXL345.cpp **** 	for(int i=0; i<16; i++)
 172:../Library/adxl345/ADXL345.cpp **** 	{
 173:../Library/adxl345/ADXL345.cpp **** 		update();	//Get new values while device is not moving
 526              		.loc 1 173 0 discriminator 2
 527 0290 0400A0E1 		mov	r0, r4
 528 0294 FEFFFFEB 		bl	_ZN8cADXL3456updateEv
 174:../Library/adxl345/ADXL345.cpp **** 		x_cal+=(int16_t)xg;
 529              		.loc 1 174 0 discriminator 2
 530 0298 100094E5 		ldr	r0, [r4, #16]	@ float
 531 029c FEFFFFEB 		bl	__fixsfsi
 532 02a0 B630D4E1 		ldrh	r3, [r4, #6]
 533 02a4 033080E0 		add	r3, r0, r3
 534 02a8 B630C4E1 		strh	r3, [r4, #6]	@ movhi
 175:../Library/adxl345/ADXL345.cpp **** 		y_cal+=(int16_t)yg;
 535              		.loc 1 175 0 discriminator 2
 536 02ac 140094E5 		ldr	r0, [r4, #20]	@ float
 537 02b0 FEFFFFEB 		bl	__fixsfsi
 538 02b4 B830D4E1 		ldrh	r3, [r4, #8]
 539 02b8 033080E0 		add	r3, r0, r3
 540 02bc B830C4E1 		strh	r3, [r4, #8]	@ movhi
 176:../Library/adxl345/ADXL345.cpp **** 		z_cal+=(int16_t)zg;
 541              		.loc 1 176 0 discriminator 2
 542 02c0 180094E5 		ldr	r0, [r4, #24]	@ float
 543 02c4 FEFFFFEB 		bl	__fixsfsi
 544 02c8 0008A0E1 		mov	r0, r0, asl #16
 545 02cc 4008A0E1 		mov	r0, r0, asr #16
 546 02d0 FEFFFFEB 		bl	__floatsisf
 547 02d4 0010A0E1 		mov	r1, r0
 548 02d8 0C0094E5 		ldr	r0, [r4, #12]	@ float
 549 02dc FEFFFFEB 		bl	__addsf3
 550 02e0 0C0084E5 		str	r0, [r4, #12]	@ float
 177:../Library/adxl345/ADXL345.cpp **** 		delay_ms(100);
 551              		.loc 1 177 0 discriminator 2
 552 02e4 6400A0E3 		mov	r0, #100
 553 02e8 FEFFFFEB 		bl	delay_ms
 171:../Library/adxl345/ADXL345.cpp **** 	for(int i=0; i<16; i++)
 554              		.loc 1 171 0 discriminator 2
 555 02ec 015055E2 		subs	r5, r5, #1
 556 02f0 E6FFFF1A 		bne	.L29
 557              	.LBE11:
 178:../Library/adxl345/ADXL345.cpp **** 	}
 179:../Library/adxl345/ADXL345.cpp **** 	x_cal/=16;
 558              		.loc 1 179 0
 559 02f4 F630D4E1 		ldrsh	r3, [r4, #6]
 560 02f8 0F2083E2 		add	r2, r3, #15
 561 02fc 000053E3 		cmp	r3, #0
 562 0300 0230A0B1 		movlt	r3, r2
 563 0304 4332A0E1 		mov	r3, r3, asr #4
 564 0308 B630C4E1 		strh	r3, [r4, #6]	@ movhi
 180:../Library/adxl345/ADXL345.cpp **** 	y_cal/=16;
 565              		.loc 1 180 0
 566 030c F830D4E1 		ldrsh	r3, [r4, #8]
 567 0310 000053E3 		cmp	r3, #0
 568 0314 0F2083E2 		add	r2, r3, #15
 569 0318 0230A0B1 		movlt	r3, r2
 570 031c 4332A0E1 		mov	r3, r3, asr #4
 571 0320 B830C4E1 		strh	r3, [r4, #8]	@ movhi
 181:../Library/adxl345/ADXL345.cpp **** 	z_cal/=16;
 572              		.loc 1 181 0
 573 0324 0C0094E5 		ldr	r0, [r4, #12]	@ float
 574 0328 F615A0E3 		mov	r1, #1031798784
 575 032c FEFFFFEB 		bl	__mulsf3
 182:../Library/adxl345/ADXL345.cpp **** 	
 183:../Library/adxl345/ADXL345.cpp **** 	z_cal -= (1.0/gain);	//Z axis should be calibrated to 1g. This will offset the calibration value f
 576              		.loc 1 183 0
 577 0330 FEFFFFEB 		bl	__extendsfdf2
 578 0334 0060A0E1 		mov	r6, r0
 579 0338 1C0094E5 		ldr	r0, [r4, #28]	@ float
 580 033c 0170A0E1 		mov	r7, r1
 581 0340 FEFFFFEB 		bl	__extendsfdf2
 582 0344 0020A0E1 		mov	r2, r0
 583 0348 0130A0E1 		mov	r3, r1
 584 034c 28009FE5 		ldr	r0, .L31
 585 0350 0010A0E3 		mov	r1, #0
 586 0354 FEFFFFEB 		bl	__divdf3
 587 0358 0020A0E1 		mov	r2, r0
 588 035c 0130A0E1 		mov	r3, r1
 589 0360 0600A0E1 		mov	r0, r6
 590 0364 0710A0E1 		mov	r1, r7
 591 0368 FEFFFFEB 		bl	__subdf3
 592 036c FEFFFFEB 		bl	__truncdfsf2
 593 0370 0C0084E5 		str	r0, [r4, #12]	@ float
 594              	.LBE10:
 184:../Library/adxl345/ADXL345.cpp **** }
 595              		.loc 1 184 0
 596 0374 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 597 0378 1EFF2FE1 		bx	lr
 598              	.L32:
 599              		.align	2
 600              	.L31:
 601 037c 0000F03F 		.word	1072693248
 602              		.cfi_endproc
 603              	.LFE15:
 605              		.section	.text.startup,"ax",%progbits
 606              		.align	2
 608              	_GLOBAL__sub_I_accelerometer:
 609              	.LFB17:
 610              		.loc 1 184 0
 611              		.cfi_startproc
 612              		@ Function supports interworking.
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              	.LVL30:
 616 0000 10402DE9 		stmfd	sp!, {r4, lr}
 617              	.LCFI9:
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 14, -4
 620              		.cfi_offset 4, -8
 621              	.LBB12:
 622              	.LBB13:
 623              	.LBB14:
  54:../Library/adxl345/ADXL345.cpp **** cADXL345::cADXL345(int port, char i2c_address)
 624              		.loc 1 54 0
 625 0004 1C409FE5 		ldr	r4, .L34
 626 0008 0400A0E1 		mov	r0, r4
 627 000c FEFFFFEB 		bl	_ZN3I2CC2Ev
  56:../Library/adxl345/ADXL345.cpp **** 	_i2c_port = port;
 628              		.loc 1 56 0
 629 0010 0030A0E3 		mov	r3, #0
 630 0014 003084E5 		str	r3, [r4, #0]
  57:../Library/adxl345/ADXL345.cpp **** 	_i2c_address = i2c_address;
 631              		.loc 1 57 0
 632 0018 5930E0E3 		mvn	r3, #89
 633 001c 0530C4E5 		strb	r3, [r4, #5]
 634              	.LBE14:
 635              	.LBE13:
 636              	.LBE12:
 637              		.loc 1 184 0
 638 0020 1040BDE8 		ldmfd	sp!, {r4, lr}
 639 0024 1EFF2FE1 		bx	lr
 640              	.L35:
 641              		.align	2
 642              	.L34:
 643 0028 00000000 		.word	.LANCHOR0
 644              		.cfi_endproc
 645              	.LFE17:
 647              		.section	.ctors,"aw",%progbits
 648              		.align	2
 649 0000 00000000 		.word	_GLOBAL__sub_I_accelerometer
 650              		.global	status
 651              		.global	accelerometer
 652              		.global	_ZN8cADXL345C1Eic
 653              		.set	_ZN8cADXL345C1Eic,_ZN8cADXL345C2Eic
 654              		.bss
 655              		.align	2
 656              		.set	.LANCHOR0,. + 0
 659              	accelerometer:
 660 0000 00000000 		.space	40
 660      00000000 
 660      00000000 
 660      00000000 
 660      00000000 
 663              	status:
 664 0028 00       		.space	1
 665 0029 000000   		.text
 666              	.Letext0:
 667              		.file 2 "../Library/i2c/I2C.h"
 668              		.file 3 "../Library/adxl345/ADXL345.h"
 669              		.file 4 "/opt/local/lib/gcc/arm-elf/4.6.1/../../../../arm-elf/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ADXL345.cpp
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:8      .text:0000000000000000 _ZN8cADXL345C2Eic
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:45     .text:0000000000000024 _ZN8cADXL3459powerDownEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:62     .text:0000000000000028 _ZN8cADXL3455writeEPcc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:97     .text:0000000000000050 _ZN8cADXL3454readEPcc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:138    .text:0000000000000088 _ZN8cADXL3455beginEc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:187    .text:00000000000000e4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:193    .text:00000000000000f4 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:217    .text:0000000000000124 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:225    .text:0000000000000134 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:228    .text:0000000000000134 _ZN8cADXL3456updateEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:299    .text:00000000000001c4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:306    .text:00000000000001c8 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:309    .text:00000000000001c8 _ZN8cADXL3454getXEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:346    .text:00000000000001fc _ZN8cADXL3454getYEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:383    .text:0000000000000230 _ZN8cADXL3454getZEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:418    .text:000000000000025c _ZN8cADXL34520setCalibrationValuesEiif
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:441    .text:000000000000026c _ZN8cADXL3457getXcalEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:460    .text:0000000000000274 _ZN8cADXL3457getYcalEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:479    .text:000000000000027c _ZN8cADXL3457getZcalEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:503    .text:0000000000000284 _ZN8cADXL3459calibrateEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:601    .text:000000000000037c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:606    .text.startup:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:608    .text.startup:0000000000000000 _GLOBAL__sub_I_accelerometer
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:643    .text.startup:0000000000000028 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:648    .ctors:0000000000000000 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:663    .bss:0000000000000028 status
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:659    .bss:0000000000000000 accelerometer
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:8      .text:0000000000000000 _ZN8cADXL345C1Eic
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccbiSIjO.s:655    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
_ZN3I2CC2Ev
_ZN3I2C4sendEcPccc
_ZN3I2C9configureEv
__floatsisf
__subsf3
__mulsf3
__extendsfdf2
__fixsfsi
__addsf3
__divdf3
__subdf3
__truncdfsf2
delay_ms
