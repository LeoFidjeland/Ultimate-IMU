   1              		.file	"blockdev_sd.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	Resp8b:
   8              	.LFB1:
   9              		.file 1 "../Library/lpcusb/blockdev_sd.c"
   1:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************\
   2:../Library/lpcusb/blockdev_sd.c **** *              efs - General purpose Embedded Filesystem library              *
   3:../Library/lpcusb/blockdev_sd.c **** *          --------------------- -----------------------------------          *
   4:../Library/lpcusb/blockdev_sd.c **** *                                                                             *
   5:../Library/lpcusb/blockdev_sd.c **** * Filename : sd.c                                                             *
   6:../Library/lpcusb/blockdev_sd.c **** * Revision : Initial developement                                             *
   7:../Library/lpcusb/blockdev_sd.c **** * Description : This file contains the functions needed to use efs for        *
   8:../Library/lpcusb/blockdev_sd.c **** *               accessing files on an SD-card.                                *
   9:../Library/lpcusb/blockdev_sd.c **** *                                                                             *
  10:../Library/lpcusb/blockdev_sd.c **** * This library is free software; you can redistribute it and/or               *
  11:../Library/lpcusb/blockdev_sd.c **** * modify it under the terms of the GNU Lesser General Public                  *
  12:../Library/lpcusb/blockdev_sd.c **** * License as published by the Free Software Foundation; either                *
  13:../Library/lpcusb/blockdev_sd.c **** * version 2.1 of the License, or (at your option) any later version.          *
  14:../Library/lpcusb/blockdev_sd.c **** *                                                                             *
  15:../Library/lpcusb/blockdev_sd.c **** * This library is distributed in the hope that it will be useful,             *
  16:../Library/lpcusb/blockdev_sd.c **** * but WITHOUT ANY WARRANTY; without even the implied warranty of              *
  17:../Library/lpcusb/blockdev_sd.c **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU           *
  18:../Library/lpcusb/blockdev_sd.c **** * Lesser General Public License for more details.                             *
  19:../Library/lpcusb/blockdev_sd.c **** *                                                                             *
  20:../Library/lpcusb/blockdev_sd.c **** *                                                    (c)2005 Michael De Nil   *
  21:../Library/lpcusb/blockdev_sd.c **** *                                                    (c)2005 Lennart Yseboodt *
  22:../Library/lpcusb/blockdev_sd.c **** \*****************************************************************************/
  23:../Library/lpcusb/blockdev_sd.c **** 
  24:../Library/lpcusb/blockdev_sd.c **** /*
  25:../Library/lpcusb/blockdev_sd.c ****     2006, Bertrik Sikken, modified for LPCUSB
  26:../Library/lpcusb/blockdev_sd.c **** */
  27:../Library/lpcusb/blockdev_sd.c **** 
  28:../Library/lpcusb/blockdev_sd.c **** #include "type.h"
  29:../Library/lpcusb/blockdev_sd.c **** 
  30:../Library/lpcusb/blockdev_sd.c **** #include <stdio.h>
  31:../Library/lpcusb/blockdev_sd.c **** #include "rprintf.h"
  32:../Library/lpcusb/blockdev_sd.c **** 
  33:../Library/lpcusb/blockdev_sd.c **** #include "blockdev.h"
  34:../Library/lpcusb/blockdev_sd.c **** #include "spi.h"
  35:../Library/lpcusb/blockdev_sd.c **** 
  36:../Library/lpcusb/blockdev_sd.c **** #define CMD_GOIDLESTATE     0
  37:../Library/lpcusb/blockdev_sd.c **** #define CMD_SENDOPCOND      1
  38:../Library/lpcusb/blockdev_sd.c **** #define CMD_READCSD         9
  39:../Library/lpcusb/blockdev_sd.c **** #define CMD_READCID         10
  40:../Library/lpcusb/blockdev_sd.c **** #define CMD_SENDSTATUS      13
  41:../Library/lpcusb/blockdev_sd.c **** #define CMD_READSINGLEBLOCK 17
  42:../Library/lpcusb/blockdev_sd.c **** #define CMD_WRITE           24
  43:../Library/lpcusb/blockdev_sd.c **** #define CMD_WRITE_MULTIPLE  25
  44:../Library/lpcusb/blockdev_sd.c **** 
  45:../Library/lpcusb/blockdev_sd.c **** static void Command(U8 cmd, U32 param)
  46:../Library/lpcusb/blockdev_sd.c **** {
  47:../Library/lpcusb/blockdev_sd.c ****     U8  abCmd[8];
  48:../Library/lpcusb/blockdev_sd.c **** 
  49:../Library/lpcusb/blockdev_sd.c ****     // create buffer
  50:../Library/lpcusb/blockdev_sd.c ****     abCmd[0] = 0xff;
  51:../Library/lpcusb/blockdev_sd.c ****     abCmd[1] = 0x40 | cmd;
  52:../Library/lpcusb/blockdev_sd.c ****     abCmd[2] = (U8)(param >> 24);
  53:../Library/lpcusb/blockdev_sd.c ****     abCmd[3] = (U8)(param >> 16);
  54:../Library/lpcusb/blockdev_sd.c ****     abCmd[4] = (U8)(param >> 8);
  55:../Library/lpcusb/blockdev_sd.c ****     abCmd[5] = (U8)(param);
  56:../Library/lpcusb/blockdev_sd.c ****     abCmd[6] = 0x95;            /* Checksum (should be only valid for first command (0) */
  57:../Library/lpcusb/blockdev_sd.c ****     abCmd[7] = 0xff;            /* eat empty command - response */
  58:../Library/lpcusb/blockdev_sd.c **** 
  59:../Library/lpcusb/blockdev_sd.c ****     SPISendN(abCmd, 8);
  60:../Library/lpcusb/blockdev_sd.c **** }
  61:../Library/lpcusb/blockdev_sd.c **** 
  62:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
  63:../Library/lpcusb/blockdev_sd.c **** 
  64:../Library/lpcusb/blockdev_sd.c **** static U8 Resp8b(void)
  65:../Library/lpcusb/blockdev_sd.c **** {
  10              		.loc 1 65 0
  11              		.cfi_startproc
  12              		@ Function supports interworking.
  13              		@ args = 0, pretend = 0, frame = 0
  14              		@ frame_needed = 0, uses_anonymous_args = 0
  15              	.LVL0:
  16 0000 10402DE9 		stmfd	sp!, {r4, lr}
  17              	.LCFI0:
  18              		.cfi_def_cfa_offset 8
  19              		.cfi_offset 14, -4
  20              		.cfi_offset 4, -8
  21              		.loc 1 65 0
  22 0004 0840A0E3 		mov	r4, #8
  23              	.LVL1:
  24              	.L3:
  66:../Library/lpcusb/blockdev_sd.c ****     U8 i;
  67:../Library/lpcusb/blockdev_sd.c ****     U8 resp;
  68:../Library/lpcusb/blockdev_sd.c **** 
  69:../Library/lpcusb/blockdev_sd.c ****     /* Respone will come after 1 - 8 pings */
  70:../Library/lpcusb/blockdev_sd.c ****     for (i = 0; i < 8; i++)
  71:../Library/lpcusb/blockdev_sd.c ****     {
  72:../Library/lpcusb/blockdev_sd.c ****         resp = SPISend(0xff);
  25              		.loc 1 72 0
  26 0008 FF00A0E3 		mov	r0, #255
  27 000c FEFFFFEB 		bl	SPISend
  28              	.LVL2:
  73:../Library/lpcusb/blockdev_sd.c ****         if (resp != 0xff)
  29              		.loc 1 73 0
  30 0010 FF0050E3 		cmp	r0, #255
  31 0014 0200001A 		bne	.L2
  32              	.LVL3:
  33 0018 014044E2 		sub	r4, r4, #1
  70:../Library/lpcusb/blockdev_sd.c ****     for (i = 0; i < 8; i++)
  34              		.loc 1 70 0
  35 001c FF4014E2 		ands	r4, r4, #255
  36 0020 F8FFFF1A 		bne	.L3
  37              	.LVL4:
  38              	.L2:
  74:../Library/lpcusb/blockdev_sd.c ****         {
  75:../Library/lpcusb/blockdev_sd.c ****             return resp;
  76:../Library/lpcusb/blockdev_sd.c ****         }
  77:../Library/lpcusb/blockdev_sd.c ****     }
  78:../Library/lpcusb/blockdev_sd.c **** 
  79:../Library/lpcusb/blockdev_sd.c ****     return resp;
  80:../Library/lpcusb/blockdev_sd.c **** }
  39              		.loc 1 80 0
  40 0024 1040BDE8 		ldmfd	sp!, {r4, lr}
  41 0028 1EFF2FE1 		bx	lr
  42              		.cfi_endproc
  43              	.LFE1:
  45              		.align	2
  47              	Command:
  48              	.LFB0:
  46:../Library/lpcusb/blockdev_sd.c **** {
  49              		.loc 1 46 0
  50              		.cfi_startproc
  51              		@ Function supports interworking.
  52              		@ args = 0, pretend = 0, frame = 8
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              	.LVL5:
  55 002c 03402DE9 		stmfd	sp!, {r0, r1, lr}
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 12
  58              		.cfi_offset 14, -4
  59              		.cfi_offset 1, -8
  60              		.cfi_offset 0, -12
  52:../Library/lpcusb/blockdev_sd.c ****     abCmd[2] = (U8)(param >> 24);
  61              		.loc 1 52 0
  62 0030 212CA0E1 		mov	r2, r1, lsr #24
  63 0034 0220CDE5 		strb	r2, [sp, #2]
  53:../Library/lpcusb/blockdev_sd.c ****     abCmd[3] = (U8)(param >> 16);
  64              		.loc 1 53 0
  65 0038 2128A0E1 		mov	r2, r1, lsr #16
  51:../Library/lpcusb/blockdev_sd.c ****     abCmd[1] = 0x40 | cmd;
  66              		.loc 1 51 0
  67 003c 400080E3 		orr	r0, r0, #64
  68              	.LVL6:
  53:../Library/lpcusb/blockdev_sd.c ****     abCmd[3] = (U8)(param >> 16);
  69              		.loc 1 53 0
  70 0040 0320CDE5 		strb	r2, [sp, #3]
  54:../Library/lpcusb/blockdev_sd.c ****     abCmd[4] = (U8)(param >> 8);
  71              		.loc 1 54 0
  72 0044 2124A0E1 		mov	r2, r1, lsr #8
  50:../Library/lpcusb/blockdev_sd.c ****     abCmd[0] = 0xff;
  73              		.loc 1 50 0
  74 0048 0030E0E3 		mvn	r3, #0
  51:../Library/lpcusb/blockdev_sd.c ****     abCmd[1] = 0x40 | cmd;
  75              		.loc 1 51 0
  76 004c 0100CDE5 		strb	r0, [sp, #1]
  54:../Library/lpcusb/blockdev_sd.c ****     abCmd[4] = (U8)(param >> 8);
  77              		.loc 1 54 0
  78 0050 0420CDE5 		strb	r2, [sp, #4]
  55:../Library/lpcusb/blockdev_sd.c ****     abCmd[5] = (U8)(param);
  79              		.loc 1 55 0
  80 0054 0510CDE5 		strb	r1, [sp, #5]
  56:../Library/lpcusb/blockdev_sd.c ****     abCmd[6] = 0x95;            /* Checksum (should be only valid for first command (0) */
  81              		.loc 1 56 0
  82 0058 6A20E0E3 		mvn	r2, #106
  59:../Library/lpcusb/blockdev_sd.c ****     SPISendN(abCmd, 8);
  83              		.loc 1 59 0
  84 005c 0D00A0E1 		mov	r0, sp
  85 0060 0810A0E3 		mov	r1, #8
  86              	.LVL7:
  50:../Library/lpcusb/blockdev_sd.c ****     abCmd[0] = 0xff;
  87              		.loc 1 50 0
  88 0064 0030CDE5 		strb	r3, [sp, #0]
  56:../Library/lpcusb/blockdev_sd.c ****     abCmd[6] = 0x95;            /* Checksum (should be only valid for first command (0) */
  89              		.loc 1 56 0
  90 0068 0620CDE5 		strb	r2, [sp, #6]
  57:../Library/lpcusb/blockdev_sd.c ****     abCmd[7] = 0xff;            /* eat empty command - response */
  91              		.loc 1 57 0
  92 006c 0730CDE5 		strb	r3, [sp, #7]
  59:../Library/lpcusb/blockdev_sd.c ****     SPISendN(abCmd, 8);
  93              		.loc 1 59 0
  94 0070 FEFFFFEB 		bl	SPISendN
  60:../Library/lpcusb/blockdev_sd.c **** }
  95              		.loc 1 60 0
  96 0074 0C40BDE8 		ldmfd	sp!, {r2, r3, lr}
  97 0078 1EFF2FE1 		bx	lr
  98              		.cfi_endproc
  99              	.LFE0:
 101              		.align	2
 103              	Resp8bError:
 104              	.LFB2:
  81:../Library/lpcusb/blockdev_sd.c **** 
  82:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
  83:../Library/lpcusb/blockdev_sd.c **** 
  84:../Library/lpcusb/blockdev_sd.c **** static void Resp8bError(U8 value)
  85:../Library/lpcusb/blockdev_sd.c **** {
 105              		.loc 1 85 0
 106              		.cfi_startproc
 107              		@ Function supports interworking.
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              	.LVL8:
  86:../Library/lpcusb/blockdev_sd.c ****     switch (value)
 111              		.loc 1 86 0
 112 007c 080050E3 		cmp	r0, #8
  85:../Library/lpcusb/blockdev_sd.c **** {
 113              		.loc 1 85 0
 114 0080 04E02DE5 		str	lr, [sp, #-4]!
 115              	.LCFI2:
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 14, -4
  85:../Library/lpcusb/blockdev_sd.c **** {
 118              		.loc 1 85 0
 119 0084 0010A0E1 		mov	r1, r0
 120              		.loc 1 86 0
 121 0088 1400000A 		beq	.L11
 122 008c 0600008A 		bhi	.L15
 123 0090 020050E3 		cmp	r0, #2
 124 0094 1500000A 		beq	.L9
 125 0098 040050E3 		cmp	r0, #4
 126 009c 1100000A 		beq	.L10
 127 00a0 010050E3 		cmp	r0, #1
 128 00a4 1600001A 		bne	.L7
 129 00a8 120000EA 		b	.L18
 130              	.L15:
 131 00ac 200050E3 		cmp	r0, #32
 132 00b0 0600000A 		beq	.L13
 133 00b4 400050E3 		cmp	r0, #64
 134 00b8 0200000A 		beq	.L14
 135 00bc 100050E3 		cmp	r0, #16
 136 00c0 0F00001A 		bne	.L7
 137 00c4 030000EA 		b	.L19
 138              	.L14:
  87:../Library/lpcusb/blockdev_sd.c ****     {
  88:../Library/lpcusb/blockdev_sd.c ****         case 0x40:  rprintf("Argument out of bounds.\n");               break;
 139              		.loc 1 88 0
 140 00c8 44009FE5 		ldr	r0, .L20
 141              	.LVL9:
 142 00cc 0A0000EA 		b	.L17
 143              	.LVL10:
 144              	.L13:
  89:../Library/lpcusb/blockdev_sd.c ****         case 0x20:  rprintf("Address out of bounds.\n");                break;
 145              		.loc 1 89 0
 146 00d0 40009FE5 		ldr	r0, .L20+4
 147              	.LVL11:
 148 00d4 080000EA 		b	.L17
 149              	.LVL12:
 150              	.L19:
  90:../Library/lpcusb/blockdev_sd.c ****         case 0x10:  rprintf("Error during erase sequence.\n");          break;
 151              		.loc 1 90 0
 152 00d8 3C009FE5 		ldr	r0, .L20+8
 153              	.LVL13:
 154 00dc 060000EA 		b	.L17
 155              	.LVL14:
 156              	.L11:
  91:../Library/lpcusb/blockdev_sd.c ****         case 0x08:  rprintf("CRC failed.\n");                           break;
 157              		.loc 1 91 0
 158 00e0 38009FE5 		ldr	r0, .L20+12
 159              	.LVL15:
 160 00e4 040000EA 		b	.L17
 161              	.LVL16:
 162              	.L10:
  92:../Library/lpcusb/blockdev_sd.c ****         case 0x04:  rprintf("Illegal command.\n");                      break;
 163              		.loc 1 92 0
 164 00e8 34009FE5 		ldr	r0, .L20+16
 165              	.LVL17:
 166 00ec 020000EA 		b	.L17
 167              	.LVL18:
 168              	.L9:
  93:../Library/lpcusb/blockdev_sd.c ****         case 0x02:  rprintf("Erase reset (see SanDisk docs p5-13).\n"); break;
 169              		.loc 1 93 0
 170 00f0 30009FE5 		ldr	r0, .L20+20
 171              	.LVL19:
 172 00f4 000000EA 		b	.L17
 173              	.LVL20:
 174              	.L18:
  94:../Library/lpcusb/blockdev_sd.c **** //        case 0x01:  rprintf("Card is initialising.\n");                 break;
  95:../Library/lpcusb/blockdev_sd.c ****         case 0x01:  rprintf(".");                 break;
 175              		.loc 1 95 0
 176 00f8 2C009FE5 		ldr	r0, .L20+24
 177              	.LVL21:
 178              	.L17:
 179 00fc FEFFFFEB 		bl	rprintf
 180 0100 010000EA 		b	.L6
 181              	.LVL22:
 182              	.L7:
  96:../Library/lpcusb/blockdev_sd.c ****             default:
  97:../Library/lpcusb/blockdev_sd.c ****             rprintf("Unknown error 0x%x (see SanDisk docs p5-13).\n", value);
 183              		.loc 1 97 0
 184 0104 24009FE5 		ldr	r0, .L20+28
 185              	.LVL23:
 186 0108 FEFFFFEB 		bl	rprintf
 187              	.L6:
  98:../Library/lpcusb/blockdev_sd.c ****             break;
  99:../Library/lpcusb/blockdev_sd.c ****     }
 100:../Library/lpcusb/blockdev_sd.c **** }
 188              		.loc 1 100 0
 189 010c 04E09DE4 		ldr	lr, [sp], #4
 190 0110 1EFF2FE1 		bx	lr
 191              	.L21:
 192              		.align	2
 193              	.L20:
 194 0114 00000000 		.word	.LC0
 195 0118 19000000 		.word	.LC1
 196 011c 31000000 		.word	.LC2
 197 0120 4F000000 		.word	.LC3
 198 0124 5C000000 		.word	.LC4
 199 0128 6E000000 		.word	.LC5
 200 012c 95000000 		.word	.LC6
 201 0130 97000000 		.word	.LC7
 202              		.cfi_endproc
 203              	.LFE2:
 205              		.align	2
 206              		.global	BlockDevGetSize
 208              	BlockDevGetSize:
 209              	.LFB3:
 101:../Library/lpcusb/blockdev_sd.c **** 
 102:../Library/lpcusb/blockdev_sd.c **** 
 103:../Library/lpcusb/blockdev_sd.c **** /* ****************************************************************************
 104:../Library/lpcusb/blockdev_sd.c ****  calculates size of card from CSD
 105:../Library/lpcusb/blockdev_sd.c ****  (extension by Martin Thomas, inspired by code from Holger Klabunde)
 106:../Library/lpcusb/blockdev_sd.c ****  */
 107:../Library/lpcusb/blockdev_sd.c **** int BlockDevGetSize(U32 *pdwDriveSize)
 108:../Library/lpcusb/blockdev_sd.c **** {
 210              		.loc 1 108 0
 211              		.cfi_startproc
 212              		@ Function supports interworking.
 213              		@ args = 0, pretend = 0, frame = 16
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL24:
 216 0134 3F402DE9 		stmfd	sp!, {r0, r1, r2, r3, r4, r5, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 28
 219              		.cfi_offset 14, -4
 220              		.cfi_offset 5, -8
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 3, -16
 223              		.cfi_offset 2, -20
 224              		.cfi_offset 1, -24
 225              		.cfi_offset 0, -28
 226              		.loc 1 108 0
 227 0138 0050A0E1 		mov	r5, r0
 109:../Library/lpcusb/blockdev_sd.c ****     U8 cardresp, i, by;
 110:../Library/lpcusb/blockdev_sd.c ****     U8 iob[16];
 111:../Library/lpcusb/blockdev_sd.c ****     U16 c_size, c_size_mult, read_bl_len;
 112:../Library/lpcusb/blockdev_sd.c **** 
 113:../Library/lpcusb/blockdev_sd.c ****     Command(CMD_READCSD, 0);
 228              		.loc 1 113 0
 229 013c 0010A0E3 		mov	r1, #0
 230 0140 0900A0E3 		mov	r0, #9
 231              	.LVL25:
 232 0144 B8FFFFEB 		bl	Command
 233              	.L23:
 114:../Library/lpcusb/blockdev_sd.c ****     do
 115:../Library/lpcusb/blockdev_sd.c ****     {
 116:../Library/lpcusb/blockdev_sd.c ****         cardresp = Resp8b();
 234              		.loc 1 116 0 discriminator 1
 235 0148 ACFFFFEB 		bl	Resp8b
 236              	.LVL26:
 117:../Library/lpcusb/blockdev_sd.c ****     }
 118:../Library/lpcusb/blockdev_sd.c ****     while (cardresp != 0xFE);
 237              		.loc 1 118 0 discriminator 1
 238 014c FE0050E3 		cmp	r0, #254
 239 0150 FCFFFF1A 		bne	.L23
 119:../Library/lpcusb/blockdev_sd.c **** 
 120:../Library/lpcusb/blockdev_sd.c ****     rprintf("CSD:");
 240              		.loc 1 120 0
 241 0154 B8009FE5 		ldr	r0, .L27
 242              	.LVL27:
 243 0158 FEFFFFEB 		bl	rprintf
 244              	.LVL28:
 245 015c 0040A0E3 		mov	r4, #0
 246              	.LVL29:
 247              	.L24:
 121:../Library/lpcusb/blockdev_sd.c ****     for (i = 0; i < 16; i++)
 122:../Library/lpcusb/blockdev_sd.c ****     {
 123:../Library/lpcusb/blockdev_sd.c ****         iob[i] = SPISend(0xFF);
 248              		.loc 1 123 0 discriminator 2
 249 0160 FF00A0E3 		mov	r0, #255
 250 0164 FEFFFFEB 		bl	SPISend
 251 0168 0400CDE7 		strb	r0, [sp, r4]
 252 016c 0010A0E1 		mov	r1, r0
 124:../Library/lpcusb/blockdev_sd.c ****         rprintf(" %02x", iob[i]);
 253              		.loc 1 124 0 discriminator 2
 254 0170 014084E2 		add	r4, r4, #1
 255 0174 9C009FE5 		ldr	r0, .L27+4
 256 0178 FEFFFFEB 		bl	rprintf
 121:../Library/lpcusb/blockdev_sd.c ****     for (i = 0; i < 16; i++)
 257              		.loc 1 121 0 discriminator 2
 258 017c 100054E3 		cmp	r4, #16
 259 0180 F6FFFF1A 		bne	.L24
 125:../Library/lpcusb/blockdev_sd.c ****     }
 126:../Library/lpcusb/blockdev_sd.c ****     rprintf("\n");
 260              		.loc 1 126 0
 261 0184 90009FE5 		ldr	r0, .L27+8
 262 0188 FEFFFFEB 		bl	rprintf
 127:../Library/lpcusb/blockdev_sd.c **** 
 128:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);
 263              		.loc 1 128 0
 264 018c FF00A0E3 		mov	r0, #255
 265 0190 FEFFFFEB 		bl	SPISend
 129:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);
 266              		.loc 1 129 0
 267 0194 FF00A0E3 		mov	r0, #255
 268 0198 FEFFFFEB 		bl	SPISend
 130:../Library/lpcusb/blockdev_sd.c **** 
 131:../Library/lpcusb/blockdev_sd.c ****     c_size = iob[6] & 0x03;     // bits 1..0
 132:../Library/lpcusb/blockdev_sd.c ****     c_size <<= 10;
 133:../Library/lpcusb/blockdev_sd.c ****     c_size += (U16) iob[7] << 2;
 269              		.loc 1 133 0
 270 019c 0720DDE5 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 134:../Library/lpcusb/blockdev_sd.c ****     c_size += iob[8] >> 6;
 271              		.loc 1 134 0
 272 01a0 0830DDE5 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 131:../Library/lpcusb/blockdev_sd.c ****     c_size = iob[6] & 0x03;     // bits 1..0
 273              		.loc 1 131 0
 274 01a4 0610DDE5 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 133:../Library/lpcusb/blockdev_sd.c ****     c_size += (U16) iob[7] << 2;
 275              		.loc 1 133 0
 276 01a8 0221A0E1 		mov	r2, r2, asl #2
 277 01ac 232382E0 		add	r2, r2, r3, lsr #6
 131:../Library/lpcusb/blockdev_sd.c ****     c_size = iob[6] & 0x03;     // bits 1..0
 278              		.loc 1 131 0
 279 01b0 031001E2 		and	r1, r1, #3
 280              	.LVL30:
 135:../Library/lpcusb/blockdev_sd.c **** 
 136:../Library/lpcusb/blockdev_sd.c ****     by = iob[5] & 0x0F;
 137:../Library/lpcusb/blockdev_sd.c ****     read_bl_len = 1 << by;
 138:../Library/lpcusb/blockdev_sd.c **** 
 139:../Library/lpcusb/blockdev_sd.c ****     by = iob[9] & 0x03;
 140:../Library/lpcusb/blockdev_sd.c ****     by <<= 1;
 141:../Library/lpcusb/blockdev_sd.c ****     by += iob[10] >> 7;
 142:../Library/lpcusb/blockdev_sd.c **** 
 143:../Library/lpcusb/blockdev_sd.c ****     c_size_mult = 1 << (2 + by);
 144:../Library/lpcusb/blockdev_sd.c **** 
 145:../Library/lpcusb/blockdev_sd.c ****     *pdwDriveSize = (U32) (c_size + 1) * (U32) c_size_mult *(U32) read_bl_len;
 281              		.loc 1 145 0
 282 01b4 011582E0 		add	r1, r2, r1, asl #10
 283              	.LVL31:
 136:../Library/lpcusb/blockdev_sd.c ****     by = iob[5] & 0x0F;
 284              		.loc 1 136 0
 285 01b8 0520DDE5 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 137:../Library/lpcusb/blockdev_sd.c ****     read_bl_len = 1 << by;
 286              		.loc 1 137 0
 287 01bc 0130A0E3 		mov	r3, #1
 136:../Library/lpcusb/blockdev_sd.c ****     by = iob[5] & 0x0F;
 288              		.loc 1 136 0
 289 01c0 0F2002E2 		and	r2, r2, #15
 137:../Library/lpcusb/blockdev_sd.c ****     read_bl_len = 1 << by;
 290              		.loc 1 137 0
 291 01c4 1322A0E1 		mov	r2, r3, asl r2
 292              		.loc 1 145 0
 293 01c8 0228A0E1 		mov	r2, r2, asl #16
 294 01cc 011081E2 		add	r1, r1, #1
 295 01d0 2228A0E1 		mov	r2, r2, lsr #16
 296 01d4 910202E0 		mul	r2, r1, r2
 139:../Library/lpcusb/blockdev_sd.c ****     by = iob[9] & 0x03;
 297              		.loc 1 139 0
 298 01d8 0900DDE5 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 141:../Library/lpcusb/blockdev_sd.c ****     by += iob[10] >> 7;
 299              		.loc 1 141 0
 300 01dc 0A10DDE5 		ldrb	r1, [sp, #10]	@ zero_extendqisi2
 139:../Library/lpcusb/blockdev_sd.c ****     by = iob[9] & 0x03;
 301              		.loc 1 139 0
 302 01e0 030000E2 		and	r0, r0, #3
 303              	.LVL32:
 141:../Library/lpcusb/blockdev_sd.c ****     by += iob[10] >> 7;
 304              		.loc 1 141 0
 305 01e4 A113A0E1 		mov	r1, r1, lsr #7
 306              	.LVL33:
 143:../Library/lpcusb/blockdev_sd.c ****     c_size_mult = 1 << (2 + by);
 307              		.loc 1 143 0
 308 01e8 801081E0 		add	r1, r1, r0, asl #1
 309 01ec 021081E2 		add	r1, r1, #2
 310 01f0 1331A0E1 		mov	r3, r3, asl r1
 311              		.loc 1 145 0
 312 01f4 0338A0E1 		mov	r3, r3, asl #16
 313 01f8 2338A0E1 		mov	r3, r3, lsr #16
 314 01fc 920303E0 		mul	r3, r2, r3
 146:../Library/lpcusb/blockdev_sd.c **** 
 147:../Library/lpcusb/blockdev_sd.c ****     return 0;
 148:../Library/lpcusb/blockdev_sd.c **** }
 315              		.loc 1 148 0
 316 0200 0000A0E3 		mov	r0, #0
 145:../Library/lpcusb/blockdev_sd.c ****     *pdwDriveSize = (U32) (c_size + 1) * (U32) c_size_mult *(U32) read_bl_len;
 317              		.loc 1 145 0
 318 0204 003085E5 		str	r3, [r5, #0]
 319              		.loc 1 148 0
 320 0208 10D08DE2 		add	sp, sp, #16
 321 020c 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 322 0210 1EFF2FE1 		bx	lr
 323              	.L28:
 324              		.align	2
 325              	.L27:
 326 0214 C5000000 		.word	.LC8
 327 0218 CA000000 		.word	.LC9
 328 021c D0000000 		.word	.LC10
 329              		.cfi_endproc
 330              	.LFE3:
 332              		.align	2
 333              		.global	BlockDevInit
 335              	BlockDevInit:
 336              	.LFB6:
 149:../Library/lpcusb/blockdev_sd.c **** 
 150:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 151:../Library/lpcusb/blockdev_sd.c **** 
 152:../Library/lpcusb/blockdev_sd.c **** static U16 Resp16b(void)
 153:../Library/lpcusb/blockdev_sd.c **** {
 154:../Library/lpcusb/blockdev_sd.c ****     U16 resp;
 155:../Library/lpcusb/blockdev_sd.c **** 
 156:../Library/lpcusb/blockdev_sd.c ****     resp = (Resp8b() << 8) & 0xff00;
 157:../Library/lpcusb/blockdev_sd.c ****     resp |= SPISend(0xff);
 158:../Library/lpcusb/blockdev_sd.c **** 
 159:../Library/lpcusb/blockdev_sd.c ****     return resp;
 160:../Library/lpcusb/blockdev_sd.c **** }
 161:../Library/lpcusb/blockdev_sd.c **** 
 162:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 163:../Library/lpcusb/blockdev_sd.c **** 
 164:../Library/lpcusb/blockdev_sd.c **** static int State(void)
 165:../Library/lpcusb/blockdev_sd.c **** {
 166:../Library/lpcusb/blockdev_sd.c ****     U16 value;
 167:../Library/lpcusb/blockdev_sd.c **** 
 168:../Library/lpcusb/blockdev_sd.c ****     Command(CMD_SENDSTATUS, 0);
 169:../Library/lpcusb/blockdev_sd.c ****     value = Resp16b();
 170:../Library/lpcusb/blockdev_sd.c **** 
 171:../Library/lpcusb/blockdev_sd.c ****     switch (value)
 172:../Library/lpcusb/blockdev_sd.c ****     {
 173:../Library/lpcusb/blockdev_sd.c ****         case 0x0000: return 1;
 174:../Library/lpcusb/blockdev_sd.c ****         case 0x0001: rprintf("Card is Locked.\n");                                                 
 175:../Library/lpcusb/blockdev_sd.c ****         case 0x0002: rprintf("WP Erase Skip, Lock/Unlock Cmd Failed.\n");                          
 176:../Library/lpcusb/blockdev_sd.c ****         case 0x0004: rprintf("General / Unknown error -- card broken?.\n");                        
 177:../Library/lpcusb/blockdev_sd.c ****         case 0x0008: rprintf("Internal card controller error.\n");                                 
 178:../Library/lpcusb/blockdev_sd.c ****         case 0x0010: rprintf("Card internal ECC was applied, but failed to correct the data.\n");  
 179:../Library/lpcusb/blockdev_sd.c ****         case 0x0020: rprintf("Write protect violation.\n");                                        
 180:../Library/lpcusb/blockdev_sd.c ****         case 0x0040: rprintf("An invalid selection, sectors for erase.\n");                        
 181:../Library/lpcusb/blockdev_sd.c ****         case 0x0080: rprintf("Out of Range, CSD_Overwrite.\n");                                    
 182:../Library/lpcusb/blockdev_sd.c ****             default:
 183:../Library/lpcusb/blockdev_sd.c ****             if (value > 0x00FF)
 184:../Library/lpcusb/blockdev_sd.c ****             {
 185:../Library/lpcusb/blockdev_sd.c ****                 Resp8bError((U8) (value >> 8));
 186:../Library/lpcusb/blockdev_sd.c ****             }
 187:../Library/lpcusb/blockdev_sd.c ****             else
 188:../Library/lpcusb/blockdev_sd.c ****             {
 189:../Library/lpcusb/blockdev_sd.c ****                 rprintf("Unknown error: 0x%x (see SanDisk docs p5-14).\n", value);
 190:../Library/lpcusb/blockdev_sd.c ****             }
 191:../Library/lpcusb/blockdev_sd.c ****             break;
 192:../Library/lpcusb/blockdev_sd.c ****     }
 193:../Library/lpcusb/blockdev_sd.c ****     return -1;
 194:../Library/lpcusb/blockdev_sd.c **** }
 195:../Library/lpcusb/blockdev_sd.c **** 
 196:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 197:../Library/lpcusb/blockdev_sd.c **** 
 198:../Library/lpcusb/blockdev_sd.c **** 
 199:../Library/lpcusb/blockdev_sd.c **** int BlockDevInit(void)
 200:../Library/lpcusb/blockdev_sd.c **** {
 337              		.loc 1 200 0
 338              		.cfi_startproc
 339              		@ Function supports interworking.
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0220 30402DE9 		stmfd	sp!, {r4, r5, lr}
 343              	.LCFI4:
 344              		.cfi_def_cfa_offset 12
 345              		.cfi_offset 14, -4
 346              		.cfi_offset 5, -8
 347              		.cfi_offset 4, -12
 201:../Library/lpcusb/blockdev_sd.c ****     int i;
 202:../Library/lpcusb/blockdev_sd.c ****     U8 resp;
 203:../Library/lpcusb/blockdev_sd.c **** 
 204:../Library/lpcusb/blockdev_sd.c ****     SPIInit();              /* init at low speed */
 348              		.loc 1 204 0
 349 0224 FEFFFFEB 		bl	SPIInit
 350              	.LVL34:
 351 0228 6540A0E3 		mov	r4, #101
 352              	.LVL35:
 353              	.L31:
 205:../Library/lpcusb/blockdev_sd.c **** 
 206:../Library/lpcusb/blockdev_sd.c ****     /* Try to send reset command up to 100 times */
 207:../Library/lpcusb/blockdev_sd.c ****     i = 100;
 208:../Library/lpcusb/blockdev_sd.c ****     do
 209:../Library/lpcusb/blockdev_sd.c ****     {
 210:../Library/lpcusb/blockdev_sd.c ****         Command(CMD_GOIDLESTATE, 0);
 354              		.loc 1 210 0 discriminator 1
 355 022c 0000A0E3 		mov	r0, #0
 356 0230 0010A0E1 		mov	r1, r0
 357 0234 7CFFFFEB 		bl	Command
 211:../Library/lpcusb/blockdev_sd.c ****         resp = Resp8b();
 358              		.loc 1 211 0 discriminator 1
 359 0238 70FFFFEB 		bl	Resp8b
 360              	.LVL36:
 212:../Library/lpcusb/blockdev_sd.c ****     }
 213:../Library/lpcusb/blockdev_sd.c ****     while (resp != 1 && i--);
 361              		.loc 1 213 0 discriminator 1
 362 023c 010050E3 		cmp	r0, #1
 363 0240 0900000A 		beq	.L52
 364 0244 014054E2 		subs	r4, r4, #1
 365 0248 F7FFFF1A 		bne	.L31
 366 024c 570000EA 		b	.L59
 367              	.L63:
 214:../Library/lpcusb/blockdev_sd.c **** 
 215:../Library/lpcusb/blockdev_sd.c ****     if (resp != 1)
 216:../Library/lpcusb/blockdev_sd.c ****     {
 217:../Library/lpcusb/blockdev_sd.c ****         if (resp == 0xff)
 218:../Library/lpcusb/blockdev_sd.c ****         {
 219:../Library/lpcusb/blockdev_sd.c ****             rprintf("resp=0xff\n");
 368              		.loc 1 219 0
 369 0250 74019FE5 		ldr	r0, .L64
 370              	.LVL37:
 371 0254 FEFFFFEB 		bl	rprintf
 220:../Library/lpcusb/blockdev_sd.c ****             return -1;
 372              		.loc 1 220 0
 373 0258 0000E0E3 		mvn	r0, #0
 374 025c 510000EA 		b	.L33
 375              	.LVL38:
 376              	.L56:
 221:../Library/lpcusb/blockdev_sd.c ****         }
 222:../Library/lpcusb/blockdev_sd.c ****         else
 223:../Library/lpcusb/blockdev_sd.c ****         {
 224:../Library/lpcusb/blockdev_sd.c ****             Resp8bError(resp);
 377              		.loc 1 224 0
 378 0260 85FFFFEB 		bl	Resp8bError
 379              	.LVL39:
 225:../Library/lpcusb/blockdev_sd.c ****             rprintf("resp!=0xff\n");
 380              		.loc 1 225 0
 381 0264 64019FE5 		ldr	r0, .L64+4
 382 0268 540000EA 		b	.L57
 383              	.LVL40:
 384              	.L52:
 213:../Library/lpcusb/blockdev_sd.c ****     while (resp != 1 && i--);
 385              		.loc 1 213 0
 386 026c 60519FE5 		ldr	r5, .L64+8
 387              	.LVL41:
 388              	.L30:
 226:../Library/lpcusb/blockdev_sd.c ****             return -2;
 227:../Library/lpcusb/blockdev_sd.c ****         }
 228:../Library/lpcusb/blockdev_sd.c ****     }
 229:../Library/lpcusb/blockdev_sd.c **** 
 230:../Library/lpcusb/blockdev_sd.c ****     /* Wait till card is ready initialising (returns 0 on CMD_1) */
 231:../Library/lpcusb/blockdev_sd.c ****     /* Try up to 32000 times. */
 232:../Library/lpcusb/blockdev_sd.c ****     i = 32000;
 233:../Library/lpcusb/blockdev_sd.c ****     do
 234:../Library/lpcusb/blockdev_sd.c ****     {
 235:../Library/lpcusb/blockdev_sd.c ****         Command(CMD_SENDOPCOND, 0);
 389              		.loc 1 235 0
 390 0270 0100A0E3 		mov	r0, #1
 391 0274 0010A0E3 		mov	r1, #0
 392 0278 6BFFFFEB 		bl	Command
 236:../Library/lpcusb/blockdev_sd.c **** 
 237:../Library/lpcusb/blockdev_sd.c ****         resp = Resp8b();
 393              		.loc 1 237 0
 394 027c 5FFFFFEB 		bl	Resp8b
 395              	.LVL42:
 238:../Library/lpcusb/blockdev_sd.c ****         if (resp != 0)
 396              		.loc 1 238 0
 397 0280 004050E2 		subs	r4, r0, #0
 398 0284 0500000A 		beq	.L34
 239:../Library/lpcusb/blockdev_sd.c ****         {
 240:../Library/lpcusb/blockdev_sd.c ****             Resp8bError(resp);
 399              		.loc 1 240 0
 400 0288 7BFFFFEB 		bl	Resp8bError
 401              	.LVL43:
 241:../Library/lpcusb/blockdev_sd.c ****         }
 242:../Library/lpcusb/blockdev_sd.c ****     }
 243:../Library/lpcusb/blockdev_sd.c ****     while (resp == 1 && i--);
 402              		.loc 1 243 0
 403 028c 010054E3 		cmp	r4, #1
 404 0290 2400001A 		bne	.L35
 405              		.loc 1 243 0 is_stmt 0 discriminator 1
 406 0294 015055E2 		subs	r5, r5, #1
 407 0298 F4FFFF1A 		bne	.L30
 408 029c 210000EA 		b	.L35
 409              	.LVL44:
 410              	.L34:
 244:../Library/lpcusb/blockdev_sd.c **** 
 245:../Library/lpcusb/blockdev_sd.c ****     if (resp != 0)
 246:../Library/lpcusb/blockdev_sd.c ****     {
 247:../Library/lpcusb/blockdev_sd.c ****         Resp8bError(resp);
 248:../Library/lpcusb/blockdev_sd.c ****         return -3;
 249:../Library/lpcusb/blockdev_sd.c ****     }
 250:../Library/lpcusb/blockdev_sd.c **** 
 251:../Library/lpcusb/blockdev_sd.c ****     /* increase speed after init */
 252:../Library/lpcusb/blockdev_sd.c ****     SPISetSpeed(SPI_PRESCALE_MIN);
 411              		.loc 1 252 0 is_stmt 1
 412 02a0 0800A0E3 		mov	r0, #8
 413              	.LVL45:
 414 02a4 FEFFFFEB 		bl	SPISetSpeed
 415              	.LBB8:
 416              	.LBB9:
 168:../Library/lpcusb/blockdev_sd.c ****     Command(CMD_SENDSTATUS, 0);
 417              		.loc 1 168 0
 418 02a8 0410A0E1 		mov	r1, r4
 419 02ac 0D00A0E3 		mov	r0, #13
 420 02b0 5DFFFFEB 		bl	Command
 421              	.LBB10:
 422              	.LBB11:
 156:../Library/lpcusb/blockdev_sd.c ****     resp = (Resp8b() << 8) & 0xff00;
 423              		.loc 1 156 0
 424 02b4 51FFFFEB 		bl	Resp8b
 425 02b8 0050A0E1 		mov	r5, r0
 426              	.LVL46:
 157:../Library/lpcusb/blockdev_sd.c ****     resp |= SPISend(0xff);
 427              		.loc 1 157 0
 428 02bc FF00A0E3 		mov	r0, #255
 429              	.LVL47:
 430 02c0 FEFFFFEB 		bl	SPISend
 431 02c4 051480E1 		orr	r1, r0, r5, asl #8
 432 02c8 0118A0E1 		mov	r1, r1, asl #16
 433 02cc 2118A0E1 		mov	r1, r1, lsr #16
 434              	.LVL48:
 435              	.LBE11:
 436              	.LBE10:
 171:../Library/lpcusb/blockdev_sd.c ****     switch (value)
 437              		.loc 1 171 0
 438 02d0 080051E3 		cmp	r1, #8
 439 02d4 1D00000A 		beq	.L41
 440 02d8 0700008A 		bhi	.L46
 441 02dc 010051E3 		cmp	r1, #1
 442 02e0 1400000A 		beq	.L38
 443 02e4 2C00003A 		bcc	.L37
 444 02e8 020051E3 		cmp	r1, #2
 445 02ec 1300000A 		beq	.L39
 446 02f0 040051E3 		cmp	r1, #4
 447 02f4 2000001A 		bne	.L36
 448 02f8 120000EA 		b	.L60
 449              	.L46:
 450 02fc 200051E3 		cmp	r1, #32
 451 0300 1600000A 		beq	.L43
 452 0304 0200008A 		bhi	.L47
 453 0308 100051E3 		cmp	r1, #16
 454 030c 1A00001A 		bne	.L36
 455 0310 100000EA 		b	.L61
 456              	.L47:
 457 0314 400051E3 		cmp	r1, #64
 458 0318 1200000A 		beq	.L44
 459 031c 800051E3 		cmp	r1, #128
 460 0320 1500001A 		bne	.L36
 461 0324 110000EA 		b	.L62
 462              	.LVL49:
 463              	.L35:
 464              	.LBE9:
 465              	.LBE8:
 247:../Library/lpcusb/blockdev_sd.c ****         Resp8bError(resp);
 466              		.loc 1 247 0
 467 0328 0400A0E1 		mov	r0, r4
 468 032c 52FFFFEB 		bl	Resp8bError
 248:../Library/lpcusb/blockdev_sd.c ****         return -3;
 469              		.loc 1 248 0
 470 0330 0200E0E3 		mvn	r0, #2
 471 0334 1B0000EA 		b	.L33
 472              	.LVL50:
 473              	.L38:
 474              	.LBB13:
 475              	.LBB12:
 174:../Library/lpcusb/blockdev_sd.c ****         case 0x0001: rprintf("Card is Locked.\n");                                                 
 476              		.loc 1 174 0
 477 0338 98009FE5 		ldr	r0, .L64+12
 478 033c 0C0000EA 		b	.L58
 479              	.L39:
 175:../Library/lpcusb/blockdev_sd.c ****         case 0x0002: rprintf("WP Erase Skip, Lock/Unlock Cmd Failed.\n");                          
 480              		.loc 1 175 0
 481 0340 94009FE5 		ldr	r0, .L64+16
 482 0344 0A0000EA 		b	.L58
 483              	.L60:
 176:../Library/lpcusb/blockdev_sd.c ****         case 0x0004: rprintf("General / Unknown error -- card broken?.\n");                        
 484              		.loc 1 176 0
 485 0348 90009FE5 		ldr	r0, .L64+20
 486 034c 080000EA 		b	.L58
 487              	.L41:
 177:../Library/lpcusb/blockdev_sd.c ****         case 0x0008: rprintf("Internal card controller error.\n");                                 
 488              		.loc 1 177 0
 489 0350 8C009FE5 		ldr	r0, .L64+24
 490 0354 060000EA 		b	.L58
 491              	.L61:
 178:../Library/lpcusb/blockdev_sd.c ****         case 0x0010: rprintf("Card internal ECC was applied, but failed to correct the data.\n");  
 492              		.loc 1 178 0
 493 0358 88009FE5 		ldr	r0, .L64+28
 494 035c 040000EA 		b	.L58
 495              	.L43:
 179:../Library/lpcusb/blockdev_sd.c ****         case 0x0020: rprintf("Write protect violation.\n");                                        
 496              		.loc 1 179 0
 497 0360 84009FE5 		ldr	r0, .L64+32
 498 0364 020000EA 		b	.L58
 499              	.L44:
 180:../Library/lpcusb/blockdev_sd.c ****         case 0x0040: rprintf("An invalid selection, sectors for erase.\n");                        
 500              		.loc 1 180 0
 501 0368 80009FE5 		ldr	r0, .L64+36
 502 036c 000000EA 		b	.L58
 503              	.L62:
 181:../Library/lpcusb/blockdev_sd.c ****         case 0x0080: rprintf("Out of Range, CSD_Overwrite.\n");                                    
 504              		.loc 1 181 0
 505 0370 7C009FE5 		ldr	r0, .L64+40
 506              	.L58:
 507 0374 FEFFFFEB 		bl	rprintf
 508              	.LVL51:
 509 0378 0F0000EA 		b	.L48
 510              	.LVL52:
 511              	.L36:
 183:../Library/lpcusb/blockdev_sd.c ****             if (value > 0x00FF)
 512              		.loc 1 183 0
 513 037c FF0051E3 		cmp	r1, #255
 514 0380 0200009A 		bls	.L49
 185:../Library/lpcusb/blockdev_sd.c ****                 Resp8bError((U8) (value >> 8));
 515              		.loc 1 185 0
 516 0384 2104A0E1 		mov	r0, r1, lsr #8
 517 0388 3BFFFFEB 		bl	Resp8bError
 518              	.LVL53:
 519 038c 0A0000EA 		b	.L48
 520              	.LVL54:
 521              	.L49:
 189:../Library/lpcusb/blockdev_sd.c ****                 rprintf("Unknown error: 0x%x (see SanDisk docs p5-14).\n", value);
 522              		.loc 1 189 0
 523 0390 60009FE5 		ldr	r0, .L64+44
 524 0394 FEFFFFEB 		bl	rprintf
 525              	.LVL55:
 526 0398 070000EA 		b	.L48
 527              	.LVL56:
 528              	.L37:
 529              	.LBE12:
 530              	.LBE13:
 253:../Library/lpcusb/blockdev_sd.c **** 
 254:../Library/lpcusb/blockdev_sd.c ****     if (State() < 0)
 255:../Library/lpcusb/blockdev_sd.c ****     {
 256:../Library/lpcusb/blockdev_sd.c ****         rprintf("Card didn't return the ready state, breaking up...\n");
 257:../Library/lpcusb/blockdev_sd.c ****         return -2;
 258:../Library/lpcusb/blockdev_sd.c ****     }
 259:../Library/lpcusb/blockdev_sd.c **** 
 260:../Library/lpcusb/blockdev_sd.c ****     rprintf("SD Init done...\n");
 531              		.loc 1 260 0
 532 039c 58009FE5 		ldr	r0, .L64+48
 533 03a0 FEFFFFEB 		bl	rprintf
 534              	.LVL57:
 261:../Library/lpcusb/blockdev_sd.c **** 
 262:../Library/lpcusb/blockdev_sd.c ****     return 0;
 535              		.loc 1 262 0
 536 03a4 0400A0E1 		mov	r0, r4
 537              	.L33:
 263:../Library/lpcusb/blockdev_sd.c **** }
 538              		.loc 1 263 0
 539 03a8 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 540 03ac 1EFF2FE1 		bx	lr
 541              	.LVL58:
 542              	.L59:
 217:../Library/lpcusb/blockdev_sd.c ****         if (resp == 0xff)
 543              		.loc 1 217 0
 544 03b0 FF0050E3 		cmp	r0, #255
 545 03b4 A9FFFF1A 		bne	.L56
 546 03b8 A4FFFFEA 		b	.L63
 547              	.LVL59:
 548              	.L48:
 256:../Library/lpcusb/blockdev_sd.c ****         rprintf("Card didn't return the ready state, breaking up...\n");
 549              		.loc 1 256 0
 550 03bc 3C009FE5 		ldr	r0, .L64+52
 551              	.L57:
 552 03c0 FEFFFFEB 		bl	rprintf
 257:../Library/lpcusb/blockdev_sd.c ****         return -2;
 553              		.loc 1 257 0
 554 03c4 0100E0E3 		mvn	r0, #1
 555 03c8 F6FFFFEA 		b	.L33
 556              	.L65:
 557              		.align	2
 558              	.L64:
 559 03cc D2000000 		.word	.LC11
 560 03d0 DD000000 		.word	.LC12
 561 03d4 017D0000 		.word	32001
 562 03d8 E9000000 		.word	.LC13
 563 03dc FA000000 		.word	.LC14
 564 03e0 22010000 		.word	.LC15
 565 03e4 4C010000 		.word	.LC16
 566 03e8 6D010000 		.word	.LC17
 567 03ec AD010000 		.word	.LC18
 568 03f0 C7010000 		.word	.LC19
 569 03f4 F1010000 		.word	.LC20
 570 03f8 0F020000 		.word	.LC21
 571 03fc 3E020000 		.word	.LC22
 572 0400 4F020000 		.word	.LC23
 573              		.cfi_endproc
 574              	.LFE6:
 576              		.align	2
 577              		.global	BlockDevWrite
 579              	BlockDevWrite:
 580              	.LFB7:
 264:../Library/lpcusb/blockdev_sd.c **** 
 265:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 266:../Library/lpcusb/blockdev_sd.c **** 
 267:../Library/lpcusb/blockdev_sd.c **** 
 268:../Library/lpcusb/blockdev_sd.c **** 
 269:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 270:../Library/lpcusb/blockdev_sd.c **** 
 271:../Library/lpcusb/blockdev_sd.c **** 
 272:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 273:../Library/lpcusb/blockdev_sd.c **** 
 274:../Library/lpcusb/blockdev_sd.c **** /* ****************************************************************************
 275:../Library/lpcusb/blockdev_sd.c ****  * WAIT ?? -- FIXME
 276:../Library/lpcusb/blockdev_sd.c ****  * CMD_WRITE
 277:../Library/lpcusb/blockdev_sd.c ****  * WAIT
 278:../Library/lpcusb/blockdev_sd.c ****  * CARD RESP
 279:../Library/lpcusb/blockdev_sd.c ****  * WAIT
 280:../Library/lpcusb/blockdev_sd.c ****  * DATA BLOCK OUT
 281:../Library/lpcusb/blockdev_sd.c ****  *      START BLOCK
 282:../Library/lpcusb/blockdev_sd.c ****  *      DATA
 283:../Library/lpcusb/blockdev_sd.c ****  *      CHKS (2B)
 284:../Library/lpcusb/blockdev_sd.c ****  * BUSY...
 285:../Library/lpcusb/blockdev_sd.c ****  */
 286:../Library/lpcusb/blockdev_sd.c **** 
 287:../Library/lpcusb/blockdev_sd.c **** int BlockDevWrite(U32 dwAddress, U8 * pbBuf)
 288:../Library/lpcusb/blockdev_sd.c **** {
 581              		.loc 1 288 0
 582              		.cfi_startproc
 583              		@ Function supports interworking.
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL60:
 587 0404 10402DE9 		stmfd	sp!, {r4, lr}
 588              	.LCFI5:
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 14, -4
 591              		.cfi_offset 4, -8
 592              		.loc 1 288 0
 593 0408 0140A0E1 		mov	r4, r1
 289:../Library/lpcusb/blockdev_sd.c ****     U32 place;
 290:../Library/lpcusb/blockdev_sd.c ****     U16 t = 0;
 291:../Library/lpcusb/blockdev_sd.c **** 
 292:../Library/lpcusb/blockdev_sd.c ****     place = 512 * dwAddress;
 594              		.loc 1 292 0
 595 040c 8014A0E1 		mov	r1, r0, asl #9
 596              	.LVL61:
 293:../Library/lpcusb/blockdev_sd.c ****     Command(CMD_WRITE, place);
 597              		.loc 1 293 0
 598 0410 1800A0E3 		mov	r0, #24
 599              	.LVL62:
 600 0414 04FFFFEB 		bl	Command
 601              	.LVL63:
 294:../Library/lpcusb/blockdev_sd.c **** 
 295:../Library/lpcusb/blockdev_sd.c ****     Resp8b();               /* Card response */
 602              		.loc 1 295 0
 603 0418 F8FEFFEB 		bl	Resp8b
 296:../Library/lpcusb/blockdev_sd.c **** 
 297:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xfe);          /* Start block */
 604              		.loc 1 297 0
 605 041c FE00A0E3 		mov	r0, #254
 606 0420 FEFFFFEB 		bl	SPISend
 298:../Library/lpcusb/blockdev_sd.c ****     SPISendN(pbBuf, 512);
 607              		.loc 1 298 0
 608 0424 021CA0E3 		mov	r1, #512
 609 0428 0400A0E1 		mov	r0, r4
 610 042c FEFFFFEB 		bl	SPISendN
 299:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);          /* Checksum part 1 */
 611              		.loc 1 299 0
 612 0430 FF00A0E3 		mov	r0, #255
 613 0434 FEFFFFEB 		bl	SPISend
 300:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);          /* Checksum part 2 */
 614              		.loc 1 300 0
 615 0438 FF00A0E3 		mov	r0, #255
 616 043c FEFFFFEB 		bl	SPISend
 301:../Library/lpcusb/blockdev_sd.c **** 
 302:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);
 617              		.loc 1 302 0
 618 0440 FF00A0E3 		mov	r0, #255
 619 0444 FEFFFFEB 		bl	SPISend
 620              	.LVL64:
 621              	.L67:
 303:../Library/lpcusb/blockdev_sd.c **** 
 304:../Library/lpcusb/blockdev_sd.c ****     while (SPISend(0xff) != 0xff)
 622              		.loc 1 304 0 discriminator 1
 623 0448 FF00A0E3 		mov	r0, #255
 624 044c FEFFFFEB 		bl	SPISend
 625 0450 FF0050E3 		cmp	r0, #255
 626 0454 FBFFFF1A 		bne	.L67
 305:../Library/lpcusb/blockdev_sd.c ****     {
 306:../Library/lpcusb/blockdev_sd.c ****         t++;
 307:../Library/lpcusb/blockdev_sd.c ****     }
 308:../Library/lpcusb/blockdev_sd.c **** 
 309:../Library/lpcusb/blockdev_sd.c ****     return 0;
 310:../Library/lpcusb/blockdev_sd.c **** }
 627              		.loc 1 310 0
 628 0458 0000A0E3 		mov	r0, #0
 629 045c 1040BDE8 		ldmfd	sp!, {r4, lr}
 630 0460 1EFF2FE1 		bx	lr
 631              		.cfi_endproc
 632              	.LFE7:
 634              		.align	2
 635              		.global	BlockDevRead
 637              	BlockDevRead:
 638              	.LFB8:
 311:../Library/lpcusb/blockdev_sd.c **** 
 312:../Library/lpcusb/blockdev_sd.c **** /*****************************************************************************/
 313:../Library/lpcusb/blockdev_sd.c **** 
 314:../Library/lpcusb/blockdev_sd.c **** /* ****************************************************************************
 315:../Library/lpcusb/blockdev_sd.c ****  * WAIT ?? -- FIXME
 316:../Library/lpcusb/blockdev_sd.c ****  * CMD_CMD_
 317:../Library/lpcusb/blockdev_sd.c ****  * WAIT
 318:../Library/lpcusb/blockdev_sd.c ****  * CARD RESP
 319:../Library/lpcusb/blockdev_sd.c ****  * WAIT
 320:../Library/lpcusb/blockdev_sd.c ****  * DATA BLOCK IN
 321:../Library/lpcusb/blockdev_sd.c ****  *      START BLOCK
 322:../Library/lpcusb/blockdev_sd.c ****  *      DATA
 323:../Library/lpcusb/blockdev_sd.c ****  *      CHKS (2B)
 324:../Library/lpcusb/blockdev_sd.c ****  */
 325:../Library/lpcusb/blockdev_sd.c **** 
 326:../Library/lpcusb/blockdev_sd.c **** int BlockDevRead(U32 dwAddress, U8 * pbBuf)
 327:../Library/lpcusb/blockdev_sd.c **** {
 639              		.loc 1 327 0
 640              		.cfi_startproc
 641              		@ Function supports interworking.
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              	.LVL65:
 645 0464 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 646              	.LCFI6:
 647              		.cfi_def_cfa_offset 16
 648              		.cfi_offset 14, -4
 649              		.cfi_offset 6, -8
 650              		.cfi_offset 5, -12
 651              		.cfi_offset 4, -16
 652              		.loc 1 327 0
 653 0468 0150A0E1 		mov	r5, r1
 328:../Library/lpcusb/blockdev_sd.c ****     U8 cardresp;
 329:../Library/lpcusb/blockdev_sd.c ****     U8 firstblock;
 330:../Library/lpcusb/blockdev_sd.c ****     U16 fb_timeout = 0xffff;
 331:../Library/lpcusb/blockdev_sd.c ****     U32 place;
 332:../Library/lpcusb/blockdev_sd.c **** 
 333:../Library/lpcusb/blockdev_sd.c ****     place = 512 * dwAddress;
 654              		.loc 1 333 0
 655 046c 8014A0E1 		mov	r1, r0, asl #9
 656              	.LVL66:
 334:../Library/lpcusb/blockdev_sd.c ****     Command(CMD_READSINGLEBLOCK, place);
 657              		.loc 1 334 0
 658 0470 1100A0E3 		mov	r0, #17
 659              	.LVL67:
 660 0474 ECFEFFEB 		bl	Command
 661              	.LVL68:
 335:../Library/lpcusb/blockdev_sd.c **** 
 336:../Library/lpcusb/blockdev_sd.c ****     cardresp = Resp8b();        /* Card response */
 662              		.loc 1 336 0
 663 0478 E0FEFFEB 		bl	Resp8b
 664 047c 0060A0E3 		mov	r6, #0
 665 0480 0040A0E1 		mov	r4, r0
 666              	.LVL69:
 667              	.L71:
 337:../Library/lpcusb/blockdev_sd.c **** 
 338:../Library/lpcusb/blockdev_sd.c ****     /* Wait for startblock */
 339:../Library/lpcusb/blockdev_sd.c ****     do
 340:../Library/lpcusb/blockdev_sd.c ****     {
 341:../Library/lpcusb/blockdev_sd.c ****         firstblock = Resp8b();
 668              		.loc 1 341 0 discriminator 1
 669 0484 DDFEFFEB 		bl	Resp8b
 670              	.LVL70:
 342:../Library/lpcusb/blockdev_sd.c ****     }
 343:../Library/lpcusb/blockdev_sd.c ****     while (firstblock == 0xff && fb_timeout--);
 671              		.loc 1 343 0 discriminator 1
 672 0488 FF0050E3 		cmp	r0, #255
 673 048c 0200001A 		bne	.L70
 674 0490 016086E2 		add	r6, r6, #1
 675 0494 010856E3 		cmp	r6, #65536
 676 0498 F9FFFF1A 		bne	.L71
 677              	.L70:
 344:../Library/lpcusb/blockdev_sd.c **** 
 345:../Library/lpcusb/blockdev_sd.c ****     if (cardresp != 0x00 || firstblock != 0xfe)
 678              		.loc 1 345 0
 679 049c 000054E3 		cmp	r4, #0
 680 04a0 FE005003 		cmpeq	r0, #254
 681 04a4 0040A003 		moveq	r4, #0
 682 04a8 0140A013 		movne	r4, #1
 683              	.LVL71:
 684 04ac 0200000A 		beq	.L72
 346:../Library/lpcusb/blockdev_sd.c ****     {
 347:../Library/lpcusb/blockdev_sd.c ****         Resp8bError(firstblock);
 685              		.loc 1 347 0
 686 04b0 F1FEFFEB 		bl	Resp8bError
 687              	.LVL72:
 348:../Library/lpcusb/blockdev_sd.c ****         return -1;
 688              		.loc 1 348 0
 689 04b4 0000E0E3 		mvn	r0, #0
 690 04b8 070000EA 		b	.L73
 691              	.LVL73:
 692              	.L72:
 349:../Library/lpcusb/blockdev_sd.c ****     }
 350:../Library/lpcusb/blockdev_sd.c **** 
 351:../Library/lpcusb/blockdev_sd.c ****     SPIRecvN(pbBuf, 512);
 693              		.loc 1 351 0
 694 04bc 021CA0E3 		mov	r1, #512
 695 04c0 0500A0E1 		mov	r0, r5
 696              	.LVL74:
 697 04c4 FEFFFFEB 		bl	SPIRecvN
 352:../Library/lpcusb/blockdev_sd.c **** 
 353:../Library/lpcusb/blockdev_sd.c ****     /* Checksum (2 byte) - ignore for now */
 354:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);
 698              		.loc 1 354 0
 699 04c8 FF00A0E3 		mov	r0, #255
 700 04cc FEFFFFEB 		bl	SPISend
 355:../Library/lpcusb/blockdev_sd.c ****     SPISend(0xff);
 701              		.loc 1 355 0
 702 04d0 FF00A0E3 		mov	r0, #255
 703 04d4 FEFFFFEB 		bl	SPISend
 356:../Library/lpcusb/blockdev_sd.c **** 
 357:../Library/lpcusb/blockdev_sd.c ****     return 0;
 704              		.loc 1 357 0
 705 04d8 0400A0E1 		mov	r0, r4
 706              	.L73:
 358:../Library/lpcusb/blockdev_sd.c **** }
 707              		.loc 1 358 0
 708 04dc 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 709 04e0 1EFF2FE1 		bx	lr
 710              		.cfi_endproc
 711              	.LFE8:
 713              		.section	.rodata.str1.1,"aMS",%progbits,1
 714              	.LC0:
 715 0000 41726775 		.ascii	"Argument out of bounds.\012\000"
 715      6D656E74 
 715      206F7574 
 715      206F6620 
 715      626F756E 
 716              	.LC1:
 717 0019 41646472 		.ascii	"Address out of bounds.\012\000"
 717      65737320 
 717      6F757420 
 717      6F662062 
 717      6F756E64 
 718              	.LC2:
 719 0031 4572726F 		.ascii	"Error during erase sequence.\012\000"
 719      72206475 
 719      72696E67 
 719      20657261 
 719      73652073 
 720              	.LC3:
 721 004f 43524320 		.ascii	"CRC failed.\012\000"
 721      6661696C 
 721      65642E0A 
 721      00
 722              	.LC4:
 723 005c 496C6C65 		.ascii	"Illegal command.\012\000"
 723      67616C20 
 723      636F6D6D 
 723      616E642E 
 723      0A00
 724              	.LC5:
 725 006e 45726173 		.ascii	"Erase reset (see SanDisk docs p5-13).\012\000"
 725      65207265 
 725      73657420 
 725      28736565 
 725      2053616E 
 726              	.LC6:
 727 0095 2E00     		.ascii	".\000"
 728              	.LC7:
 729 0097 556E6B6E 		.ascii	"Unknown error 0x%x (see SanDisk docs p5-13).\012\000"
 729      6F776E20 
 729      6572726F 
 729      72203078 
 729      25782028 
 730              	.LC8:
 731 00c5 4353443A 		.ascii	"CSD:\000"
 731      00
 732              	.LC9:
 733 00ca 20253032 		.ascii	" %02x\000"
 733      7800
 734              	.LC10:
 735 00d0 0A00     		.ascii	"\012\000"
 736              	.LC11:
 737 00d2 72657370 		.ascii	"resp=0xff\012\000"
 737      3D307866 
 737      660A00
 738              	.LC12:
 739 00dd 72657370 		.ascii	"resp!=0xff\012\000"
 739      213D3078 
 739      66660A00 
 740              	.LC13:
 741 00e9 43617264 		.ascii	"Card is Locked.\012\000"
 741      20697320 
 741      4C6F636B 
 741      65642E0A 
 741      00
 742              	.LC14:
 743 00fa 57502045 		.ascii	"WP Erase Skip, Lock/Unlock Cmd Failed.\012\000"
 743      72617365 
 743      20536B69 
 743      702C204C 
 743      6F636B2F 
 744              	.LC15:
 745 0122 47656E65 		.ascii	"General / Unknown error -- card broken?.\012\000"
 745      72616C20 
 745      2F20556E 
 745      6B6E6F77 
 745      6E206572 
 746              	.LC16:
 747 014c 496E7465 		.ascii	"Internal card controller error.\012\000"
 747      726E616C 
 747      20636172 
 747      6420636F 
 747      6E74726F 
 748              	.LC17:
 749 016d 43617264 		.ascii	"Card internal ECC was applied, but failed to correc"
 749      20696E74 
 749      65726E61 
 749      6C204543 
 749      43207761 
 750 01a0 74207468 		.ascii	"t the data.\012\000"
 750      65206461 
 750      74612E0A 
 750      00
 751              	.LC18:
 752 01ad 57726974 		.ascii	"Write protect violation.\012\000"
 752      65207072 
 752      6F746563 
 752      74207669 
 752      6F6C6174 
 753              	.LC19:
 754 01c7 416E2069 		.ascii	"An invalid selection, sectors for erase.\012\000"
 754      6E76616C 
 754      69642073 
 754      656C6563 
 754      74696F6E 
 755              	.LC20:
 756 01f1 4F757420 		.ascii	"Out of Range, CSD_Overwrite.\012\000"
 756      6F662052 
 756      616E6765 
 756      2C204353 
 756      445F4F76 
 757              	.LC21:
 758 020f 556E6B6E 		.ascii	"Unknown error: 0x%x (see SanDisk docs p5-14).\012\000"
 758      6F776E20 
 758      6572726F 
 758      723A2030 
 758      78257820 
 759              	.LC22:
 760 023e 53442049 		.ascii	"SD Init done...\012\000"
 760      6E697420 
 760      646F6E65 
 760      2E2E2E0A 
 760      00
 761              	.LC23:
 762 024f 43617264 		.ascii	"Card didn't return the ready state, breaking up...\012"
 762      20646964 
 762      6E277420 
 762      72657475 
 762      726E2074 
 763 0282 00       		.ascii	"\000"
 764              		.text
 765              	.Letext0:
 766              		.file 2 "../Library/lpcusb/type.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 blockdev_sd.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:7      .text:0000000000000000 Resp8b
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:47     .text:000000000000002c Command
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:103    .text:000000000000007c Resp8bError
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:194    .text:0000000000000114 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:205    .text:0000000000000134 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:208    .text:0000000000000134 BlockDevGetSize
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:326    .text:0000000000000214 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:332    .text:0000000000000220 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:335    .text:0000000000000220 BlockDevInit
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:559    .text:00000000000003cc $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:576    .text:0000000000000404 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:579    .text:0000000000000404 BlockDevWrite
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cctTPsbf.s:637    .text:0000000000000464 BlockDevRead
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SPISend
SPISendN
rprintf
SPIInit
SPISetSpeed
SPIRecvN
