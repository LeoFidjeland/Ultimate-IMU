   1              		.file	"main_msc.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	HandleClassRequest:
   8              	.LFB0:
   9              		.file 1 "../Library/lpcusb/main_msc.c"
   1:../Library/lpcusb/main_msc.c **** /*
   2:../Library/lpcusb/main_msc.c ****     LPCUSB, an USB device driver for LPC microcontrollers
   3:../Library/lpcusb/main_msc.c ****     Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:../Library/lpcusb/main_msc.c **** 
   5:../Library/lpcusb/main_msc.c ****     This library is free software; you can redistribute it and/or
   6:../Library/lpcusb/main_msc.c ****     modify it under the terms of the GNU Lesser General Public
   7:../Library/lpcusb/main_msc.c ****     License as published by the Free Software Foundation; either
   8:../Library/lpcusb/main_msc.c ****     version 2.1 of the License, or (at your option) any later version.
   9:../Library/lpcusb/main_msc.c **** 
  10:../Library/lpcusb/main_msc.c ****     This library is distributed in the hope that it will be useful,
  11:../Library/lpcusb/main_msc.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../Library/lpcusb/main_msc.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:../Library/lpcusb/main_msc.c ****     Lesser General Public License for more details.
  14:../Library/lpcusb/main_msc.c **** 
  15:../Library/lpcusb/main_msc.c ****     You should have received a copy of the GNU Lesser General Public
  16:../Library/lpcusb/main_msc.c ****     License along with this library; if not, write to the Free Software
  17:../Library/lpcusb/main_msc.c ****     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:../Library/lpcusb/main_msc.c **** */
  19:../Library/lpcusb/main_msc.c **** 
  20:../Library/lpcusb/main_msc.c **** 
  21:../Library/lpcusb/main_msc.c **** #include "main_msc.h"
  22:../Library/lpcusb/main_msc.c **** #include "type.h"
  23:../Library/lpcusb/main_msc.c **** 
  24:../Library/lpcusb/main_msc.c **** #include <stdio.h>
  25:../Library/lpcusb/main_msc.c **** #include "rprintf.h"
  26:../Library/lpcusb/main_msc.c **** 
  27:../Library/lpcusb/main_msc.c **** #include "LPC214x.h"
  28:../Library/lpcusb/main_msc.c **** #include "usbapi.h"
  29:../Library/lpcusb/main_msc.c **** #include "usbdebug.h"
  30:../Library/lpcusb/main_msc.c **** 
  31:../Library/lpcusb/main_msc.c **** #include "msc_bot.h"
  32:../Library/lpcusb/main_msc.c **** #include "blockdev.h"
  33:../Library/lpcusb/main_msc.c **** 
  34:../Library/lpcusb/main_msc.c **** #define BAUD_RATE   115200
  35:../Library/lpcusb/main_msc.c **** 
  36:../Library/lpcusb/main_msc.c **** #define MAX_PACKET_SIZE 64
  37:../Library/lpcusb/main_msc.c **** 
  38:../Library/lpcusb/main_msc.c **** #define LE_WORD(x)      ((x)&0xFF),((x)>>8)
  39:../Library/lpcusb/main_msc.c **** 
  40:../Library/lpcusb/main_msc.c **** static U8 abClassReqData[4];
  41:../Library/lpcusb/main_msc.c **** 
  42:../Library/lpcusb/main_msc.c **** //static const U8 abDescriptors[] =
  43:../Library/lpcusb/main_msc.c **** static U8 abDescriptors[] =
  44:../Library/lpcusb/main_msc.c **** {
  45:../Library/lpcusb/main_msc.c **** 
  46:../Library/lpcusb/main_msc.c ****     // device descriptor
  47:../Library/lpcusb/main_msc.c ****     0x12,
  48:../Library/lpcusb/main_msc.c ****     DESC_DEVICE,
  49:../Library/lpcusb/main_msc.c ****     LE_WORD(0x0200),        // bcdUSB
  50:../Library/lpcusb/main_msc.c ****     0x00,                   // bDeviceClass
  51:../Library/lpcusb/main_msc.c ****     0x00,                   // bDeviceSubClass
  52:../Library/lpcusb/main_msc.c ****     0x00,                   // bDeviceProtocol
  53:../Library/lpcusb/main_msc.c ****     MAX_PACKET_SIZE0,       // bMaxPacketSize
  54:../Library/lpcusb/main_msc.c ****     LE_WORD(0x1b4f),        // idVendor
  55:../Library/lpcusb/main_msc.c ****     LE_WORD(0x0001),        // idProduct
  56:../Library/lpcusb/main_msc.c ****     LE_WORD(0x0100),        // bcdDevice
  57:../Library/lpcusb/main_msc.c ****     0x01,                   // iManufacturer
  58:../Library/lpcusb/main_msc.c ****     0x02,                   // iProduct
  59:../Library/lpcusb/main_msc.c ****     0x03,                   // iSerialNumber
  60:../Library/lpcusb/main_msc.c ****     0x01,                   // bNumConfigurations
  61:../Library/lpcusb/main_msc.c **** 
  62:../Library/lpcusb/main_msc.c ****     // configuration descriptor
  63:../Library/lpcusb/main_msc.c ****     0x09,
  64:../Library/lpcusb/main_msc.c ****     DESC_CONFIGURATION,
  65:../Library/lpcusb/main_msc.c ****     LE_WORD(32),            // wTotalLength
  66:../Library/lpcusb/main_msc.c ****     0x01,                   // bNumInterfaces
  67:../Library/lpcusb/main_msc.c ****     0x01,                   // bConfigurationValue
  68:../Library/lpcusb/main_msc.c ****     0x00,                   // iConfiguration
  69:../Library/lpcusb/main_msc.c ****     0xC0,                   // bmAttributes
  70:../Library/lpcusb/main_msc.c ****     0x32,                   // bMaxPower
  71:../Library/lpcusb/main_msc.c **** 
  72:../Library/lpcusb/main_msc.c ****     // interface
  73:../Library/lpcusb/main_msc.c ****     0x09,
  74:../Library/lpcusb/main_msc.c ****     DESC_INTERFACE,
  75:../Library/lpcusb/main_msc.c ****     0x00,                   // bInterfaceNumber
  76:../Library/lpcusb/main_msc.c ****     0x00,                   // bAlternateSetting
  77:../Library/lpcusb/main_msc.c ****     0x02,                   // bNumEndPoints
  78:../Library/lpcusb/main_msc.c ****     0x08,                   // bInterfaceClass = mass storage
  79:../Library/lpcusb/main_msc.c ****     0x06,                   // bInterfaceSubClass = transparent SCSI
  80:../Library/lpcusb/main_msc.c ****     0x50,                   // bInterfaceProtocol = BOT
  81:../Library/lpcusb/main_msc.c ****     0x00,                   // iInterface
  82:../Library/lpcusb/main_msc.c ****     // EP
  83:../Library/lpcusb/main_msc.c ****     0x07,
  84:../Library/lpcusb/main_msc.c ****     DESC_ENDPOINT,
  85:../Library/lpcusb/main_msc.c ****     MSC_BULK_IN_EP,         // bEndpointAddress
  86:../Library/lpcusb/main_msc.c ****     0x02,                   // bmAttributes = bulk
  87:../Library/lpcusb/main_msc.c ****     LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
  88:../Library/lpcusb/main_msc.c ****     0x00,                   // bInterval
  89:../Library/lpcusb/main_msc.c ****     // EP
  90:../Library/lpcusb/main_msc.c ****     0x07,
  91:../Library/lpcusb/main_msc.c ****     DESC_ENDPOINT,
  92:../Library/lpcusb/main_msc.c ****     MSC_BULK_OUT_EP,        // bEndpointAddress
  93:../Library/lpcusb/main_msc.c ****     0x02,                   // bmAttributes = bulk
  94:../Library/lpcusb/main_msc.c ****     LE_WORD(MAX_PACKET_SIZE),// wMaxPacketSize
  95:../Library/lpcusb/main_msc.c ****     0x00,                   // bInterval
  96:../Library/lpcusb/main_msc.c **** 
  97:../Library/lpcusb/main_msc.c ****     // string descriptors
  98:../Library/lpcusb/main_msc.c ****     0x04,
  99:../Library/lpcusb/main_msc.c ****     DESC_STRING,
 100:../Library/lpcusb/main_msc.c ****     LE_WORD(0x0409),
 101:../Library/lpcusb/main_msc.c **** 
 102:../Library/lpcusb/main_msc.c ****     0x14,
 103:../Library/lpcusb/main_msc.c ****     DESC_STRING,
 104:../Library/lpcusb/main_msc.c ****     'I', 0, 'N', 0, '2', 0, 'R', 0, 'o', 0, 'w', 0, 'i', 0, 'n', 0, 'g', 0,
 105:../Library/lpcusb/main_msc.c **** 
 106:../Library/lpcusb/main_msc.c ****     0x10,
 107:../Library/lpcusb/main_msc.c ****     DESC_STRING,
 108:../Library/lpcusb/main_msc.c ****     'D', 0, 'a', 0, 't', 0, 'a', 0, 'L', 0, 'o', 0, 'g', 0,
 109:../Library/lpcusb/main_msc.c **** 
 110:../Library/lpcusb/main_msc.c ****     0x1A,
 111:../Library/lpcusb/main_msc.c ****     DESC_STRING,
 112:../Library/lpcusb/main_msc.c ****     '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0, '0', 0,
 113:../Library/lpcusb/main_msc.c **** 
 114:../Library/lpcusb/main_msc.c ****     // terminating zero
 115:../Library/lpcusb/main_msc.c ****     0
 116:../Library/lpcusb/main_msc.c **** };
 117:../Library/lpcusb/main_msc.c **** 
 118:../Library/lpcusb/main_msc.c **** 
 119:../Library/lpcusb/main_msc.c **** /*************************************************************************
 120:../Library/lpcusb/main_msc.c ****     HandleClassRequest
 121:../Library/lpcusb/main_msc.c ****     ==================
 122:../Library/lpcusb/main_msc.c ****         Handle mass storage class request
 123:../Library/lpcusb/main_msc.c **** 
 124:../Library/lpcusb/main_msc.c **** **************************************************************************/
 125:../Library/lpcusb/main_msc.c **** static BOOL HandleClassRequest(TSetupPacket *pSetup, int *piLen, U8 **ppbData)
 126:../Library/lpcusb/main_msc.c **** {
  10              		.loc 1 126 0
  11              		.cfi_startproc
  12              		@ Function supports interworking.
  13              		@ args = 0, pretend = 0, frame = 0
  14              		@ frame_needed = 0, uses_anonymous_args = 0
  15              	.LVL0:
 127:../Library/lpcusb/main_msc.c ****     if (pSetup->wIndex != 0)
  16              		.loc 1 127 0
  17 0000 B4C0D0E1 		ldrh	ip, [r0, #4]
  18 0004 00005CE3 		cmp	ip, #0
 126:../Library/lpcusb/main_msc.c **** {
  19              		.loc 1 126 0
  20 0008 04E02DE5 		str	lr, [sp, #-4]!
  21              	.LCFI0:
  22              		.cfi_def_cfa_offset 4
  23              		.cfi_offset 14, -4
 128:../Library/lpcusb/main_msc.c ****     {
 129:../Library/lpcusb/main_msc.c ****         DBG("Invalid idx %X\n", pSetup->wIndex);
 130:../Library/lpcusb/main_msc.c ****         return FALSE;
  24              		.loc 1 130 0
  25 000c 0000A013 		movne	r0, #0
  26              	.LVL1:
 127:../Library/lpcusb/main_msc.c ****     if (pSetup->wIndex != 0)
  27              		.loc 1 127 0
  28 0010 1500001A 		bne	.L2
 131:../Library/lpcusb/main_msc.c ****     }
 132:../Library/lpcusb/main_msc.c ****     if (pSetup->wValue != 0)
  29              		.loc 1 132 0
  30 0014 B230D0E1 		ldrh	r3, [r0, #2]
  31 0018 000053E3 		cmp	r3, #0
 133:../Library/lpcusb/main_msc.c ****     {
 134:../Library/lpcusb/main_msc.c ****         DBG("Invalid val %X\n", pSetup->wValue);
 135:../Library/lpcusb/main_msc.c ****         return FALSE;
  32              		.loc 1 135 0
  33 001c 0C00A011 		movne	r0, ip
 132:../Library/lpcusb/main_msc.c ****     if (pSetup->wValue != 0)
  34              		.loc 1 132 0
  35 0020 1100001A 		bne	.L2
 136:../Library/lpcusb/main_msc.c ****     }
 137:../Library/lpcusb/main_msc.c **** 
 138:../Library/lpcusb/main_msc.c ****     switch (pSetup->bRequest)
  36              		.loc 1 138 0
  37 0024 01C0D0E5 		ldrb	ip, [r0, #1]	@ zero_extendqisi2
  38 0028 FE005CE3 		cmp	ip, #254
  39 002c 0200000A 		beq	.L3
  40 0030 FF005CE3 		cmp	ip, #255
  41 0034 0B00001A 		bne	.L10
  42 0038 040000EA 		b	.L11
  43              	.L3:
 139:../Library/lpcusb/main_msc.c ****     {
 140:../Library/lpcusb/main_msc.c **** 
 141:../Library/lpcusb/main_msc.c ****         // get max LUN
 142:../Library/lpcusb/main_msc.c ****         case 0xFE:
 143:../Library/lpcusb/main_msc.c ****             *ppbData[0] = 0;        // No LUNs
  44              		.loc 1 143 0
  45 003c 002092E5 		ldr	r2, [r2, #0]
  46              	.LVL2:
 144:../Library/lpcusb/main_msc.c ****             *piLen = 1;
  47              		.loc 1 144 0
  48 0040 0100A0E3 		mov	r0, #1
 143:../Library/lpcusb/main_msc.c ****             *ppbData[0] = 0;        // No LUNs
  49              		.loc 1 143 0
  50 0044 0030C2E5 		strb	r3, [r2, #0]
  51              		.loc 1 144 0
  52 0048 000081E5 		str	r0, [r1, #0]
 145:../Library/lpcusb/main_msc.c ****             break;
  53              		.loc 1 145 0
  54 004c 060000EA 		b	.L2
  55              	.LVL3:
  56              	.L11:
  57              	.LBB4:
  58              	.LBB5:
 146:../Library/lpcusb/main_msc.c **** 
 147:../Library/lpcusb/main_msc.c ****         // MSC reset
 148:../Library/lpcusb/main_msc.c ****         case 0xFF:
 149:../Library/lpcusb/main_msc.c ****             if (pSetup->wLength > 0)
  59              		.loc 1 149 0
  60 0050 B620D0E1 		ldrh	r2, [r0, #6]
  61              	.LVL4:
  62 0054 000052E3 		cmp	r2, #0
  63 0058 0200001A 		bne	.L10
 150:../Library/lpcusb/main_msc.c ****             {
 151:../Library/lpcusb/main_msc.c ****                 return FALSE;
 152:../Library/lpcusb/main_msc.c ****             }
 153:../Library/lpcusb/main_msc.c ****             MSCBotReset();
  64              		.loc 1 153 0
  65 005c FEFFFFEB 		bl	MSCBotReset
  66              	.LVL5:
 154:../Library/lpcusb/main_msc.c ****             break;
 155:../Library/lpcusb/main_msc.c **** 
 156:../Library/lpcusb/main_msc.c ****         default:
 157:../Library/lpcusb/main_msc.c ****             DBG("Unhandled class\n");
 158:../Library/lpcusb/main_msc.c ****             return FALSE;
 159:../Library/lpcusb/main_msc.c ****         }
 160:../Library/lpcusb/main_msc.c ****     return TRUE;
  67              		.loc 1 160 0
  68 0060 0100A0E3 		mov	r0, #1
  69 0064 000000EA 		b	.L2
  70              	.LVL6:
  71              	.L10:
  72              	.LBE5:
  73              	.LBE4:
 158:../Library/lpcusb/main_msc.c ****             return FALSE;
  74              		.loc 1 158 0
  75 0068 0300A0E1 		mov	r0, r3
  76              	.LVL7:
  77              	.L2:
 161:../Library/lpcusb/main_msc.c **** }
  78              		.loc 1 161 0
  79 006c 04E09DE4 		ldr	lr, [sp], #4
  80 0070 1EFF2FE1 		bx	lr
  81              		.cfi_endproc
  82              	.LFE0:
  84              		.align	2
  85              		.global	main_msc
  87              	main_msc:
  88              	.LFB1:
 162:../Library/lpcusb/main_msc.c **** 
 163:../Library/lpcusb/main_msc.c **** 
 164:../Library/lpcusb/main_msc.c **** /*************************************************************************
 165:../Library/lpcusb/main_msc.c ****     msc_main
 166:../Library/lpcusb/main_msc.c ****     ====
 167:../Library/lpcusb/main_msc.c **** **************************************************************************/
 168:../Library/lpcusb/main_msc.c **** int main_msc(void)
 169:../Library/lpcusb/main_msc.c **** {
  89              		.loc 1 169 0
  90              		.cfi_startproc
  91              		@ Function supports interworking.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94 0074 10402DE9 		stmfd	sp!, {r4, lr}
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 14, -4
  98              		.cfi_offset 4, -8
 170:../Library/lpcusb/main_msc.c ****     // initialise the SD card
 171:../Library/lpcusb/main_msc.c ****     BlockDevInit();
  99              		.loc 1 171 0
 100 0078 FEFFFFEB 		bl	BlockDevInit
 172:../Library/lpcusb/main_msc.c **** 
 173:../Library/lpcusb/main_msc.c ****     rprintf("Initialising USB stack\n");
 101              		.loc 1 173 0
 102 007c 6C009FE5 		ldr	r0, .L15
 103 0080 FEFFFFEB 		bl	rprintf
 174:../Library/lpcusb/main_msc.c **** 
 175:../Library/lpcusb/main_msc.c ****     // initialise stack
 176:../Library/lpcusb/main_msc.c ****     USBInit();
 104              		.loc 1 176 0
 105 0084 FEFFFFEB 		bl	USBInit
 177:../Library/lpcusb/main_msc.c **** 
 178:../Library/lpcusb/main_msc.c ****     // enable bulk-in interrupts on NAKs
 179:../Library/lpcusb/main_msc.c ****     // these are required to get the BOT protocol going again after a STALL
 180:../Library/lpcusb/main_msc.c ****     USBHwNakIntEnable(INACK_BI);
 106              		.loc 1 180 0
 107 0088 2000A0E3 		mov	r0, #32
 108 008c FEFFFFEB 		bl	USBHwNakIntEnable
 181:../Library/lpcusb/main_msc.c **** 
 182:../Library/lpcusb/main_msc.c ****     // register descriptors
 183:../Library/lpcusb/main_msc.c ****     USBRegisterDescriptors(abDescriptors);
 109              		.loc 1 183 0
 110 0090 5C009FE5 		ldr	r0, .L15+4
 111 0094 FEFFFFEB 		bl	USBRegisterDescriptors
 184:../Library/lpcusb/main_msc.c **** 
 185:../Library/lpcusb/main_msc.c ****     // register class request handler
 186:../Library/lpcusb/main_msc.c ****     USBRegisterRequestHandler(REQTYPE_TYPE_CLASS, HandleClassRequest, abClassReqData);
 112              		.loc 1 186 0
 113 0098 58209FE5 		ldr	r2, .L15+8
 114 009c 0100A0E3 		mov	r0, #1
 115 00a0 54109FE5 		ldr	r1, .L15+12
 116 00a4 FEFFFFEB 		bl	USBRegisterRequestHandler
 187:../Library/lpcusb/main_msc.c **** 
 188:../Library/lpcusb/main_msc.c ****     // register endpoint handlers
 189:../Library/lpcusb/main_msc.c ****     USBHwRegisterEPIntHandler(MSC_BULK_IN_EP, MSCBotBulkIn);
 117              		.loc 1 189 0
 118 00a8 8500A0E3 		mov	r0, #133
 119 00ac 4C109FE5 		ldr	r1, .L15+16
 120 00b0 FEFFFFEB 		bl	USBHwRegisterEPIntHandler
 190:../Library/lpcusb/main_msc.c ****     USBHwRegisterEPIntHandler(MSC_BULK_OUT_EP, MSCBotBulkOut);
 121              		.loc 1 190 0
 122 00b4 48109FE5 		ldr	r1, .L15+20
 123 00b8 0200A0E3 		mov	r0, #2
 124 00bc FEFFFFEB 		bl	USBHwRegisterEPIntHandler
 191:../Library/lpcusb/main_msc.c **** 
 192:../Library/lpcusb/main_msc.c ****     rprintf("Starting USB communication\n");
 125              		.loc 1 192 0
 126 00c0 40009FE5 		ldr	r0, .L15+24
 127 00c4 FEFFFFEB 		bl	rprintf
 193:../Library/lpcusb/main_msc.c **** 	
 194:../Library/lpcusb/main_msc.c ****     // connect to bus
 195:../Library/lpcusb/main_msc.c ****     USBHwConnect(TRUE);
 128              		.loc 1 195 0
 129 00c8 0100A0E3 		mov	r0, #1
 130 00cc FEFFFFEB 		bl	USBHwConnect
 196:../Library/lpcusb/main_msc.c **** 
 197:../Library/lpcusb/main_msc.c ****     // call USB interrupt handler continuously
 198:../Library/lpcusb/main_msc.c ****     while (IOPIN0 & (1<<23))
 131              		.loc 1 198 0
 132 00d0 34409FE5 		ldr	r4, .L15+28
 133 00d4 000000EA 		b	.L13
 134              	.L14:
 199:../Library/lpcusb/main_msc.c **** 	{
 200:../Library/lpcusb/main_msc.c **** 		USBHwISR();
 135              		.loc 1 200 0
 136 00d8 FEFFFFEB 		bl	USBHwISR
 137              	.L13:
 198:../Library/lpcusb/main_msc.c ****     while (IOPIN0 & (1<<23))
 138              		.loc 1 198 0 discriminator 1
 139 00dc 000094E5 		ldr	r0, [r4, #0]
 140 00e0 020510E2 		ands	r0, r0, #8388608
 141 00e4 FBFFFF1A 		bne	.L14
 201:../Library/lpcusb/main_msc.c ****     }
 202:../Library/lpcusb/main_msc.c **** 
 203:../Library/lpcusb/main_msc.c ****     return 0;
 204:../Library/lpcusb/main_msc.c **** }
 142              		.loc 1 204 0
 143 00e8 1040BDE8 		ldmfd	sp!, {r4, lr}
 144 00ec 1EFF2FE1 		bx	lr
 145              	.L16:
 146              		.align	2
 147              	.L15:
 148 00f0 00000000 		.word	.LC0
 149 00f4 00000000 		.word	.LANCHOR0
 150 00f8 00000000 		.word	.LANCHOR1
 151 00fc 00000000 		.word	HandleClassRequest
 152 0100 00000000 		.word	MSCBotBulkIn
 153 0104 00000000 		.word	MSCBotBulkOut
 154 0108 18000000 		.word	.LC1
 155 010c 008002E0 		.word	-536707072
 156              		.cfi_endproc
 157              	.LFE1:
 159              		.section	.rodata.str1.1,"aMS",%progbits,1
 160              	.LC0:
 161 0000 496E6974 		.ascii	"Initialising USB stack\012\000"
 161      69616C69 
 161      73696E67 
 161      20555342 
 161      20737461 
 162              	.LC1:
 163 0018 53746172 		.ascii	"Starting USB communication\012\000"
 163      74696E67 
 163      20555342 
 163      20636F6D 
 163      6D756E69 
 164              		.data
 165              		.set	.LANCHOR0,. + 0
 168              	abDescriptors:
 169 0000 12       		.byte	18
 170 0001 01       		.byte	1
 171 0002 00       		.byte	0
 172 0003 02       		.byte	2
 173 0004 00       		.byte	0
 174 0005 00       		.byte	0
 175 0006 00       		.byte	0
 176 0007 40       		.byte	64
 177 0008 4F       		.byte	79
 178 0009 1B       		.byte	27
 179 000a 01       		.byte	1
 180 000b 00       		.byte	0
 181 000c 00       		.byte	0
 182 000d 01       		.byte	1
 183 000e 01       		.byte	1
 184 000f 02       		.byte	2
 185 0010 03       		.byte	3
 186 0011 01       		.byte	1
 187 0012 09       		.byte	9
 188 0013 02       		.byte	2
 189 0014 20       		.byte	32
 190 0015 00       		.byte	0
 191 0016 01       		.byte	1
 192 0017 01       		.byte	1
 193 0018 00       		.byte	0
 194 0019 C0       		.byte	-64
 195 001a 32       		.byte	50
 196 001b 09       		.byte	9
 197 001c 04       		.byte	4
 198 001d 00       		.byte	0
 199 001e 00       		.byte	0
 200 001f 02       		.byte	2
 201 0020 08       		.byte	8
 202 0021 06       		.byte	6
 203 0022 50       		.byte	80
 204 0023 00       		.byte	0
 205 0024 07       		.byte	7
 206 0025 05       		.byte	5
 207 0026 85       		.byte	-123
 208 0027 02       		.byte	2
 209 0028 40       		.byte	64
 210 0029 00       		.byte	0
 211 002a 00       		.byte	0
 212 002b 07       		.byte	7
 213 002c 05       		.byte	5
 214 002d 02       		.byte	2
 215 002e 02       		.byte	2
 216 002f 40       		.byte	64
 217 0030 00       		.byte	0
 218 0031 00       		.byte	0
 219 0032 04       		.byte	4
 220 0033 03       		.byte	3
 221 0034 09       		.byte	9
 222 0035 04       		.byte	4
 223 0036 14       		.byte	20
 224 0037 03       		.byte	3
 225 0038 49       		.byte	73
 226 0039 00       		.byte	0
 227 003a 4E       		.byte	78
 228 003b 00       		.byte	0
 229 003c 32       		.byte	50
 230 003d 00       		.byte	0
 231 003e 52       		.byte	82
 232 003f 00       		.byte	0
 233 0040 6F       		.byte	111
 234 0041 00       		.byte	0
 235 0042 77       		.byte	119
 236 0043 00       		.byte	0
 237 0044 69       		.byte	105
 238 0045 00       		.byte	0
 239 0046 6E       		.byte	110
 240 0047 00       		.byte	0
 241 0048 67       		.byte	103
 242 0049 00       		.byte	0
 243 004a 10       		.byte	16
 244 004b 03       		.byte	3
 245 004c 44       		.byte	68
 246 004d 00       		.byte	0
 247 004e 61       		.byte	97
 248 004f 00       		.byte	0
 249 0050 74       		.byte	116
 250 0051 00       		.byte	0
 251 0052 61       		.byte	97
 252 0053 00       		.byte	0
 253 0054 4C       		.byte	76
 254 0055 00       		.byte	0
 255 0056 6F       		.byte	111
 256 0057 00       		.byte	0
 257 0058 67       		.byte	103
 258 0059 00       		.byte	0
 259 005a 1A       		.byte	26
 260 005b 03       		.byte	3
 261 005c 30       		.byte	48
 262 005d 00       		.byte	0
 263 005e 30       		.byte	48
 264 005f 00       		.byte	0
 265 0060 30       		.byte	48
 266 0061 00       		.byte	0
 267 0062 30       		.byte	48
 268 0063 00       		.byte	0
 269 0064 30       		.byte	48
 270 0065 00       		.byte	0
 271 0066 30       		.byte	48
 272 0067 00       		.byte	0
 273 0068 30       		.byte	48
 274 0069 00       		.byte	0
 275 006a 30       		.byte	48
 276 006b 00       		.byte	0
 277 006c 30       		.byte	48
 278 006d 00       		.byte	0
 279 006e 30       		.byte	48
 280 006f 00       		.byte	0
 281 0070 30       		.byte	48
 282 0071 00       		.byte	0
 283 0072 30       		.byte	48
 284 0073 00       		.byte	0
 285 0074 00       		.byte	0
 286              		.bss
 287              		.set	.LANCHOR1,. + 0
 290              	abClassReqData:
 291 0000 00000000 		.space	4
 292              		.text
 293              	.Letext0:
 294              		.file 2 "../Library/lpcusb/type.h"
 295              		.file 3 "../Library/lpcusb/usbstruct.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main_msc.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:7      .text:0000000000000000 HandleClassRequest
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:87     .text:0000000000000074 main_msc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:148    .text:00000000000000f0 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:168    .data:0000000000000000 abDescriptors
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:290    .bss:0000000000000000 abClassReqData
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccfoPeCX.s:291    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
MSCBotReset
BlockDevInit
rprintf
USBInit
USBHwNakIntEnable
USBRegisterDescriptors
USBRegisterRequestHandler
USBHwRegisterEPIntHandler
USBHwConnect
USBHwISR
MSCBotBulkIn
MSCBotBulkOut
