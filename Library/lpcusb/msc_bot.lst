   1              		.file	"msc_bot.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	SendCSW:
   8              	.LFB1:
   9              		.file 1 "../Library/lpcusb/msc_bot.c"
   1:../Library/lpcusb/msc_bot.c **** /*
   2:../Library/lpcusb/msc_bot.c ****     LPCUSB, an USB device driver for LPC microcontrollers
   3:../Library/lpcusb/msc_bot.c ****     Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:../Library/lpcusb/msc_bot.c **** 
   5:../Library/lpcusb/msc_bot.c ****     This library is free software; you can redistribute it and/or
   6:../Library/lpcusb/msc_bot.c ****     modify it under the terms of the GNU Lesser General Public
   7:../Library/lpcusb/msc_bot.c ****     License as published by the Free Software Foundation; either
   8:../Library/lpcusb/msc_bot.c ****     version 2.1 of the License, or (at your option) any later version.
   9:../Library/lpcusb/msc_bot.c **** 
  10:../Library/lpcusb/msc_bot.c ****     This library is distributed in the hope that it will be useful,
  11:../Library/lpcusb/msc_bot.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:../Library/lpcusb/msc_bot.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:../Library/lpcusb/msc_bot.c ****     Lesser General Public License for more details.
  14:../Library/lpcusb/msc_bot.c **** 
  15:../Library/lpcusb/msc_bot.c ****     You should have received a copy of the GNU Lesser General Public
  16:../Library/lpcusb/msc_bot.c ****     License along with this library; if not, write to the Free Software
  17:../Library/lpcusb/msc_bot.c ****     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:../Library/lpcusb/msc_bot.c **** */
  19:../Library/lpcusb/msc_bot.c **** 
  20:../Library/lpcusb/msc_bot.c **** #include <string.h>
  21:../Library/lpcusb/msc_bot.c **** 
  22:../Library/lpcusb/msc_bot.c **** #include "type.h"
  23:../Library/lpcusb/msc_bot.c **** #include <stdio.h>
  24:../Library/lpcusb/msc_bot.c **** #include "rprintf.h"
  25:../Library/lpcusb/msc_bot.c **** 
  26:../Library/lpcusb/msc_bot.c **** #include "usbapi.h"
  27:../Library/lpcusb/msc_bot.c **** #include "usbdebug.h"
  28:../Library/lpcusb/msc_bot.c **** 
  29:../Library/lpcusb/msc_bot.c **** #include "msc_bot.h"
  30:../Library/lpcusb/msc_bot.c **** #include "msc_scsi.h"
  31:../Library/lpcusb/msc_bot.c **** 
  32:../Library/lpcusb/msc_bot.c **** #undef MIN
  33:../Library/lpcusb/msc_bot.c **** #define MIN(x,y)	((x)<(y)?(x):(y))	/**< MIN */
  34:../Library/lpcusb/msc_bot.c **** 
  35:../Library/lpcusb/msc_bot.c **** 
  36:../Library/lpcusb/msc_bot.c **** typedef struct
  37:../Library/lpcusb/msc_bot.c **** {
  38:../Library/lpcusb/msc_bot.c ****     U32     dwCBWSignature;
  39:../Library/lpcusb/msc_bot.c ****     U32     dwCBWTag;
  40:../Library/lpcusb/msc_bot.c ****     U32     dwCBWDataTransferLength;
  41:../Library/lpcusb/msc_bot.c ****     U8      bmCBWFlags;
  42:../Library/lpcusb/msc_bot.c ****     U8      bCBWLun;
  43:../Library/lpcusb/msc_bot.c ****     U8      bCBWCBLength;
  44:../Library/lpcusb/msc_bot.c ****     U8      CBWCB[16];
  45:../Library/lpcusb/msc_bot.c **** }
  46:../Library/lpcusb/msc_bot.c **** TCBW;
  47:../Library/lpcusb/msc_bot.c **** 
  48:../Library/lpcusb/msc_bot.c **** typedef struct
  49:../Library/lpcusb/msc_bot.c **** {
  50:../Library/lpcusb/msc_bot.c ****     U32     dwCSWSignature;
  51:../Library/lpcusb/msc_bot.c ****     U32     dwCSWTag;
  52:../Library/lpcusb/msc_bot.c ****     U32     dwCSWDataResidue;
  53:../Library/lpcusb/msc_bot.c ****     U8      bmCSWStatus;
  54:../Library/lpcusb/msc_bot.c **** }
  55:../Library/lpcusb/msc_bot.c **** TCSW;
  56:../Library/lpcusb/msc_bot.c **** 
  57:../Library/lpcusb/msc_bot.c **** typedef enum
  58:../Library/lpcusb/msc_bot.c **** {
  59:../Library/lpcusb/msc_bot.c ****     eCBW,
  60:../Library/lpcusb/msc_bot.c ****     eDataOut,
  61:../Library/lpcusb/msc_bot.c ****     eDataIn,
  62:../Library/lpcusb/msc_bot.c ****     eCSW,
  63:../Library/lpcusb/msc_bot.c ****     eStalled
  64:../Library/lpcusb/msc_bot.c **** }
  65:../Library/lpcusb/msc_bot.c **** EBotState;
  66:../Library/lpcusb/msc_bot.c **** 
  67:../Library/lpcusb/msc_bot.c **** 
  68:../Library/lpcusb/msc_bot.c **** #define CBW_SIGNATURE   0x43425355
  69:../Library/lpcusb/msc_bot.c **** #define CSW_SIGNATURE   0x53425355
  70:../Library/lpcusb/msc_bot.c **** 
  71:../Library/lpcusb/msc_bot.c **** #define STATUS_PASSED       0x00
  72:../Library/lpcusb/msc_bot.c **** #define STATUS_FAILED       0x01
  73:../Library/lpcusb/msc_bot.c **** #define STATUS_PHASE_ERR    0x02
  74:../Library/lpcusb/msc_bot.c **** 
  75:../Library/lpcusb/msc_bot.c **** static U32          dwTransferSize;     // total size of data transfer
  76:../Library/lpcusb/msc_bot.c **** static U32          dwOffset;           // offset in current data transfer
  77:../Library/lpcusb/msc_bot.c **** 
  78:../Library/lpcusb/msc_bot.c **** static TCBW         CBW;
  79:../Library/lpcusb/msc_bot.c **** static TCSW         CSW;
  80:../Library/lpcusb/msc_bot.c **** 
  81:../Library/lpcusb/msc_bot.c **** static EBotState    eState;
  82:../Library/lpcusb/msc_bot.c **** 
  83:../Library/lpcusb/msc_bot.c **** static U8           *pbData;
  84:../Library/lpcusb/msc_bot.c **** 
  85:../Library/lpcusb/msc_bot.c **** 
  86:../Library/lpcusb/msc_bot.c **** 
  87:../Library/lpcusb/msc_bot.c **** void MSCBotReset(void)
  88:../Library/lpcusb/msc_bot.c **** {
  89:../Library/lpcusb/msc_bot.c ****     DBG("BOT reset in state %d\n", eState);
  90:../Library/lpcusb/msc_bot.c ****     // reset BOT state
  91:../Library/lpcusb/msc_bot.c ****     eState = eCBW;
  92:../Library/lpcusb/msc_bot.c ****     // reset SCSI
  93:../Library/lpcusb/msc_bot.c ****     SCSIReset();
  94:../Library/lpcusb/msc_bot.c **** }
  95:../Library/lpcusb/msc_bot.c **** 
  96:../Library/lpcusb/msc_bot.c **** 
  97:../Library/lpcusb/msc_bot.c **** static void SendCSW(U8 bStatus)
  98:../Library/lpcusb/msc_bot.c **** {
  10              		.loc 1 98 0
  11              		.cfi_startproc
  12              		@ Function supports interworking.
  13              		@ args = 0, pretend = 0, frame = 0
  14              		@ frame_needed = 0, uses_anonymous_args = 0
  15              		@ link register save eliminated.
  16              	.LVL0:
  99:../Library/lpcusb/msc_bot.c ****     int iResidue;
 100:../Library/lpcusb/msc_bot.c **** 
 101:../Library/lpcusb/msc_bot.c ****     iResidue = CBW.dwCBWDataTransferLength - dwTransferSize;
  17              		.loc 1 101 0
  18 0000 30309FE5 		ldr	r3, .L2
  19 0004 081093E5 		ldr	r1, [r3, #8]
  20 0008 202093E5 		ldr	r2, [r3, #32]
  21 000c 012062E0 		rsb	r2, r2, r1
  22              	.LVL1:
 102:../Library/lpcusb/msc_bot.c **** 
 103:../Library/lpcusb/msc_bot.c ****     // construct CSW
 104:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWSignature      = CSW_SIGNATURE;
  23              		.loc 1 104 0
  24 0010 24109FE5 		ldr	r1, .L2+4
 105:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWTag            = CBW.dwCBWTag;
 106:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWDataResidue    = MAX(iResidue, 0);
  25              		.loc 1 106 0
  26 0014 C22FC2E1 		bic	r2, r2, r2, asr #31
  27              	.LVL2:
 104:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWSignature      = CSW_SIGNATURE;
  28              		.loc 1 104 0
  29 0018 241083E5 		str	r1, [r3, #36]
 105:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWTag            = CBW.dwCBWTag;
  30              		.loc 1 105 0
  31 001c 041093E5 		ldr	r1, [r3, #4]
  32              		.loc 1 106 0
  33 0020 2C2083E5 		str	r2, [r3, #44]
 107:../Library/lpcusb/msc_bot.c ****     CSW.bmCSWStatus         = bStatus;
 108:../Library/lpcusb/msc_bot.c **** 
 109:../Library/lpcusb/msc_bot.c ****     DBG("CSW: status=%x, residue=%d\n", bStatus, CSW.dwCSWDataResidue);
 110:../Library/lpcusb/msc_bot.c **** 
 111:../Library/lpcusb/msc_bot.c ****     // next state
 112:../Library/lpcusb/msc_bot.c ****     eState = eCSW;
  34              		.loc 1 112 0
  35 0024 0320A0E3 		mov	r2, #3
 105:../Library/lpcusb/msc_bot.c ****     CSW.dwCSWTag            = CBW.dwCBWTag;
  36              		.loc 1 105 0
  37 0028 281083E5 		str	r1, [r3, #40]
 107:../Library/lpcusb/msc_bot.c ****     CSW.bmCSWStatus         = bStatus;
  38              		.loc 1 107 0
  39 002c 3000C3E5 		strb	r0, [r3, #48]
  40              		.loc 1 112 0
  41 0030 342083E5 		str	r2, [r3, #52]
 113:../Library/lpcusb/msc_bot.c **** }
  42              		.loc 1 113 0
  43 0034 1EFF2FE1 		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0038 00000000 		.word	.LANCHOR0
  48 003c 55534253 		.word	1396855637
  49              		.cfi_endproc
  50              	.LFE1:
  52              		.align	2
  54              	BOTStall:
  55              	.LFB3:
 114:../Library/lpcusb/msc_bot.c **** 
 115:../Library/lpcusb/msc_bot.c **** 
 116:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 117:../Library/lpcusb/msc_bot.c ****     CheckCBW
 118:../Library/lpcusb/msc_bot.c ****     ========
 119:../Library/lpcusb/msc_bot.c ****         Checks if CBW is valid and meaningful
 120:../Library/lpcusb/msc_bot.c **** 
 121:../Library/lpcusb/msc_bot.c ****     IN      pCBW    Command block wrapper
 122:../Library/lpcusb/msc_bot.c ****             iLen    Length of CBW
 123:../Library/lpcusb/msc_bot.c **** 
 124:../Library/lpcusb/msc_bot.c ****     Returns TRUE if valid and meaningful
 125:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 126:../Library/lpcusb/msc_bot.c **** static BOOL CheckCBW(TCBW *pCBW, int iLen)
 127:../Library/lpcusb/msc_bot.c **** {
 128:../Library/lpcusb/msc_bot.c ****     // CBW valid?
 129:../Library/lpcusb/msc_bot.c ****     if (iLen != 31)
 130:../Library/lpcusb/msc_bot.c ****     {
 131:../Library/lpcusb/msc_bot.c ****         DBG("Invalid length (%d)\n", iLen);
 132:../Library/lpcusb/msc_bot.c ****         return FALSE;
 133:../Library/lpcusb/msc_bot.c ****     }
 134:../Library/lpcusb/msc_bot.c ****     if (pCBW->dwCBWSignature != CBW_SIGNATURE)
 135:../Library/lpcusb/msc_bot.c ****     {
 136:../Library/lpcusb/msc_bot.c ****         DBG("Invalid signature %x\n", pCBW->dwCBWSignature);
 137:../Library/lpcusb/msc_bot.c ****         return FALSE;
 138:../Library/lpcusb/msc_bot.c ****     }
 139:../Library/lpcusb/msc_bot.c **** 
 140:../Library/lpcusb/msc_bot.c ****     // CBW meaningful?
 141:../Library/lpcusb/msc_bot.c ****     if (pCBW->bCBWLun != 0)
 142:../Library/lpcusb/msc_bot.c ****     {
 143:../Library/lpcusb/msc_bot.c ****         DBG("Invalid LUN %d\n", pCBW->bCBWLun);
 144:../Library/lpcusb/msc_bot.c ****         return FALSE;
 145:../Library/lpcusb/msc_bot.c ****     }
 146:../Library/lpcusb/msc_bot.c ****     if ((pCBW->bCBWCBLength < 1) || (pCBW->bCBWCBLength > 16))
 147:../Library/lpcusb/msc_bot.c ****     {
 148:../Library/lpcusb/msc_bot.c ****         DBG("Invalid CB len %d\n", pCBW->bCBWCBLength);
 149:../Library/lpcusb/msc_bot.c ****         return FALSE;
 150:../Library/lpcusb/msc_bot.c ****     }
 151:../Library/lpcusb/msc_bot.c ****     return TRUE;
 152:../Library/lpcusb/msc_bot.c **** }
 153:../Library/lpcusb/msc_bot.c **** 
 154:../Library/lpcusb/msc_bot.c **** 
 155:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 156:../Library/lpcusb/msc_bot.c ****     BOTStall
 157:../Library/lpcusb/msc_bot.c ****     ========
 158:../Library/lpcusb/msc_bot.c ****         Local function to stall ongoing transfer
 159:../Library/lpcusb/msc_bot.c **** 
 160:../Library/lpcusb/msc_bot.c ****     Which endpoint to stall is determined by looking at the transfer
 161:../Library/lpcusb/msc_bot.c ****     direction intended by the host.
 162:../Library/lpcusb/msc_bot.c **** 
 163:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 164:../Library/lpcusb/msc_bot.c **** static void BOTStall(void)
 165:../Library/lpcusb/msc_bot.c **** {
  56              		.loc 1 165 0
  57              		.cfi_startproc
  58              		@ Function supports interworking.
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0040 04E02DE5 		str	lr, [sp, #-4]!
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 4
  64              		.cfi_offset 14, -4
 166:../Library/lpcusb/msc_bot.c ****     if ((CBW.bmCBWFlags & 0x80) || (CBW.dwCBWDataTransferLength == 0))
  65              		.loc 1 166 0
  66 0044 2C309FE5 		ldr	r3, .L9
  67 0048 DC20D3E1 		ldrsb	r2, [r3, #12]
  68 004c 000052E3 		cmp	r2, #0
  69 0050 030000BA 		blt	.L5
  70              		.loc 1 166 0 is_stmt 0 discriminator 1
  71 0054 083093E5 		ldr	r3, [r3, #8]
  72 0058 000053E3 		cmp	r3, #0
  73              	.LBB6:
  74              	.LBB7:
 167:../Library/lpcusb/msc_bot.c ****     {
 168:../Library/lpcusb/msc_bot.c ****         // stall data-in or CSW
 169:../Library/lpcusb/msc_bot.c ****         USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 170:../Library/lpcusb/msc_bot.c ****     }
 171:../Library/lpcusb/msc_bot.c ****     else
 172:../Library/lpcusb/msc_bot.c ****     {
 173:../Library/lpcusb/msc_bot.c ****         // stall data-out
 174:../Library/lpcusb/msc_bot.c ****         USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
  75              		.loc 1 174 0 is_stmt 1 discriminator 1
  76 005c 0200A013 		movne	r0, #2
  77              	.LBE7:
  78              	.LBE6:
 166:../Library/lpcusb/msc_bot.c ****     if ((CBW.bmCBWFlags & 0x80) || (CBW.dwCBWDataTransferLength == 0))
  79              		.loc 1 166 0 discriminator 1
  80 0060 0000001A 		bne	.L8
  81              	.L5:
 169:../Library/lpcusb/msc_bot.c ****         USBHwEPStall(MSC_BULK_IN_EP, TRUE);
  82              		.loc 1 169 0
  83 0064 8500A0E3 		mov	r0, #133
  84              	.L8:
  85              	.LBB9:
  86              	.LBB8:
  87              		.loc 1 174 0
  88 0068 0110A0E3 		mov	r1, #1
  89 006c FEFFFFEB 		bl	USBHwEPStall
  90              	.LBE8:
  91              	.LBE9:
 175:../Library/lpcusb/msc_bot.c ****     }
 176:../Library/lpcusb/msc_bot.c **** }
  92              		.loc 1 176 0
  93 0070 04E09DE4 		ldr	lr, [sp], #4
  94 0074 1EFF2FE1 		bx	lr
  95              	.L10:
  96              		.align	2
  97              	.L9:
  98 0078 00000000 		.word	.LANCHOR0
  99              		.cfi_endproc
 100              	.LFE3:
 102              		.align	2
 104              	HandleDataIn:
 105              	.LFB4:
 177:../Library/lpcusb/msc_bot.c **** 
 178:../Library/lpcusb/msc_bot.c **** 
 179:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 180:../Library/lpcusb/msc_bot.c ****     HandleDataIn
 181:../Library/lpcusb/msc_bot.c ****     ============
 182:../Library/lpcusb/msc_bot.c ****         Handles data from device-to-host
 183:../Library/lpcusb/msc_bot.c **** 
 184:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 185:../Library/lpcusb/msc_bot.c **** static void HandleDataIn(void)
 186:../Library/lpcusb/msc_bot.c **** {
 106              		.loc 1 186 0
 107              		.cfi_startproc
 108              		@ Function supports interworking.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 007c 30402DE9 		stmfd	sp!, {r4, r5, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 12
 114              		.cfi_offset 14, -4
 115              		.cfi_offset 5, -8
 116              		.cfi_offset 4, -12
 187:../Library/lpcusb/msc_bot.c ****     int iChunk;
 188:../Library/lpcusb/msc_bot.c **** 
 189:../Library/lpcusb/msc_bot.c ****     // process data for host in SCSI layer
 190:../Library/lpcusb/msc_bot.c ****     pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 117              		.loc 1 190 0
 118 0080 94409FE5 		ldr	r4, .L17
 119 0084 382084E2 		add	r2, r4, #56
 120 0088 0E10D4E5 		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 121 008c 0F0084E2 		add	r0, r4, #15
 122 0090 0C0092E8 		ldmia	r2, {r2, r3}
 123 0094 FEFFFFEB 		bl	SCSIHandleData
 191:../Library/lpcusb/msc_bot.c ****     if (pbData == NULL)
 124              		.loc 1 191 0
 125 0098 000050E3 		cmp	r0, #0
 190:../Library/lpcusb/msc_bot.c ****     pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 126              		.loc 1 190 0
 127 009c 0010A0E1 		mov	r1, r0
 128 00a0 380084E5 		str	r0, [r4, #56]
 129              		.loc 1 191 0
 130 00a4 0200001A 		bne	.L12
 192:../Library/lpcusb/msc_bot.c ****     {
 193:../Library/lpcusb/msc_bot.c ****         BOTStall();
 131              		.loc 1 193 0
 132 00a8 E4FFFFEB 		bl	BOTStall
 194:../Library/lpcusb/msc_bot.c ****         SendCSW(STATUS_FAILED);
 133              		.loc 1 194 0
 134 00ac 0100A0E3 		mov	r0, #1
 135 00b0 150000EA 		b	.L16
 136              	.L12:
 195:../Library/lpcusb/msc_bot.c ****         return;
 196:../Library/lpcusb/msc_bot.c ****     }
 197:../Library/lpcusb/msc_bot.c **** 
 198:../Library/lpcusb/msc_bot.c ****     // send data to host?
 199:../Library/lpcusb/msc_bot.c ****     if (dwOffset < dwTransferSize)
 137              		.loc 1 199 0
 138 00b4 3C3094E5 		ldr	r3, [r4, #60]
 139 00b8 205094E5 		ldr	r5, [r4, #32]
 140 00bc 050053E1 		cmp	r3, r5
 141 00c0 0800002A 		bcs	.L13
 200:../Library/lpcusb/msc_bot.c ****     {
 201:../Library/lpcusb/msc_bot.c ****         iChunk = MIN(64, dwTransferSize - dwOffset);
 142              		.loc 1 201 0
 143 00c4 055063E0 		rsb	r5, r3, r5
 144 00c8 400055E3 		cmp	r5, #64
 145 00cc 4050A023 		movcs	r5, #64
 146              	.LVL3:
 202:../Library/lpcusb/msc_bot.c ****         USBHwEPWrite(MSC_BULK_IN_EP, pbData, iChunk);
 147              		.loc 1 202 0
 148 00d0 0520A0E1 		mov	r2, r5
 149 00d4 8500A0E3 		mov	r0, #133
 150 00d8 FEFFFFEB 		bl	USBHwEPWrite
 203:../Library/lpcusb/msc_bot.c ****         dwOffset += iChunk;
 151              		.loc 1 203 0
 152 00dc 3C3094E5 		ldr	r3, [r4, #60]
 153 00e0 035085E0 		add	r5, r5, r3
 154              	.LVL4:
 155 00e4 3C5084E5 		str	r5, [r4, #60]
 156              	.L13:
 204:../Library/lpcusb/msc_bot.c ****     }
 205:../Library/lpcusb/msc_bot.c **** 
 206:../Library/lpcusb/msc_bot.c ****     // are we done now?
 207:../Library/lpcusb/msc_bot.c ****     if (dwOffset == dwTransferSize)
 157              		.loc 1 207 0
 158 00e8 2C309FE5 		ldr	r3, .L17
 159 00ec 3C2093E5 		ldr	r2, [r3, #60]
 160 00f0 201093E5 		ldr	r1, [r3, #32]
 161 00f4 010052E1 		cmp	r2, r1
 162 00f8 0500001A 		bne	.L11
 208:../Library/lpcusb/msc_bot.c ****     {
 209:../Library/lpcusb/msc_bot.c ****         if (dwOffset != CBW.dwCBWDataTransferLength)
 163              		.loc 1 209 0
 164 00fc 083093E5 		ldr	r3, [r3, #8]
 165 0100 030052E1 		cmp	r2, r3
 210:../Library/lpcusb/msc_bot.c ****         {
 211:../Library/lpcusb/msc_bot.c ****             // stall pipe
 212:../Library/lpcusb/msc_bot.c ****             DBG("stalling DIN");
 213:../Library/lpcusb/msc_bot.c ****             BOTStall();
 166              		.loc 1 213 0
 167 0104 CDFFFF1B 		blne	BOTStall
 168              	.L15:
 214:../Library/lpcusb/msc_bot.c ****         }
 215:../Library/lpcusb/msc_bot.c ****         // done
 216:../Library/lpcusb/msc_bot.c ****         SendCSW(STATUS_PASSED);
 169              		.loc 1 216 0
 170 0108 0000A0E3 		mov	r0, #0
 171              	.L16:
 217:../Library/lpcusb/msc_bot.c ****     }
 218:../Library/lpcusb/msc_bot.c **** }
 172              		.loc 1 218 0
 173 010c 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 216:../Library/lpcusb/msc_bot.c ****         SendCSW(STATUS_PASSED);
 174              		.loc 1 216 0
 175 0110 BAFFFFEA 		b	SendCSW
 176              	.L11:
 177              		.loc 1 218 0
 178 0114 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 179 0118 1EFF2FE1 		bx	lr
 180              	.L18:
 181              		.align	2
 182              	.L17:
 183 011c 00000000 		.word	.LANCHOR0
 184              		.cfi_endproc
 185              	.LFE4:
 187              		.align	2
 188              		.global	MSCBotReset
 190              	MSCBotReset:
 191              	.LFB0:
  88:../Library/lpcusb/msc_bot.c **** {
 192              		.loc 1 88 0
 193              		.cfi_startproc
 194              		@ Function supports interworking.
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
  91:../Library/lpcusb/msc_bot.c ****     eState = eCBW;
 197              		.loc 1 91 0
 198 0120 14309FE5 		ldr	r3, .L20
 199 0124 0020A0E3 		mov	r2, #0
  88:../Library/lpcusb/msc_bot.c **** {
 200              		.loc 1 88 0
 201 0128 04E02DE5 		str	lr, [sp, #-4]!
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 14, -4
  91:../Library/lpcusb/msc_bot.c ****     eState = eCBW;
 205              		.loc 1 91 0
 206 012c 342083E5 		str	r2, [r3, #52]
  93:../Library/lpcusb/msc_bot.c ****     SCSIReset();
 207              		.loc 1 93 0
 208 0130 FEFFFFEB 		bl	SCSIReset
  94:../Library/lpcusb/msc_bot.c **** }
 209              		.loc 1 94 0
 210 0134 04E09DE4 		ldr	lr, [sp], #4
 211 0138 1EFF2FE1 		bx	lr
 212              	.L21:
 213              		.align	2
 214              	.L20:
 215 013c 00000000 		.word	.LANCHOR0
 216              		.cfi_endproc
 217              	.LFE0:
 219              		.align	2
 220              		.global	MSCBotBulkOut
 222              	MSCBotBulkOut:
 223              	.LFB6:
 219:../Library/lpcusb/msc_bot.c **** 
 220:../Library/lpcusb/msc_bot.c **** 
 221:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 222:../Library/lpcusb/msc_bot.c ****     HandleDataOut
 223:../Library/lpcusb/msc_bot.c ****     =============
 224:../Library/lpcusb/msc_bot.c ****         Handles data from host-to-device
 225:../Library/lpcusb/msc_bot.c **** 
 226:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 227:../Library/lpcusb/msc_bot.c **** static void HandleDataOut(void)
 228:../Library/lpcusb/msc_bot.c **** {
 229:../Library/lpcusb/msc_bot.c ****     int iChunk;
 230:../Library/lpcusb/msc_bot.c **** 
 231:../Library/lpcusb/msc_bot.c ****     if (dwOffset < dwTransferSize)
 232:../Library/lpcusb/msc_bot.c ****     {
 233:../Library/lpcusb/msc_bot.c ****         // get data from host
 234:../Library/lpcusb/msc_bot.c ****         iChunk = USBHwEPRead(MSC_BULK_OUT_EP, pbData, dwTransferSize - dwOffset);
 235:../Library/lpcusb/msc_bot.c ****         // process data in SCSI layer
 236:../Library/lpcusb/msc_bot.c ****         pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 237:../Library/lpcusb/msc_bot.c ****         if (pbData == NULL)
 238:../Library/lpcusb/msc_bot.c ****         {
 239:../Library/lpcusb/msc_bot.c ****             BOTStall();
 240:../Library/lpcusb/msc_bot.c ****             SendCSW(STATUS_FAILED);
 241:../Library/lpcusb/msc_bot.c ****             return;
 242:../Library/lpcusb/msc_bot.c ****         }
 243:../Library/lpcusb/msc_bot.c ****         dwOffset += iChunk;
 244:../Library/lpcusb/msc_bot.c ****     }
 245:../Library/lpcusb/msc_bot.c **** 
 246:../Library/lpcusb/msc_bot.c ****     // are we done now?
 247:../Library/lpcusb/msc_bot.c ****     if (dwOffset == dwTransferSize)
 248:../Library/lpcusb/msc_bot.c ****     {
 249:../Library/lpcusb/msc_bot.c ****         if (dwOffset != CBW.dwCBWDataTransferLength)
 250:../Library/lpcusb/msc_bot.c ****         {
 251:../Library/lpcusb/msc_bot.c ****             // stall pipe
 252:../Library/lpcusb/msc_bot.c ****             DBG("stalling DOUT");
 253:../Library/lpcusb/msc_bot.c ****             BOTStall();
 254:../Library/lpcusb/msc_bot.c ****         }
 255:../Library/lpcusb/msc_bot.c ****         SendCSW(STATUS_PASSED);
 256:../Library/lpcusb/msc_bot.c ****     }
 257:../Library/lpcusb/msc_bot.c **** }
 258:../Library/lpcusb/msc_bot.c **** 
 259:../Library/lpcusb/msc_bot.c **** 
 260:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 261:../Library/lpcusb/msc_bot.c ****     MSCBotBulkOut
 262:../Library/lpcusb/msc_bot.c ****     ===============
 263:../Library/lpcusb/msc_bot.c ****         Handles the BOT bulk OUT endpoint
 264:../Library/lpcusb/msc_bot.c **** 
 265:../Library/lpcusb/msc_bot.c ****     IN      bEP         Endpoint number
 266:../Library/lpcusb/msc_bot.c ****             bEPStatus   Endpoint status (indicates NAK, STALL, etc)
 267:../Library/lpcusb/msc_bot.c **** 
 268:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 269:../Library/lpcusb/msc_bot.c **** void MSCBotBulkOut(U8 bEP, U8 bEPStatus)
 270:../Library/lpcusb/msc_bot.c **** {
 224              		.loc 1 270 0
 225              		.cfi_startproc
 226              		@ Function supports interworking.
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              	.LVL5:
 271:../Library/lpcusb/msc_bot.c ****     int     iLen, iChunk;
 272:../Library/lpcusb/msc_bot.c ****     BOOL    fHostIn, fDevIn;
 273:../Library/lpcusb/msc_bot.c **** 
 274:../Library/lpcusb/msc_bot.c ****     // ignore events on stalled EP
 275:../Library/lpcusb/msc_bot.c ****     if (bEPStatus & EP_STATUS_STALLED)
 230              		.loc 1 275 0
 231 0140 020011E3 		tst	r1, #2
 270:../Library/lpcusb/msc_bot.c **** {
 232              		.loc 1 270 0
 233 0144 33402DE9 		stmfd	sp!, {r0, r1, r4, r5, lr}
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 20
 236              		.cfi_offset 14, -4
 237              		.cfi_offset 5, -8
 238              		.cfi_offset 4, -12
 239              		.cfi_offset 1, -16
 240              		.cfi_offset 0, -20
 270:../Library/lpcusb/msc_bot.c **** {
 241              		.loc 1 270 0
 242 0148 FF0000E2 		and	r0, r0, #255
 243              	.LVL6:
 244              		.loc 1 275 0
 245 014c 7C00001A 		bne	.L22
 276:../Library/lpcusb/msc_bot.c ****     {
 277:../Library/lpcusb/msc_bot.c ****         return;
 278:../Library/lpcusb/msc_bot.c ****     }
 279:../Library/lpcusb/msc_bot.c **** 
 280:../Library/lpcusb/msc_bot.c ****     switch (eState)
 246              		.loc 1 280 0
 247 0150 F4519FE5 		ldr	r5, .L47
 248 0154 343095E5 		ldr	r3, [r5, #52]
 249 0158 040053E3 		cmp	r3, #4
 250 015c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 251 0160 770000EA 		b	.L22
 252              	.L28:
 253 0164 78010000 		.word	.L24
 254 0168 64020000 		.word	.L25
 255 016c F0020000 		.word	.L26
 256 0170 F0020000 		.word	.L26
 257 0174 08030000 		.word	.L27
 258              	.L24:
 281:../Library/lpcusb/msc_bot.c ****     {
 282:../Library/lpcusb/msc_bot.c **** 
 283:../Library/lpcusb/msc_bot.c ****         case eCBW:
 284:../Library/lpcusb/msc_bot.c ****             iLen = USBHwEPRead(bEP, (U8 *)&CBW, sizeof(CBW));
 259              		.loc 1 284 0
 260 0178 CC419FE5 		ldr	r4, .L47
 261 017c 2020A0E3 		mov	r2, #32
 262 0180 0410A0E1 		mov	r1, r4
 263              	.LVL7:
 264 0184 FEFFFFEB 		bl	USBHwEPRead
 265              	.LVL8:
 266              	.LBB14:
 267              	.LBB15:
 129:../Library/lpcusb/msc_bot.c ****     if (iLen != 31)
 268              		.loc 1 129 0
 269 0188 1F0050E3 		cmp	r0, #31
 270              	.LBE15:
 271              	.LBE14:
 272              		.loc 1 284 0
 273 018c 00008DE5 		str	r0, [sp, #0]
 274              	.LVL9:
 275              	.LBB17:
 276              	.LBB16:
 129:../Library/lpcusb/msc_bot.c ****     if (iLen != 31)
 277              		.loc 1 129 0
 278 0190 0A00001A 		bne	.L29
 134:../Library/lpcusb/msc_bot.c ****     if (pCBW->dwCBWSignature != CBW_SIGNATURE)
 279              		.loc 1 134 0
 280 0194 002094E5 		ldr	r2, [r4, #0]
 281 0198 B0319FE5 		ldr	r3, .L47+4
 282 019c 030052E1 		cmp	r2, r3
 283 01a0 0600001A 		bne	.L29
 141:../Library/lpcusb/msc_bot.c ****     if (pCBW->bCBWLun != 0)
 284              		.loc 1 141 0
 285 01a4 0D30D4E5 		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 286 01a8 000053E3 		cmp	r3, #0
 287 01ac 0300001A 		bne	.L29
 146:../Library/lpcusb/msc_bot.c ****     if ((pCBW->bCBWCBLength < 1) || (pCBW->bCBWCBLength > 16))
 288              		.loc 1 146 0
 289 01b0 0E10D4E5 		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 290 01b4 012041E2 		sub	r2, r1, #1
 291 01b8 0F0052E3 		cmp	r2, #15
 292 01bc 5500009A 		bls	.L30
 293              	.L29:
 294              	.LBE16:
 295              	.LBE17:
 285:../Library/lpcusb/msc_bot.c **** 
 286:../Library/lpcusb/msc_bot.c ****             // check if we got a good CBW
 287:../Library/lpcusb/msc_bot.c ****             if (!CheckCBW(&CBW, iLen))
 288:../Library/lpcusb/msc_bot.c ****             {
 289:../Library/lpcusb/msc_bot.c ****                 // see 6.6.1
 290:../Library/lpcusb/msc_bot.c ****                 USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 296              		.loc 1 290 0
 297 01c0 8500A0E3 		mov	r0, #133
 298              	.LVL10:
 299 01c4 0110A0E3 		mov	r1, #1
 300 01c8 FEFFFFEB 		bl	USBHwEPStall
 301              	.LVL11:
 291:../Library/lpcusb/msc_bot.c ****                 USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
 302              		.loc 1 291 0
 303 01cc 0200A0E3 		mov	r0, #2
 304 01d0 0110A0E3 		mov	r1, #1
 305 01d4 FEFFFFEB 		bl	USBHwEPStall
 292:../Library/lpcusb/msc_bot.c ****                 eState = eStalled;
 306              		.loc 1 292 0
 307 01d8 0420A0E3 		mov	r2, #4
 308 01dc 68319FE5 		ldr	r3, .L47
 309 01e0 1D0000EA 		b	.L43
 310              	.LVL12:
 311              	.L42:
 293:../Library/lpcusb/msc_bot.c ****                 break;
 294:../Library/lpcusb/msc_bot.c ****             }
 295:../Library/lpcusb/msc_bot.c **** 
 296:../Library/lpcusb/msc_bot.c ****             DBG("CBW: len=%d, flags=%x, cmd=%x, cmdlen=%d\n",
 297:../Library/lpcusb/msc_bot.c ****                     CBW.dwCBWDataTransferLength, CBW.bmCBWFlags, CBW.CBWCB[0], CBW.bCBWCBLength);
 298:../Library/lpcusb/msc_bot.c **** 
 299:../Library/lpcusb/msc_bot.c ****             dwOffset = 0;
 300:../Library/lpcusb/msc_bot.c ****             dwTransferSize = 0;
 301:../Library/lpcusb/msc_bot.c ****             fHostIn = ((CBW.bmCBWFlags & 0x80) != 0);
 302:../Library/lpcusb/msc_bot.c **** 
 303:../Library/lpcusb/msc_bot.c ****             // verify request
 304:../Library/lpcusb/msc_bot.c ****             pbData = SCSIHandleCmd(CBW.CBWCB, CBW.bCBWCBLength, &iLen, &fDevIn);
 305:../Library/lpcusb/msc_bot.c ****             if (pbData == NULL)
 306:../Library/lpcusb/msc_bot.c ****             {
 307:../Library/lpcusb/msc_bot.c ****                 // unknown command
 308:../Library/lpcusb/msc_bot.c ****                 BOTStall();
 309:../Library/lpcusb/msc_bot.c ****                 SendCSW(STATUS_FAILED);
 310:../Library/lpcusb/msc_bot.c ****                 break;
 311:../Library/lpcusb/msc_bot.c ****             }
 312:../Library/lpcusb/msc_bot.c **** 
 313:../Library/lpcusb/msc_bot.c ****             // rule: if device and host disagree on direction, send CSW with status 2
 314:../Library/lpcusb/msc_bot.c ****             if ((iLen > 0) &&
 312              		.loc 1 314 0
 313 01e4 00209DE5 		ldr	r2, [sp, #0]
 314 01e8 000052E3 		cmp	r2, #0
 315 01ec 070000DA 		ble	.L31
 316              		.loc 1 314 0 is_stmt 0 discriminator 1
 317 01f0 800015E3 		tst	r5, #128
 318              	.LVL13:
 319 01f4 04309DE5 		ldr	r3, [sp, #4]
 320 01f8 0200000A 		beq	.L32
 315:../Library/lpcusb/msc_bot.c ****                 ((fHostIn && !fDevIn) ||
 321              		.loc 1 315 0 is_stmt 1
 322 01fc 000053E3 		cmp	r3, #0
 323 0200 0200001A 		bne	.L31
 324 0204 060000EA 		b	.L46
 325              	.L32:
 316:../Library/lpcusb/msc_bot.c ****                 (!fHostIn && fDevIn)))
 326              		.loc 1 316 0
 327 0208 000053E3 		cmp	r3, #0
 328 020c 0400001A 		bne	.L46
 329              	.L31:
 317:../Library/lpcusb/msc_bot.c ****             {
 318:../Library/lpcusb/msc_bot.c ****                 DBG("Host and device disagree on direction\n");
 319:../Library/lpcusb/msc_bot.c ****                 BOTStall();
 320:../Library/lpcusb/msc_bot.c ****                 SendCSW(STATUS_PHASE_ERR);
 321:../Library/lpcusb/msc_bot.c ****                 break;
 322:../Library/lpcusb/msc_bot.c ****             }
 323:../Library/lpcusb/msc_bot.c **** 
 324:../Library/lpcusb/msc_bot.c ****             // rule: if D > H, send CSW with status 2
 325:../Library/lpcusb/msc_bot.c ****             if (iLen > CBW.dwCBWDataTransferLength)
 330              		.loc 1 325 0
 331 0210 34319FE5 		ldr	r3, .L47
 332 0214 081093E5 		ldr	r1, [r3, #8]
 333 0218 010052E1 		cmp	r2, r1
 334 021c 0310A0E1 		mov	r1, r3
 335 0220 0200009A 		bls	.L34
 336              	.L46:
 326:../Library/lpcusb/msc_bot.c ****             {
 327:../Library/lpcusb/msc_bot.c ****                 DBG("Negative residue\n");
 328:../Library/lpcusb/msc_bot.c ****                 BOTStall();
 337              		.loc 1 328 0
 338 0224 85FFFFEB 		bl	BOTStall
 329:../Library/lpcusb/msc_bot.c ****                 SendCSW(STATUS_PHASE_ERR);
 339              		.loc 1 329 0
 340 0228 0200A0E3 		mov	r0, #2
 341 022c 2D0000EA 		b	.L44
 342              	.L34:
 330:../Library/lpcusb/msc_bot.c ****                 break;
 331:../Library/lpcusb/msc_bot.c ****             }
 332:../Library/lpcusb/msc_bot.c **** 
 333:../Library/lpcusb/msc_bot.c ****             dwTransferSize = iLen;
 334:../Library/lpcusb/msc_bot.c ****             if ((dwTransferSize == 0) || fDevIn)
 343              		.loc 1 334 0
 344 0230 000052E3 		cmp	r2, #0
 333:../Library/lpcusb/msc_bot.c ****             dwTransferSize = iLen;
 345              		.loc 1 333 0
 346 0234 202083E5 		str	r2, [r3, #32]
 347              		.loc 1 334 0
 348 0238 0300000A 		beq	.L35
 349              		.loc 1 334 0 is_stmt 0 discriminator 1
 350 023c 04209DE5 		ldr	r2, [sp, #4]
 351 0240 000052E3 		cmp	r2, #0
 335:../Library/lpcusb/msc_bot.c ****             {
 336:../Library/lpcusb/msc_bot.c ****                 // data from device-to-host
 337:../Library/lpcusb/msc_bot.c ****                 eState = eDataIn;
 338:../Library/lpcusb/msc_bot.c ****                 HandleDataIn();
 339:../Library/lpcusb/msc_bot.c ****             }
 340:../Library/lpcusb/msc_bot.c ****             else
 341:../Library/lpcusb/msc_bot.c ****             {
 342:../Library/lpcusb/msc_bot.c ****                 // data from host-to-device
 343:../Library/lpcusb/msc_bot.c ****                 eState = eDataOut;
 352              		.loc 1 343 0 is_stmt 1 discriminator 1
 353 0244 0120A003 		moveq	r2, #1
 334:../Library/lpcusb/msc_bot.c ****             if ((dwTransferSize == 0) || fDevIn)
 354              		.loc 1 334 0 discriminator 1
 355 0248 0300000A 		beq	.L43
 356              	.L35:
 337:../Library/lpcusb/msc_bot.c ****                 eState = eDataIn;
 357              		.loc 1 337 0
 358 024c 0230A0E3 		mov	r3, #2
 359 0250 343081E5 		str	r3, [r1, #52]
 338:../Library/lpcusb/msc_bot.c ****                 HandleDataIn();
 360              		.loc 1 338 0
 361 0254 88FFFFEB 		bl	HandleDataIn
 362 0258 390000EA 		b	.L22
 363              	.LVL14:
 364              	.L43:
 365              		.loc 1 343 0
 366 025c 342083E5 		str	r2, [r3, #52]
 367 0260 370000EA 		b	.L22
 368              	.LVL15:
 369              	.L25:
 370              	.LBB18:
 371              	.LBB19:
 231:../Library/lpcusb/msc_bot.c ****     if (dwOffset < dwTransferSize)
 372              		.loc 1 231 0
 373 0264 3C3095E5 		ldr	r3, [r5, #60]
 374 0268 202095E5 		ldr	r2, [r5, #32]
 375 026c 020053E1 		cmp	r3, r2
 376 0270 D4409FE5 		ldr	r4, .L47
 377 0274 1200002A 		bcs	.L37
 234:../Library/lpcusb/msc_bot.c ****         iChunk = USBHwEPRead(MSC_BULK_OUT_EP, pbData, dwTransferSize - dwOffset);
 378              		.loc 1 234 0
 379 0278 022063E0 		rsb	r2, r3, r2
 380 027c 381094E5 		ldr	r1, [r4, #56]
 381              	.LVL16:
 382 0280 0200A0E3 		mov	r0, #2
 383 0284 FEFFFFEB 		bl	USBHwEPRead
 236:../Library/lpcusb/msc_bot.c ****         pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 384              		.loc 1 236 0
 385 0288 382084E2 		add	r2, r4, #56
 234:../Library/lpcusb/msc_bot.c ****         iChunk = USBHwEPRead(MSC_BULK_OUT_EP, pbData, dwTransferSize - dwOffset);
 386              		.loc 1 234 0
 387 028c 0050A0E1 		mov	r5, r0
 388              	.LVL17:
 236:../Library/lpcusb/msc_bot.c ****         pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 389              		.loc 1 236 0
 390 0290 0C0092E8 		ldmia	r2, {r2, r3}
 391 0294 0F0084E2 		add	r0, r4, #15
 392              	.LVL18:
 393 0298 0E10D4E5 		ldrb	r1, [r4, #14]	@ zero_extendqisi2
 394 029c FEFFFFEB 		bl	SCSIHandleData
 237:../Library/lpcusb/msc_bot.c ****         if (pbData == NULL)
 395              		.loc 1 237 0
 396 02a0 000050E3 		cmp	r0, #0
 243:../Library/lpcusb/msc_bot.c ****         dwOffset += iChunk;
 397              		.loc 1 243 0
 398 02a4 3C309415 		ldrne	r3, [r4, #60]
 399 02a8 03508510 		addne	r5, r5, r3
 400              	.LVL19:
 236:../Library/lpcusb/msc_bot.c ****         pbData = SCSIHandleData(CBW.CBWCB, CBW.bCBWCBLength, pbData, dwOffset);
 401              		.loc 1 236 0
 402 02ac 380084E5 		str	r0, [r4, #56]
 243:../Library/lpcusb/msc_bot.c ****         dwOffset += iChunk;
 403              		.loc 1 243 0
 404 02b0 3C508415 		strne	r5, [r4, #60]
 237:../Library/lpcusb/msc_bot.c ****         if (pbData == NULL)
 405              		.loc 1 237 0
 406 02b4 0200001A 		bne	.L37
 407              	.LVL20:
 408              	.L45:
 239:../Library/lpcusb/msc_bot.c ****             BOTStall();
 409              		.loc 1 239 0
 410 02b8 60FFFFEB 		bl	BOTStall
 240:../Library/lpcusb/msc_bot.c ****             SendCSW(STATUS_FAILED);
 411              		.loc 1 240 0
 412 02bc 0100A0E3 		mov	r0, #1
 413 02c0 080000EA 		b	.L44
 414              	.LVL21:
 415              	.L37:
 247:../Library/lpcusb/msc_bot.c ****     if (dwOffset == dwTransferSize)
 416              		.loc 1 247 0
 417 02c4 80309FE5 		ldr	r3, .L47
 418 02c8 3C2093E5 		ldr	r2, [r3, #60]
 419 02cc 201093E5 		ldr	r1, [r3, #32]
 420 02d0 010052E1 		cmp	r2, r1
 421 02d4 1A00001A 		bne	.L22
 249:../Library/lpcusb/msc_bot.c ****         if (dwOffset != CBW.dwCBWDataTransferLength)
 422              		.loc 1 249 0
 423 02d8 083093E5 		ldr	r3, [r3, #8]
 424 02dc 030052E1 		cmp	r2, r3
 253:../Library/lpcusb/msc_bot.c ****             BOTStall();
 425              		.loc 1 253 0
 426 02e0 56FFFF1B 		blne	BOTStall
 427              	.L39:
 255:../Library/lpcusb/msc_bot.c ****         SendCSW(STATUS_PASSED);
 428              		.loc 1 255 0
 429 02e4 0000A0E3 		mov	r0, #0
 430              	.LVL22:
 431              	.L44:
 432 02e8 44FFFFEB 		bl	SendCSW
 433 02ec 140000EA 		b	.L22
 434              	.LVL23:
 435              	.L26:
 436              	.LBE19:
 437              	.LBE18:
 344:../Library/lpcusb/msc_bot.c ****             }
 345:../Library/lpcusb/msc_bot.c ****             break;
 346:../Library/lpcusb/msc_bot.c **** 
 347:../Library/lpcusb/msc_bot.c ****         case eDataOut:
 348:../Library/lpcusb/msc_bot.c ****             HandleDataOut();
 349:../Library/lpcusb/msc_bot.c ****             break;
 350:../Library/lpcusb/msc_bot.c **** 
 351:../Library/lpcusb/msc_bot.c ****         case eDataIn:
 352:../Library/lpcusb/msc_bot.c ****         case eCSW:
 353:../Library/lpcusb/msc_bot.c ****             iChunk = USBHwEPRead(bEP, NULL, 0);
 438              		.loc 1 353 0
 439 02f0 0010A0E3 		mov	r1, #0
 440              	.LVL24:
 441 02f4 0120A0E1 		mov	r2, r1
 442 02f8 FEFFFFEB 		bl	USBHwEPRead
 354:../Library/lpcusb/msc_bot.c ****             DBG("Phase error in state %d, %d bytes\n", eState, iChunk);
 355:../Library/lpcusb/msc_bot.c ****             eState = eCBW;
 443              		.loc 1 355 0
 444 02fc 0030A0E3 		mov	r3, #0
 445 0300 343085E5 		str	r3, [r5, #52]
 356:../Library/lpcusb/msc_bot.c ****             break;
 446              		.loc 1 356 0
 447 0304 0E0000EA 		b	.L22
 448              	.LVL25:
 449              	.L27:
 357:../Library/lpcusb/msc_bot.c **** 
 358:../Library/lpcusb/msc_bot.c ****         case eStalled:
 359:../Library/lpcusb/msc_bot.c ****         // keep stalling
 360:../Library/lpcusb/msc_bot.c ****             USBHwEPStall(MSC_BULK_OUT_EP, TRUE);
 450              		.loc 1 360 0
 451 0308 0200A0E3 		mov	r0, #2
 452 030c 0110A0E3 		mov	r1, #1
 453              	.LVL26:
 454 0310 FEFFFFEB 		bl	USBHwEPStall
 361:../Library/lpcusb/msc_bot.c ****             break;
 455              		.loc 1 361 0
 456 0314 0A0000EA 		b	.L22
 457              	.LVL27:
 458              	.L30:
 299:../Library/lpcusb/msc_bot.c ****             dwOffset = 0;
 459              		.loc 1 299 0
 460 0318 3C3084E5 		str	r3, [r4, #60]
 300:../Library/lpcusb/msc_bot.c ****             dwTransferSize = 0;
 461              		.loc 1 300 0
 462 031c 203084E5 		str	r3, [r4, #32]
 304:../Library/lpcusb/msc_bot.c ****             pbData = SCSIHandleCmd(CBW.CBWCB, CBW.bCBWCBLength, &iLen, &fDevIn);
 463              		.loc 1 304 0
 464 0320 0F0084E2 		add	r0, r4, #15
 465              	.LVL28:
 466 0324 0D20A0E1 		mov	r2, sp
 467              	.LVL29:
 468 0328 04308DE2 		add	r3, sp, #4
 301:../Library/lpcusb/msc_bot.c ****             fHostIn = ((CBW.bmCBWFlags & 0x80) != 0);
 469              		.loc 1 301 0
 470 032c 0C50D4E5 		ldrb	r5, [r4, #12]	@ zero_extendqisi2
 471              	.LVL30:
 304:../Library/lpcusb/msc_bot.c ****             pbData = SCSIHandleCmd(CBW.CBWCB, CBW.bCBWCBLength, &iLen, &fDevIn);
 472              		.loc 1 304 0
 473 0330 FEFFFFEB 		bl	SCSIHandleCmd
 474              	.LVL31:
 305:../Library/lpcusb/msc_bot.c ****             if (pbData == NULL)
 475              		.loc 1 305 0
 476 0334 000050E3 		cmp	r0, #0
 304:../Library/lpcusb/msc_bot.c ****             pbData = SCSIHandleCmd(CBW.CBWCB, CBW.bCBWCBLength, &iLen, &fDevIn);
 477              		.loc 1 304 0
 478 0338 380084E5 		str	r0, [r4, #56]
 305:../Library/lpcusb/msc_bot.c ****             if (pbData == NULL)
 479              		.loc 1 305 0
 480 033c A8FFFF1A 		bne	.L42
 481 0340 DCFFFFEA 		b	.L45
 482              	.LVL32:
 483              	.L22:
 362:../Library/lpcusb/msc_bot.c **** 
 363:../Library/lpcusb/msc_bot.c ****         default:
 364:../Library/lpcusb/msc_bot.c ****             DBG("Invalid state %d\n", eState);
 365:../Library/lpcusb/msc_bot.c **** //            ASSERT(FALSE);
 366:../Library/lpcusb/msc_bot.c ****             break;
 367:../Library/lpcusb/msc_bot.c ****     }
 368:../Library/lpcusb/msc_bot.c **** }
 484              		.loc 1 368 0
 485 0344 3C40BDE8 		ldmfd	sp!, {r2, r3, r4, r5, lr}
 486 0348 1EFF2FE1 		bx	lr
 487              	.L48:
 488              		.align	2
 489              	.L47:
 490 034c 00000000 		.word	.LANCHOR0
 491 0350 55534243 		.word	1128420181
 492              		.cfi_endproc
 493              	.LFE6:
 495              		.align	2
 496              		.global	MSCBotBulkIn
 498              	MSCBotBulkIn:
 499              	.LFB7:
 369:../Library/lpcusb/msc_bot.c **** 
 370:../Library/lpcusb/msc_bot.c **** 
 371:../Library/lpcusb/msc_bot.c **** /*************************************************************************
 372:../Library/lpcusb/msc_bot.c ****     MSCBotBulkIn
 373:../Library/lpcusb/msc_bot.c ****     ============
 374:../Library/lpcusb/msc_bot.c ****         Handles the BOT bulk IN endpoint
 375:../Library/lpcusb/msc_bot.c **** 
 376:../Library/lpcusb/msc_bot.c ****     IN      bEP         Endpoint number
 377:../Library/lpcusb/msc_bot.c ****             bEPStatus   Endpoint status (indicates NAK, STALL, etc)
 378:../Library/lpcusb/msc_bot.c **** 
 379:../Library/lpcusb/msc_bot.c **** **************************************************************************/
 380:../Library/lpcusb/msc_bot.c **** void MSCBotBulkIn(U8 bEP, U8 bEPStatus)
 381:../Library/lpcusb/msc_bot.c **** {
 500              		.loc 1 381 0
 501              		.cfi_startproc
 502              		@ Function supports interworking.
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL33:
 506 0354 30402DE9 		stmfd	sp!, {r4, r5, lr}
 507              	.LCFI4:
 508              		.cfi_def_cfa_offset 12
 509              		.cfi_offset 14, -4
 510              		.cfi_offset 5, -8
 511              		.cfi_offset 4, -12
 382:../Library/lpcusb/msc_bot.c ****     // ignore events on stalled EP
 383:../Library/lpcusb/msc_bot.c ****     if (bEPStatus & EP_STATUS_STALLED)
 512              		.loc 1 383 0
 513 0358 025011E2 		ands	r5, r1, #2
 514 035c 1200001A 		bne	.L49
 384:../Library/lpcusb/msc_bot.c ****     {
 385:../Library/lpcusb/msc_bot.c ****         return;
 386:../Library/lpcusb/msc_bot.c ****     }
 387:../Library/lpcusb/msc_bot.c **** 
 388:../Library/lpcusb/msc_bot.c ****     switch (eState)
 515              		.loc 1 388 0
 516 0360 4C409FE5 		ldr	r4, .L54
 517 0364 343094E5 		ldr	r3, [r4, #52]
 518 0368 030053E3 		cmp	r3, #3
 519 036c 0500000A 		beq	.L52
 520 0370 040053E3 		cmp	r3, #4
 521 0374 0900000A 		beq	.L53
 522 0378 020053E3 		cmp	r3, #2
 523 037c 0A00001A 		bne	.L49
 389:../Library/lpcusb/msc_bot.c ****     {
 390:../Library/lpcusb/msc_bot.c **** 
 391:../Library/lpcusb/msc_bot.c ****         case eCBW:
 392:../Library/lpcusb/msc_bot.c ****         case eDataOut:
 393:../Library/lpcusb/msc_bot.c ****         // ignore possibly old ACKs
 394:../Library/lpcusb/msc_bot.c ****             break;
 395:../Library/lpcusb/msc_bot.c **** 
 396:../Library/lpcusb/msc_bot.c ****         case eDataIn:
 397:../Library/lpcusb/msc_bot.c ****             HandleDataIn();
 398:../Library/lpcusb/msc_bot.c ****             break;
 399:../Library/lpcusb/msc_bot.c **** 
 400:../Library/lpcusb/msc_bot.c ****         case eCSW:
 401:../Library/lpcusb/msc_bot.c ****         // wait for an IN token, then send the CSW
 402:../Library/lpcusb/msc_bot.c ****             USBHwEPWrite(MSC_BULK_IN_EP, (U8 *)&CSW, 13);
 403:../Library/lpcusb/msc_bot.c ****             eState = eCBW;
 404:../Library/lpcusb/msc_bot.c ****             break;
 405:../Library/lpcusb/msc_bot.c **** 
 406:../Library/lpcusb/msc_bot.c ****         case eStalled:
 407:../Library/lpcusb/msc_bot.c ****         // keep stalling
 408:../Library/lpcusb/msc_bot.c ****             USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 409:../Library/lpcusb/msc_bot.c ****             break;
 410:../Library/lpcusb/msc_bot.c **** 
 411:../Library/lpcusb/msc_bot.c ****         default:
 412:../Library/lpcusb/msc_bot.c ****             DBG("Invalid state %d\n", eState);
 413:../Library/lpcusb/msc_bot.c **** //            ASSERT(FALSE);
 414:../Library/lpcusb/msc_bot.c ****             break;
 415:../Library/lpcusb/msc_bot.c ****     }
 416:../Library/lpcusb/msc_bot.c **** }
 524              		.loc 1 416 0
 525 0380 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 397:../Library/lpcusb/msc_bot.c ****             HandleDataIn();
 526              		.loc 1 397 0
 527 0384 3CFFFFEA 		b	HandleDataIn
 528              	.LVL34:
 529              	.L52:
 402:../Library/lpcusb/msc_bot.c ****             USBHwEPWrite(MSC_BULK_IN_EP, (U8 *)&CSW, 13);
 530              		.loc 1 402 0
 531 0388 8500A0E3 		mov	r0, #133
 532              	.LVL35:
 533 038c 241084E2 		add	r1, r4, #36
 534              	.LVL36:
 535 0390 0D20A0E3 		mov	r2, #13
 536 0394 FEFFFFEB 		bl	USBHwEPWrite
 403:../Library/lpcusb/msc_bot.c ****             eState = eCBW;
 537              		.loc 1 403 0
 538 0398 345084E5 		str	r5, [r4, #52]
 404:../Library/lpcusb/msc_bot.c ****             break;
 539              		.loc 1 404 0
 540 039c 020000EA 		b	.L49
 541              	.LVL37:
 542              	.L53:
 408:../Library/lpcusb/msc_bot.c ****             USBHwEPStall(MSC_BULK_IN_EP, TRUE);
 543              		.loc 1 408 0
 544 03a0 8500A0E3 		mov	r0, #133
 545              	.LVL38:
 546 03a4 0110A0E3 		mov	r1, #1
 547              	.LVL39:
 548 03a8 FEFFFFEB 		bl	USBHwEPStall
 549              	.L49:
 550              		.loc 1 416 0
 551 03ac 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 552 03b0 1EFF2FE1 		bx	lr
 553              	.L55:
 554              		.align	2
 555              	.L54:
 556 03b4 00000000 		.word	.LANCHOR0
 557              		.cfi_endproc
 558              	.LFE7:
 560              		.bss
 561              		.align	2
 562              		.set	.LANCHOR0,. + 0
 565              	CBW:
 566 0000 00000000 		.space	32
 566      00000000 
 566      00000000 
 566      00000000 
 566      00000000 
 569              	dwTransferSize:
 570 0020 00000000 		.space	4
 573              	CSW:
 574 0024 00000000 		.space	16
 574      00000000 
 574      00000000 
 574      00000000 
 577              	eState:
 578 0034 00000000 		.space	4
 581              	pbData:
 582 0038 00000000 		.space	4
 585              	dwOffset:
 586 003c 00000000 		.space	4
 587              		.text
 588              	.Letext0:
 589              		.file 2 "../Library/lpcusb/type.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 msc_bot.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:7      .text:0000000000000000 SendCSW
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:47     .text:0000000000000038 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:52     .text:0000000000000040 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:54     .text:0000000000000040 BOTStall
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:98     .text:0000000000000078 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:102    .text:000000000000007c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:104    .text:000000000000007c HandleDataIn
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:183    .text:000000000000011c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:187    .text:0000000000000120 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:190    .text:0000000000000120 MSCBotReset
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:215    .text:000000000000013c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:219    .text:0000000000000140 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:222    .text:0000000000000140 MSCBotBulkOut
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:253    .text:0000000000000164 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:260    .text:0000000000000178 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:490    .text:000000000000034c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:495    .text:0000000000000354 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:498    .text:0000000000000354 MSCBotBulkIn
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:556    .text:00000000000003b4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:561    .bss:0000000000000000 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:565    .bss:0000000000000000 CBW
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:569    .bss:0000000000000020 dwTransferSize
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:573    .bss:0000000000000024 CSW
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:577    .bss:0000000000000034 eState
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:581    .bss:0000000000000038 pbData
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccD5tGt7.s:585    .bss:000000000000003c dwOffset
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBHwEPStall
SCSIHandleData
USBHwEPWrite
SCSIReset
USBHwEPRead
SCSIHandleCmd
