   1              		.file	"usbstdreq.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   6              		.global	USBRegisterDescriptors
   8              	USBRegisterDescriptors:
   9              	.LFB0:
  10              		.file 1 "../Library/lpcusb/usbstdreq.c"
   1:../Library/lpcusb/usbstdreq.c **** /*
   2:../Library/lpcusb/usbstdreq.c **** 	LPCUSB, an USB device driver for LPC microcontrollers	
   3:../Library/lpcusb/usbstdreq.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:../Library/lpcusb/usbstdreq.c **** 
   5:../Library/lpcusb/usbstdreq.c **** 	Redistribution and use in source and binary forms, with or without
   6:../Library/lpcusb/usbstdreq.c **** 	modification, are permitted provided that the following conditions are met:
   7:../Library/lpcusb/usbstdreq.c **** 
   8:../Library/lpcusb/usbstdreq.c **** 	1. Redistributions of source code must retain the above copyright
   9:../Library/lpcusb/usbstdreq.c **** 	   notice, this list of conditions and the following disclaimer.
  10:../Library/lpcusb/usbstdreq.c **** 	2. Redistributions in binary form must reproduce the above copyright
  11:../Library/lpcusb/usbstdreq.c **** 	   notice, this list of conditions and the following disclaimer in the
  12:../Library/lpcusb/usbstdreq.c **** 	   documentation and/or other materials provided with the distribution.
  13:../Library/lpcusb/usbstdreq.c **** 	3. The name of the author may not be used to endorse or promote products
  14:../Library/lpcusb/usbstdreq.c **** 	   derived from this software without specific prior written permission.
  15:../Library/lpcusb/usbstdreq.c **** 
  16:../Library/lpcusb/usbstdreq.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  17:../Library/lpcusb/usbstdreq.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  18:../Library/lpcusb/usbstdreq.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  19:../Library/lpcusb/usbstdreq.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
  20:../Library/lpcusb/usbstdreq.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  21:../Library/lpcusb/usbstdreq.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  22:../Library/lpcusb/usbstdreq.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  23:../Library/lpcusb/usbstdreq.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  24:../Library/lpcusb/usbstdreq.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  25:../Library/lpcusb/usbstdreq.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  26:../Library/lpcusb/usbstdreq.c **** */
  27:../Library/lpcusb/usbstdreq.c **** 
  28:../Library/lpcusb/usbstdreq.c **** 
  29:../Library/lpcusb/usbstdreq.c **** /** @file
  30:../Library/lpcusb/usbstdreq.c **** 	Standard request handler.
  31:../Library/lpcusb/usbstdreq.c **** 	
  32:../Library/lpcusb/usbstdreq.c **** 	This modules handles the 'chapter 9' processing, specifically the
  33:../Library/lpcusb/usbstdreq.c **** 	standard device requests in table 9-3 from the universal serial bus
  34:../Library/lpcusb/usbstdreq.c **** 	specification revision 2.0
  35:../Library/lpcusb/usbstdreq.c **** 	
  36:../Library/lpcusb/usbstdreq.c **** 	Specific types of devices may specify additional requests (for example
  37:../Library/lpcusb/usbstdreq.c **** 	HID devices add a GET_DESCRIPTOR request for interfaces), but they
  38:../Library/lpcusb/usbstdreq.c **** 	will not be part of this module.
  39:../Library/lpcusb/usbstdreq.c **** 
  40:../Library/lpcusb/usbstdreq.c **** 	@todo some requests have to return a request error if device not configured:
  41:../Library/lpcusb/usbstdreq.c **** 	@todo GET_INTERFACE, GET_STATUS, SET_INTERFACE, SYNCH_FRAME
  42:../Library/lpcusb/usbstdreq.c **** 	@todo this applies to the following if endpoint != 0:
  43:../Library/lpcusb/usbstdreq.c **** 	@todo SET_FEATURE, GET_FEATURE 
  44:../Library/lpcusb/usbstdreq.c **** */
  45:../Library/lpcusb/usbstdreq.c **** 
  46:../Library/lpcusb/usbstdreq.c **** #include "type.h"
  47:../Library/lpcusb/usbstdreq.c **** #include "usbdebug.h"
  48:../Library/lpcusb/usbstdreq.c **** #include "usbstruct.h"
  49:../Library/lpcusb/usbstdreq.c **** #include "usbapi.h"
  50:../Library/lpcusb/usbstdreq.c **** 
  51:../Library/lpcusb/usbstdreq.c **** #define MAX_DESC_HANDLERS	4		/**< device, interface, endpoint, other */
  52:../Library/lpcusb/usbstdreq.c **** 
  53:../Library/lpcusb/usbstdreq.c **** 
  54:../Library/lpcusb/usbstdreq.c **** /* general descriptor field offsets */
  55:../Library/lpcusb/usbstdreq.c **** #define DESC_bLength					0	/**< length offset */
  56:../Library/lpcusb/usbstdreq.c **** #define DESC_bDescriptorType			1	/**< descriptor type offset */	
  57:../Library/lpcusb/usbstdreq.c **** 
  58:../Library/lpcusb/usbstdreq.c **** /* config descriptor field offsets */
  59:../Library/lpcusb/usbstdreq.c **** #define CONF_DESC_wTotalLength			2	/**< total length offset */
  60:../Library/lpcusb/usbstdreq.c **** #define CONF_DESC_bConfigurationValue	5	/**< configuration value offset */	
  61:../Library/lpcusb/usbstdreq.c **** #define CONF_DESC_bmAttributes			7	/**< configuration characteristics */
  62:../Library/lpcusb/usbstdreq.c **** 
  63:../Library/lpcusb/usbstdreq.c **** /* interface descriptor field offsets */
  64:../Library/lpcusb/usbstdreq.c **** #define INTF_DESC_bAlternateSetting		3	/**< alternate setting offset */
  65:../Library/lpcusb/usbstdreq.c **** 
  66:../Library/lpcusb/usbstdreq.c **** /* endpoint descriptor field offsets */
  67:../Library/lpcusb/usbstdreq.c **** #define ENDP_DESC_bEndpointAddress		2	/**< endpoint address offset */
  68:../Library/lpcusb/usbstdreq.c **** #define ENDP_DESC_wMaxPacketSize		4	/**< maximum packet size offset */
  69:../Library/lpcusb/usbstdreq.c **** 
  70:../Library/lpcusb/usbstdreq.c **** 
  71:../Library/lpcusb/usbstdreq.c **** /** Currently selected configuration */
  72:../Library/lpcusb/usbstdreq.c **** static U8				bConfiguration = 0;
  73:../Library/lpcusb/usbstdreq.c **** /** Installed custom request handler */
  74:../Library/lpcusb/usbstdreq.c **** static TFnHandleRequest	*pfnHandleCustomReq = NULL;
  75:../Library/lpcusb/usbstdreq.c **** /** Pointer to registered descriptors */
  76:../Library/lpcusb/usbstdreq.c **** //static const U8			*pabDescrip = NULL;
  77:../Library/lpcusb/usbstdreq.c **** static U8			*pabDescrip = NULL;
  78:../Library/lpcusb/usbstdreq.c **** 
  79:../Library/lpcusb/usbstdreq.c **** 
  80:../Library/lpcusb/usbstdreq.c **** /**
  81:../Library/lpcusb/usbstdreq.c **** 	Registers a pointer to a descriptor block containing all descriptors
  82:../Library/lpcusb/usbstdreq.c **** 	for the device.
  83:../Library/lpcusb/usbstdreq.c **** 
  84:../Library/lpcusb/usbstdreq.c **** 	@param [in]	pabDescriptors	The descriptor byte array
  85:../Library/lpcusb/usbstdreq.c ****  */
  86:../Library/lpcusb/usbstdreq.c **** //void USBRegisterDescriptors(const U8 *pabDescriptors)
  87:../Library/lpcusb/usbstdreq.c **** void USBRegisterDescriptors(U8 *pabDescriptors)
  88:../Library/lpcusb/usbstdreq.c **** {
  11              		.loc 1 88 0
  12              		.cfi_startproc
  13              		@ Function supports interworking.
  14              		@ args = 0, pretend = 0, frame = 0
  15              		@ frame_needed = 0, uses_anonymous_args = 0
  16              		@ link register save eliminated.
  17              	.LVL0:
  89:../Library/lpcusb/usbstdreq.c **** 	pabDescrip = pabDescriptors;
  18              		.loc 1 89 0
  19 0000 04309FE5 		ldr	r3, .L2
  20 0004 000083E5 		str	r0, [r3, #0]
  90:../Library/lpcusb/usbstdreq.c **** }
  21              		.loc 1 90 0
  22 0008 1EFF2FE1 		bx	lr
  23              	.L3:
  24              		.align	2
  25              	.L2:
  26 000c 00000000 		.word	.LANCHOR0
  27              		.cfi_endproc
  28              	.LFE0:
  30              		.align	2
  31              		.global	USBGetDescriptor
  33              	USBGetDescriptor:
  34              	.LFB1:
  91:../Library/lpcusb/usbstdreq.c **** 
  92:../Library/lpcusb/usbstdreq.c **** 
  93:../Library/lpcusb/usbstdreq.c **** /**
  94:../Library/lpcusb/usbstdreq.c **** 	Parses the list of installed USB descriptors and attempts to find
  95:../Library/lpcusb/usbstdreq.c **** 	the specified USB descriptor.
  96:../Library/lpcusb/usbstdreq.c **** 		
  97:../Library/lpcusb/usbstdreq.c **** 	@param [in]		wTypeIndex	Type and index of the descriptor
  98:../Library/lpcusb/usbstdreq.c **** 	@param [in]		wLangID		Language ID of the descriptor (currently unused)
  99:../Library/lpcusb/usbstdreq.c **** 	@param [out]	*piLen		Descriptor length
 100:../Library/lpcusb/usbstdreq.c **** 	@param [out]	*ppbData	Descriptor data
 101:../Library/lpcusb/usbstdreq.c **** 	
 102:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if the descriptor was found, FALSE otherwise
 103:../Library/lpcusb/usbstdreq.c ****  */
 104:../Library/lpcusb/usbstdreq.c **** BOOL USBGetDescriptor(U16 wTypeIndex, U16 wLangID, int *piLen, U8 **ppbData)
 105:../Library/lpcusb/usbstdreq.c **** {
  35              		.loc 1 105 0
  36              		.cfi_startproc
  37              		@ Function supports interworking.
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              		@ link register save eliminated.
  41              	.LVL1:
  42 0010 0008A0E1 		mov	r0, r0, asl #16
  43              	.LVL2:
 106:../Library/lpcusb/usbstdreq.c **** 	U8	bType, bIndex;
 107:../Library/lpcusb/usbstdreq.c **** 	U8	*pab;
 108:../Library/lpcusb/usbstdreq.c **** 	int iCurIndex;
 109:../Library/lpcusb/usbstdreq.c **** 	
 110:../Library/lpcusb/usbstdreq.c **** 	ASSERT(pabDescrip != NULL);
 111:../Library/lpcusb/usbstdreq.c **** 
 112:../Library/lpcusb/usbstdreq.c **** 	bType = GET_DESC_TYPE(wTypeIndex);
 113:../Library/lpcusb/usbstdreq.c **** 	bIndex = GET_DESC_INDEX(wTypeIndex);
 114:../Library/lpcusb/usbstdreq.c **** 	
 115:../Library/lpcusb/usbstdreq.c **** 	pab = (U8 *)pabDescrip;
  44              		.loc 1 115 0
  45 0014 6C109FE5 		ldr	r1, .L12
  46              	.LVL3:
 105:../Library/lpcusb/usbstdreq.c **** {
  47              		.loc 1 105 0
  48 0018 70002DE9 		stmfd	sp!, {r4, r5, r6}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 12
  51              		.cfi_offset 6, -4
  52              		.cfi_offset 5, -8
  53              		.cfi_offset 4, -12
 105:../Library/lpcusb/usbstdreq.c **** {
  54              		.loc 1 105 0
  55 001c 2058A0E1 		mov	r5, r0, lsr #16
 112:../Library/lpcusb/usbstdreq.c **** 	bType = GET_DESC_TYPE(wTypeIndex);
  56              		.loc 1 112 0
  57 0020 204CA0E1 		mov	r4, r0, lsr #24
  58              	.LVL4:
 113:../Library/lpcusb/usbstdreq.c **** 	bIndex = GET_DESC_INDEX(wTypeIndex);
  59              		.loc 1 113 0
  60 0024 FF5005E2 		and	r5, r5, #255
  61              	.LVL5:
  62              		.loc 1 115 0
  63 0028 001091E5 		ldr	r1, [r1, #0]
  64              	.LVL6:
 116:../Library/lpcusb/usbstdreq.c **** 	iCurIndex = 0;
  65              		.loc 1 116 0
  66 002c 00C0A0E3 		mov	ip, #0
 117:../Library/lpcusb/usbstdreq.c **** 	
 118:../Library/lpcusb/usbstdreq.c **** 	while (pab[DESC_bLength] != 0) {
  67              		.loc 1 118 0
  68 0030 0F0000EA 		b	.L5
  69              	.LVL7:
  70              	.L10:
 119:../Library/lpcusb/usbstdreq.c **** 		if (pab[DESC_bDescriptorType] == bType) {
  71              		.loc 1 119 0
  72 0034 0160D1E5 		ldrb	r6, [r1, #1]	@ zero_extendqisi2
  73 0038 040056E1 		cmp	r6, r4
  74 003c 0B00001A 		bne	.L6
 120:../Library/lpcusb/usbstdreq.c **** 			if (iCurIndex == bIndex) {
  75              		.loc 1 120 0
  76 0040 05005CE1 		cmp	ip, r5
  77 0044 0800001A 		bne	.L7
 121:../Library/lpcusb/usbstdreq.c **** 				// set data pointer
 122:../Library/lpcusb/usbstdreq.c **** 				*ppbData = pab;
  78              		.loc 1 122 0
  79 0048 001083E5 		str	r1, [r3, #0]
 123:../Library/lpcusb/usbstdreq.c **** 				// get length from structure
 124:../Library/lpcusb/usbstdreq.c **** 				if (bType == DESC_CONFIGURATION) {
  80              		.loc 1 124 0
  81 004c 020054E3 		cmp	r4, #2
 125:../Library/lpcusb/usbstdreq.c **** 					// configuration descriptor is an exception, length is at offset 2 and 3
 126:../Library/lpcusb/usbstdreq.c **** 					*piLen =	(pab[CONF_DESC_wTotalLength]) |
 127:../Library/lpcusb/usbstdreq.c **** 								(pab[CONF_DESC_wTotalLength + 1] << 8);
  82              		.loc 1 127 0
  83 0050 0300D105 		ldreqb	r0, [r1, #3]	@ zero_extendqisi2
 126:../Library/lpcusb/usbstdreq.c **** 					*piLen =	(pab[CONF_DESC_wTotalLength]) |
  84              		.loc 1 126 0
  85 0054 0230D105 		ldreqb	r3, [r1, #2]	@ zero_extendqisi2
  86              	.LVL8:
 128:../Library/lpcusb/usbstdreq.c **** 				}
 129:../Library/lpcusb/usbstdreq.c **** 				else {
 130:../Library/lpcusb/usbstdreq.c **** 					// normally length is at offset 0
 131:../Library/lpcusb/usbstdreq.c **** 					*piLen = pab[DESC_bLength];
  87              		.loc 1 131 0
  88 0058 0030D115 		ldrneb	r3, [r1, #0]	@ zero_extendqisi2
 126:../Library/lpcusb/usbstdreq.c **** 					*piLen =	(pab[CONF_DESC_wTotalLength]) |
  89              		.loc 1 126 0
  90 005c 00348301 		orreq	r3, r3, r0, asl #8
  91              		.loc 1 131 0
  92 0060 003082E5 		str	r3, [r2, #0]
 132:../Library/lpcusb/usbstdreq.c **** 				}
 133:../Library/lpcusb/usbstdreq.c **** 				return TRUE;
  93              		.loc 1 133 0
  94 0064 0100A0E3 		mov	r0, #1
  95 0068 040000EA 		b	.L9
  96              	.LVL9:
  97              	.L7:
 134:../Library/lpcusb/usbstdreq.c **** 			}
 135:../Library/lpcusb/usbstdreq.c **** 			iCurIndex++;
  98              		.loc 1 135 0
  99 006c 01C08CE2 		add	ip, ip, #1
 100              	.LVL10:
 101              	.L6:
 136:../Library/lpcusb/usbstdreq.c **** 		}
 137:../Library/lpcusb/usbstdreq.c **** 		// skip to next descriptor
 138:../Library/lpcusb/usbstdreq.c **** 		pab += pab[DESC_bLength];
 102              		.loc 1 138 0
 103 0070 001081E0 		add	r1, r1, r0
 104              	.LVL11:
 105              	.L5:
 118:../Library/lpcusb/usbstdreq.c **** 	while (pab[DESC_bLength] != 0) {
 106              		.loc 1 118 0 discriminator 1
 107 0074 0000D1E5 		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 108 0078 000050E3 		cmp	r0, #0
 109 007c ECFFFF1A 		bne	.L10
 110              	.LVL12:
 111              	.L9:
 139:../Library/lpcusb/usbstdreq.c **** 	}
 140:../Library/lpcusb/usbstdreq.c **** 	// nothing found
 141:../Library/lpcusb/usbstdreq.c **** 	DBG("Desc %x not found!\n", wTypeIndex);
 142:../Library/lpcusb/usbstdreq.c **** 	return FALSE;
 143:../Library/lpcusb/usbstdreq.c **** }
 112              		.loc 1 143 0
 113 0080 7000BDE8 		ldmfd	sp!, {r4, r5, r6}
 114 0084 1EFF2FE1 		bx	lr
 115              	.L13:
 116              		.align	2
 117              	.L12:
 118 0088 00000000 		.word	.LANCHOR0
 119              		.cfi_endproc
 120              	.LFE1:
 122              		.align	2
 123              		.global	USBHandleStandardRequest
 125              	USBHandleStandardRequest:
 126              	.LFB6:
 144:../Library/lpcusb/usbstdreq.c **** 
 145:../Library/lpcusb/usbstdreq.c **** 
 146:../Library/lpcusb/usbstdreq.c **** /**
 147:../Library/lpcusb/usbstdreq.c **** 	Configures the device according to the specified configuration index and
 148:../Library/lpcusb/usbstdreq.c **** 	alternate setting by parsing the installed USB descriptor list.
 149:../Library/lpcusb/usbstdreq.c **** 	A configuration index of 0 unconfigures the device.
 150:../Library/lpcusb/usbstdreq.c **** 		
 151:../Library/lpcusb/usbstdreq.c **** 	@param [in]		bConfigIndex	Configuration index
 152:../Library/lpcusb/usbstdreq.c **** 	@param [in]		bAltSetting		Alternate setting number
 153:../Library/lpcusb/usbstdreq.c **** 	
 154:../Library/lpcusb/usbstdreq.c **** 	@todo function always returns TRUE, add stricter checking?
 155:../Library/lpcusb/usbstdreq.c **** 	
 156:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if successfully configured, FALSE otherwise
 157:../Library/lpcusb/usbstdreq.c ****  */
 158:../Library/lpcusb/usbstdreq.c **** static BOOL USBSetConfiguration(U8 bConfigIndex, U8 bAltSetting)
 159:../Library/lpcusb/usbstdreq.c **** {
 160:../Library/lpcusb/usbstdreq.c **** 	U8	*pab;
 161:../Library/lpcusb/usbstdreq.c **** 	U8	bCurConfig, bCurAltSetting;
 162:../Library/lpcusb/usbstdreq.c **** 	U8	bEP;
 163:../Library/lpcusb/usbstdreq.c **** 	U16	wMaxPktSize;
 164:../Library/lpcusb/usbstdreq.c **** 	
 165:../Library/lpcusb/usbstdreq.c **** 	ASSERT(pabDescrip != NULL);
 166:../Library/lpcusb/usbstdreq.c **** 
 167:../Library/lpcusb/usbstdreq.c **** 	if (bConfigIndex == 0) {
 168:../Library/lpcusb/usbstdreq.c **** 		// unconfigure device
 169:../Library/lpcusb/usbstdreq.c **** 		USBHwConfigDevice(FALSE);
 170:../Library/lpcusb/usbstdreq.c **** 	}
 171:../Library/lpcusb/usbstdreq.c **** 	else {
 172:../Library/lpcusb/usbstdreq.c **** 		// configure endpoints for this configuration/altsetting
 173:../Library/lpcusb/usbstdreq.c **** 		pab = (U8 *)pabDescrip;
 174:../Library/lpcusb/usbstdreq.c **** 		bCurConfig = 0xFF;
 175:../Library/lpcusb/usbstdreq.c **** 		bCurAltSetting = 0xFF;
 176:../Library/lpcusb/usbstdreq.c **** 
 177:../Library/lpcusb/usbstdreq.c **** 		while (pab[DESC_bLength] != 0) {
 178:../Library/lpcusb/usbstdreq.c **** 
 179:../Library/lpcusb/usbstdreq.c **** 			switch (pab[DESC_bDescriptorType]) {
 180:../Library/lpcusb/usbstdreq.c **** 
 181:../Library/lpcusb/usbstdreq.c **** 			case DESC_CONFIGURATION:
 182:../Library/lpcusb/usbstdreq.c **** 				// remember current configuration index
 183:../Library/lpcusb/usbstdreq.c **** 				bCurConfig = pab[CONF_DESC_bConfigurationValue];
 184:../Library/lpcusb/usbstdreq.c **** 				break;
 185:../Library/lpcusb/usbstdreq.c **** 
 186:../Library/lpcusb/usbstdreq.c **** 			case DESC_INTERFACE:
 187:../Library/lpcusb/usbstdreq.c **** 				// remember current alternate setting
 188:../Library/lpcusb/usbstdreq.c **** 				bCurAltSetting = pab[INTF_DESC_bAlternateSetting];
 189:../Library/lpcusb/usbstdreq.c **** 				break;
 190:../Library/lpcusb/usbstdreq.c **** 
 191:../Library/lpcusb/usbstdreq.c **** 			case DESC_ENDPOINT:
 192:../Library/lpcusb/usbstdreq.c **** 				if ((bCurConfig == bConfigIndex) &&
 193:../Library/lpcusb/usbstdreq.c **** 					(bCurAltSetting == bAltSetting)) {
 194:../Library/lpcusb/usbstdreq.c **** 					// endpoint found for desired config and alternate setting
 195:../Library/lpcusb/usbstdreq.c **** 					bEP = pab[ENDP_DESC_bEndpointAddress];
 196:../Library/lpcusb/usbstdreq.c **** 					wMaxPktSize = 	(pab[ENDP_DESC_wMaxPacketSize]) |
 197:../Library/lpcusb/usbstdreq.c **** 									(pab[ENDP_DESC_wMaxPacketSize + 1] << 8);
 198:../Library/lpcusb/usbstdreq.c **** 					// configure endpoint
 199:../Library/lpcusb/usbstdreq.c **** 					USBHwEPConfig(bEP, wMaxPktSize);
 200:../Library/lpcusb/usbstdreq.c **** 				}
 201:../Library/lpcusb/usbstdreq.c **** 				break;
 202:../Library/lpcusb/usbstdreq.c **** 
 203:../Library/lpcusb/usbstdreq.c **** 			default:
 204:../Library/lpcusb/usbstdreq.c **** 				break;
 205:../Library/lpcusb/usbstdreq.c **** 			}
 206:../Library/lpcusb/usbstdreq.c **** 			// skip to next descriptor
 207:../Library/lpcusb/usbstdreq.c **** 			pab += pab[DESC_bLength];
 208:../Library/lpcusb/usbstdreq.c **** 		}
 209:../Library/lpcusb/usbstdreq.c **** 		
 210:../Library/lpcusb/usbstdreq.c **** 		// configure device
 211:../Library/lpcusb/usbstdreq.c **** 		USBHwConfigDevice(TRUE);
 212:../Library/lpcusb/usbstdreq.c **** 	}
 213:../Library/lpcusb/usbstdreq.c **** 
 214:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 215:../Library/lpcusb/usbstdreq.c **** }
 216:../Library/lpcusb/usbstdreq.c **** 
 217:../Library/lpcusb/usbstdreq.c **** 
 218:../Library/lpcusb/usbstdreq.c **** /**
 219:../Library/lpcusb/usbstdreq.c **** 	Local function to handle a standard device request
 220:../Library/lpcusb/usbstdreq.c **** 		
 221:../Library/lpcusb/usbstdreq.c **** 	@param [in]		pSetup		The setup packet
 222:../Library/lpcusb/usbstdreq.c **** 	@param [in,out]	*piLen		Pointer to data length
 223:../Library/lpcusb/usbstdreq.c **** 	@param [in,out]	ppbData		Data buffer.
 224:../Library/lpcusb/usbstdreq.c **** 
 225:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if the request was handled successfully
 226:../Library/lpcusb/usbstdreq.c ****  */
 227:../Library/lpcusb/usbstdreq.c **** static BOOL HandleStdDeviceReq(TSetupPacket *pSetup, int *piLen, U8 **ppbData)
 228:../Library/lpcusb/usbstdreq.c **** {
 229:../Library/lpcusb/usbstdreq.c **** 	U8	*pbData = *ppbData;
 230:../Library/lpcusb/usbstdreq.c **** 
 231:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 232:../Library/lpcusb/usbstdreq.c **** 	
 233:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_STATUS:
 234:../Library/lpcusb/usbstdreq.c **** 		// bit 0: self-powered
 235:../Library/lpcusb/usbstdreq.c **** 		// bit 1: remote wakeup = not supported
 236:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 237:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 238:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 239:../Library/lpcusb/usbstdreq.c **** 		break;
 240:../Library/lpcusb/usbstdreq.c **** 		
 241:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_ADDRESS:
 242:../Library/lpcusb/usbstdreq.c **** 		USBHwSetAddress(pSetup->wValue);
 243:../Library/lpcusb/usbstdreq.c **** 		break;
 244:../Library/lpcusb/usbstdreq.c **** 
 245:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_DESCRIPTOR:
 246:../Library/lpcusb/usbstdreq.c **** 		DBG("D%x", pSetup->wValue);
 247:../Library/lpcusb/usbstdreq.c **** 		return USBGetDescriptor(pSetup->wValue, pSetup->wIndex, piLen, ppbData);
 248:../Library/lpcusb/usbstdreq.c **** 
 249:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_CONFIGURATION:
 250:../Library/lpcusb/usbstdreq.c **** 		// indicate if we are configured
 251:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = bConfiguration;
 252:../Library/lpcusb/usbstdreq.c **** 		*piLen = 1;
 253:../Library/lpcusb/usbstdreq.c **** 		break;
 254:../Library/lpcusb/usbstdreq.c **** 
 255:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_CONFIGURATION:
 256:../Library/lpcusb/usbstdreq.c **** 		if (!USBSetConfiguration(pSetup->wValue & 0xFF, 0)) {
 257:../Library/lpcusb/usbstdreq.c **** 			DBG("USBSetConfiguration failed!\n");
 258:../Library/lpcusb/usbstdreq.c **** 			return FALSE;
 259:../Library/lpcusb/usbstdreq.c **** 		}
 260:../Library/lpcusb/usbstdreq.c **** 		// configuration successful, update current configuration
 261:../Library/lpcusb/usbstdreq.c **** 		bConfiguration = pSetup->wValue & 0xFF;	
 262:../Library/lpcusb/usbstdreq.c **** 		break;
 263:../Library/lpcusb/usbstdreq.c **** 
 264:../Library/lpcusb/usbstdreq.c **** 	case REQ_CLEAR_FEATURE:
 265:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_FEATURE:
 266:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_REMOTE_WAKEUP) {
 267:../Library/lpcusb/usbstdreq.c **** 			// put DEVICE_REMOTE_WAKEUP code here
 268:../Library/lpcusb/usbstdreq.c **** 		}
 269:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_TEST_MODE) {
 270:../Library/lpcusb/usbstdreq.c **** 			// put TEST_MODE code here
 271:../Library/lpcusb/usbstdreq.c **** 		}
 272:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 273:../Library/lpcusb/usbstdreq.c **** 
 274:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_DESCRIPTOR:
 275:../Library/lpcusb/usbstdreq.c **** 		DBG("Device req %d not implemented\n", pSetup->bRequest);
 276:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 277:../Library/lpcusb/usbstdreq.c **** 
 278:../Library/lpcusb/usbstdreq.c **** 	default:
 279:../Library/lpcusb/usbstdreq.c **** 		DBG("Illegal device req %d\n", pSetup->bRequest);
 280:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 281:../Library/lpcusb/usbstdreq.c **** 	}
 282:../Library/lpcusb/usbstdreq.c **** 	
 283:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 284:../Library/lpcusb/usbstdreq.c **** }
 285:../Library/lpcusb/usbstdreq.c **** 
 286:../Library/lpcusb/usbstdreq.c **** 
 287:../Library/lpcusb/usbstdreq.c **** /**
 288:../Library/lpcusb/usbstdreq.c **** 	Local function to handle a standard interface request
 289:../Library/lpcusb/usbstdreq.c **** 		
 290:../Library/lpcusb/usbstdreq.c **** 	@param [in]		pSetup		The setup packet
 291:../Library/lpcusb/usbstdreq.c **** 	@param [in,out]	*piLen		Pointer to data length
 292:../Library/lpcusb/usbstdreq.c **** 	@param [in]		ppbData		Data buffer.
 293:../Library/lpcusb/usbstdreq.c **** 
 294:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if the request was handled successfully
 295:../Library/lpcusb/usbstdreq.c ****  */
 296:../Library/lpcusb/usbstdreq.c **** static BOOL HandleStdInterfaceReq(TSetupPacket	*pSetup, int *piLen, U8 **ppbData)
 297:../Library/lpcusb/usbstdreq.c **** {
 298:../Library/lpcusb/usbstdreq.c **** 	U8	*pbData = *ppbData;
 299:../Library/lpcusb/usbstdreq.c **** 
 300:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 301:../Library/lpcusb/usbstdreq.c **** 
 302:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_STATUS:
 303:../Library/lpcusb/usbstdreq.c **** 		// no bits specified
 304:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 305:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 306:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 307:../Library/lpcusb/usbstdreq.c **** 		break;
 308:../Library/lpcusb/usbstdreq.c **** 
 309:../Library/lpcusb/usbstdreq.c **** 	case REQ_CLEAR_FEATURE:
 310:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_FEATURE:
 311:../Library/lpcusb/usbstdreq.c **** 		// not defined for interface
 312:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 313:../Library/lpcusb/usbstdreq.c **** 	
 314:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_INTERFACE:	// TODO use bNumInterfaces
 315:../Library/lpcusb/usbstdreq.c ****         // there is only one interface, return n-1 (= 0)
 316:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 317:../Library/lpcusb/usbstdreq.c **** 		*piLen = 1;
 318:../Library/lpcusb/usbstdreq.c **** 		break;
 319:../Library/lpcusb/usbstdreq.c **** 	
 320:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_INTERFACE:	// TODO use bNumInterfaces
 321:../Library/lpcusb/usbstdreq.c **** 		// there is only one interface (= 0)
 322:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue != 0) {
 323:../Library/lpcusb/usbstdreq.c **** 			return FALSE;
 324:../Library/lpcusb/usbstdreq.c **** 		}
 325:../Library/lpcusb/usbstdreq.c **** 		*piLen = 0;
 326:../Library/lpcusb/usbstdreq.c **** 		break;
 327:../Library/lpcusb/usbstdreq.c **** 
 328:../Library/lpcusb/usbstdreq.c **** 	default:
 329:../Library/lpcusb/usbstdreq.c **** 		DBG("Illegal interface req %d\n", pSetup->bRequest);
 330:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 331:../Library/lpcusb/usbstdreq.c **** 	}
 332:../Library/lpcusb/usbstdreq.c **** 
 333:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 334:../Library/lpcusb/usbstdreq.c **** }
 335:../Library/lpcusb/usbstdreq.c **** 
 336:../Library/lpcusb/usbstdreq.c **** 
 337:../Library/lpcusb/usbstdreq.c **** /**
 338:../Library/lpcusb/usbstdreq.c **** 	Local function to handle a standard endpoint request
 339:../Library/lpcusb/usbstdreq.c **** 		
 340:../Library/lpcusb/usbstdreq.c **** 	@param [in]		pSetup		The setup packet
 341:../Library/lpcusb/usbstdreq.c **** 	@param [in,out]	*piLen		Pointer to data length
 342:../Library/lpcusb/usbstdreq.c **** 	@param [in]		ppbData		Data buffer.
 343:../Library/lpcusb/usbstdreq.c **** 
 344:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if the request was handled successfully
 345:../Library/lpcusb/usbstdreq.c ****  */
 346:../Library/lpcusb/usbstdreq.c **** static BOOL HandleStdEndPointReq(TSetupPacket	*pSetup, int *piLen, U8 **ppbData)
 347:../Library/lpcusb/usbstdreq.c **** {
 348:../Library/lpcusb/usbstdreq.c **** 	U8	*pbData = *ppbData;
 349:../Library/lpcusb/usbstdreq.c **** 
 350:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 351:../Library/lpcusb/usbstdreq.c **** 	case REQ_GET_STATUS:
 352:../Library/lpcusb/usbstdreq.c **** 		// bit 0 = endpointed halted or not
 353:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = (USBHwEPGetStatus(pSetup->wIndex) & EP_STATUS_STALLED) ? 1 : 0;
 354:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 355:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 356:../Library/lpcusb/usbstdreq.c **** 		break;
 357:../Library/lpcusb/usbstdreq.c **** 		
 358:../Library/lpcusb/usbstdreq.c **** 	case REQ_CLEAR_FEATURE:
 359:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_ENDPOINT_HALT) {
 360:../Library/lpcusb/usbstdreq.c **** 			// clear HALT by unstalling
 361:../Library/lpcusb/usbstdreq.c **** 			USBHwEPStall(pSetup->wIndex, FALSE);
 362:../Library/lpcusb/usbstdreq.c **** 			break;
 363:../Library/lpcusb/usbstdreq.c **** 		}
 364:../Library/lpcusb/usbstdreq.c **** 		// only ENDPOINT_HALT defined for endpoints
 365:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 366:../Library/lpcusb/usbstdreq.c **** 	
 367:../Library/lpcusb/usbstdreq.c **** 	case REQ_SET_FEATURE:
 368:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_ENDPOINT_HALT) {
 369:../Library/lpcusb/usbstdreq.c **** 			// set HALT by stalling
 370:../Library/lpcusb/usbstdreq.c **** 			USBHwEPStall(pSetup->wIndex, TRUE);
 371:../Library/lpcusb/usbstdreq.c **** 			break;
 372:../Library/lpcusb/usbstdreq.c **** 		}
 373:../Library/lpcusb/usbstdreq.c **** 		// only ENDPOINT_HALT defined for endpoints
 374:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 375:../Library/lpcusb/usbstdreq.c **** 
 376:../Library/lpcusb/usbstdreq.c **** 	case REQ_SYNCH_FRAME:
 377:../Library/lpcusb/usbstdreq.c **** 		DBG("EP req %d not implemented\n", pSetup->bRequest);
 378:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 379:../Library/lpcusb/usbstdreq.c **** 
 380:../Library/lpcusb/usbstdreq.c **** 	default:
 381:../Library/lpcusb/usbstdreq.c **** 		DBG("Illegal EP req %d\n", pSetup->bRequest);
 382:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 383:../Library/lpcusb/usbstdreq.c **** 	}
 384:../Library/lpcusb/usbstdreq.c **** 	
 385:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 386:../Library/lpcusb/usbstdreq.c **** }
 387:../Library/lpcusb/usbstdreq.c **** 
 388:../Library/lpcusb/usbstdreq.c **** 
 389:../Library/lpcusb/usbstdreq.c **** /**
 390:../Library/lpcusb/usbstdreq.c **** 	Default handler for standard ('chapter 9') requests
 391:../Library/lpcusb/usbstdreq.c **** 	
 392:../Library/lpcusb/usbstdreq.c **** 	If a custom request handler was installed, this handler is called first.
 393:../Library/lpcusb/usbstdreq.c **** 		
 394:../Library/lpcusb/usbstdreq.c **** 	@param [in]		pSetup		The setup packet
 395:../Library/lpcusb/usbstdreq.c **** 	@param [in,out]	*piLen		Pointer to data length
 396:../Library/lpcusb/usbstdreq.c **** 	@param [in]		ppbData		Data buffer.
 397:../Library/lpcusb/usbstdreq.c **** 
 398:../Library/lpcusb/usbstdreq.c **** 	@return TRUE if the request was handled successfully
 399:../Library/lpcusb/usbstdreq.c ****  */
 400:../Library/lpcusb/usbstdreq.c **** BOOL USBHandleStandardRequest(TSetupPacket	*pSetup, int *piLen, U8 **ppbData)
 401:../Library/lpcusb/usbstdreq.c **** {
 127              		.loc 1 401 0
 128              		.cfi_startproc
 129              		@ Function supports interworking.
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              	.LVL13:
 402:../Library/lpcusb/usbstdreq.c **** 	// try the custom request handler first
 403:../Library/lpcusb/usbstdreq.c **** 	if ((pfnHandleCustomReq != NULL) && pfnHandleCustomReq(pSetup, piLen, ppbData)) {
 133              		.loc 1 403 0
 134 008c 54329FE5 		ldr	r3, .L58
 135 0090 043093E5 		ldr	r3, [r3, #4]
 136 0094 000053E3 		cmp	r3, #0
 401:../Library/lpcusb/usbstdreq.c **** {
 137              		.loc 1 401 0
 138 0098 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 14, -4
 142              		.cfi_offset 8, -8
 143              		.cfi_offset 7, -12
 144              		.cfi_offset 6, -16
 145              		.cfi_offset 5, -20
 146              		.cfi_offset 4, -24
 401:../Library/lpcusb/usbstdreq.c **** {
 147              		.loc 1 401 0
 148 009c 0040A0E1 		mov	r4, r0
 149 00a0 0150A0E1 		mov	r5, r1
 150 00a4 0260A0E1 		mov	r6, r2
 151              		.loc 1 403 0
 152 00a8 0300000A 		beq	.L15
 153              		.loc 1 403 0 is_stmt 0 discriminator 1
 154 00ac 0FE0A0E1 		mov	lr, pc
 155 00b0 13FF2FE1 		bx	r3
 156              	.LVL14:
 157 00b4 000050E3 		cmp	r0, #0
 158 00b8 8400001A 		bne	.L53
 159              	.L15:
 404:../Library/lpcusb/usbstdreq.c **** 		return TRUE;
 405:../Library/lpcusb/usbstdreq.c **** 	}
 406:../Library/lpcusb/usbstdreq.c **** 	
 407:../Library/lpcusb/usbstdreq.c **** 	switch (REQTYPE_GET_RECIP(pSetup->bmRequestType)) {
 160              		.loc 1 407 0 is_stmt 1
 161 00bc 0070D4E5 		ldrb	r7, [r4, #0]	@ zero_extendqisi2
 162 00c0 1F7007E2 		and	r7, r7, #31
 163 00c4 010057E3 		cmp	r7, #1
 164 00c8 4C00000A 		beq	.L18
 165 00cc 020057E3 		cmp	r7, #2
 166 00d0 5F00000A 		beq	.L19
 167 00d4 000057E3 		cmp	r7, #0
 168 00d8 7E00001A 		bne	.L48
 169              	.LVL15:
 170              	.LBB16:
 171              	.LBB17:
 231:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 172              		.loc 1 231 0
 173 00dc 0120D4E5 		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 229:../Library/lpcusb/usbstdreq.c **** 	U8	*pbData = *ppbData;
 174              		.loc 1 229 0
 175 00e0 003096E5 		ldr	r3, [r6, #0]
 176              	.LVL16:
 231:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 177              		.loc 1 231 0
 178 00e4 090052E3 		cmp	r2, #9
 179 00e8 02F19F97 		ldrls	pc, [pc, r2, asl #2]
 180 00ec 790000EA 		b	.L48
 181              	.L26:
 182 00f0 18010000 		.word	.L21
 183 00f4 D8020000 		.word	.L48
 184 00f8 D8020000 		.word	.L48
 185 00fc D8020000 		.word	.L48
 186 0100 D8020000 		.word	.L48
 187 0104 30010000 		.word	.L22
 188 0108 3C010000 		.word	.L23
 189 010c D8020000 		.word	.L48
 190 0110 54010000 		.word	.L24
 191 0114 68010000 		.word	.L25
 192              	.L21:
 236:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 193              		.loc 1 236 0
 194 0118 0020A0E3 		mov	r2, #0
 195 011c 0020C3E5 		strb	r2, [r3, #0]
 237:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 196              		.loc 1 237 0
 197 0120 0120C3E5 		strb	r2, [r3, #1]
 238:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 198              		.loc 1 238 0
 199 0124 0230A0E3 		mov	r3, #2
 200 0128 003085E5 		str	r3, [r5, #0]
 201 012c 670000EA 		b	.L53
 202              	.L22:
 242:../Library/lpcusb/usbstdreq.c **** 		USBHwSetAddress(pSetup->wValue);
 203              		.loc 1 242 0
 204 0130 0200D4E5 		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 205 0134 FEFFFFEB 		bl	USBHwSetAddress
 206              	.LVL17:
 207 0138 640000EA 		b	.L53
 208              	.LVL18:
 209              	.L23:
 247:../Library/lpcusb/usbstdreq.c **** 		return USBGetDescriptor(pSetup->wValue, pSetup->wIndex, piLen, ppbData);
 210              		.loc 1 247 0
 211 013c B200D4E1 		ldrh	r0, [r4, #2]
 212 0140 B410D4E1 		ldrh	r1, [r4, #4]
 213 0144 0520A0E1 		mov	r2, r5
 214 0148 0630A0E1 		mov	r3, r6
 215              	.LVL19:
 216              	.LBE17:
 217              	.LBE16:
 408:../Library/lpcusb/usbstdreq.c **** 	case REQTYPE_RECIP_DEVICE:		return HandleStdDeviceReq(pSetup, piLen, ppbData);
 409:../Library/lpcusb/usbstdreq.c **** 	case REQTYPE_RECIP_INTERFACE:	return HandleStdInterfaceReq(pSetup, piLen, ppbData);
 410:../Library/lpcusb/usbstdreq.c **** 	case REQTYPE_RECIP_ENDPOINT: 	return HandleStdEndPointReq(pSetup, piLen, ppbData);
 411:../Library/lpcusb/usbstdreq.c **** 	default: 						return FALSE;
 412:../Library/lpcusb/usbstdreq.c **** 	}
 413:../Library/lpcusb/usbstdreq.c **** }
 218              		.loc 1 413 0
 219 014c F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 220              	.LBB21:
 221              	.LBB20:
 247:../Library/lpcusb/usbstdreq.c **** 		return USBGetDescriptor(pSetup->wValue, pSetup->wIndex, piLen, ppbData);
 222              		.loc 1 247 0
 223 0150 FEFFFFEA 		b	USBGetDescriptor
 224              	.LVL20:
 225              	.L24:
 251:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = bConfiguration;
 226              		.loc 1 251 0
 227 0154 8C219FE5 		ldr	r2, .L58
 228 0158 0820D2E5 		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 252:../Library/lpcusb/usbstdreq.c **** 		*piLen = 1;
 229              		.loc 1 252 0
 230 015c 0170A0E3 		mov	r7, #1
 251:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = bConfiguration;
 231              		.loc 1 251 0
 232 0160 0020C3E5 		strb	r2, [r3, #0]
 233 0164 330000EA 		b	.L54
 234              	.L25:
 256:../Library/lpcusb/usbstdreq.c **** 		if (!USBSetConfiguration(pSetup->wValue & 0xFF, 0)) {
 235              		.loc 1 256 0
 236 0168 0260D4E5 		ldrb	r6, [r4, #2]	@ zero_extendqisi2
 237              	.LVL21:
 238              	.LBB18:
 239              	.LBB19:
 167:../Library/lpcusb/usbstdreq.c **** 	if (bConfigIndex == 0) {
 240              		.loc 1 167 0
 241 016c 000056E3 		cmp	r6, #0
 169:../Library/lpcusb/usbstdreq.c **** 		USBHwConfigDevice(FALSE);
 242              		.loc 1 169 0
 243 0170 0600A001 		moveq	r0, r6
 167:../Library/lpcusb/usbstdreq.c **** 	if (bConfigIndex == 0) {
 244              		.loc 1 167 0
 245 0174 1C00000A 		beq	.L52
 173:../Library/lpcusb/usbstdreq.c **** 		pab = (U8 *)pabDescrip;
 246              		.loc 1 173 0
 247 0178 68319FE5 		ldr	r3, .L58
 248              	.LVL22:
 249 017c 005093E5 		ldr	r5, [r3, #0]
 250              	.LVL23:
 175:../Library/lpcusb/usbstdreq.c **** 		bCurAltSetting = 0xFF;
 251              		.loc 1 175 0
 252 0180 FF30A0E3 		mov	r3, #255
 174:../Library/lpcusb/usbstdreq.c **** 		bCurConfig = 0xFF;
 253              		.loc 1 174 0
 254 0184 0370A0E1 		mov	r7, r3
 255 0188 130000EA 		b	.L29
 256              	.LVL24:
 257              	.L34:
 179:../Library/lpcusb/usbstdreq.c **** 			switch (pab[DESC_bDescriptorType]) {
 258              		.loc 1 179 0
 259 018c 0120D5E5 		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 260 0190 040052E3 		cmp	r2, #4
 188:../Library/lpcusb/usbstdreq.c **** 				bCurAltSetting = pab[INTF_DESC_bAlternateSetting];
 261              		.loc 1 188 0
 262 0194 0330D505 		ldreqb	r3, [r5, #3]	@ zero_extendqisi2
 263              	.LVL25:
 179:../Library/lpcusb/usbstdreq.c **** 			switch (pab[DESC_bDescriptorType]) {
 264              		.loc 1 179 0
 265 0198 0D00000A 		beq	.L30
 266 019c 050052E3 		cmp	r2, #5
 267 01a0 0200000A 		beq	.L33
 268 01a4 020052E3 		cmp	r2, #2
 183:../Library/lpcusb/usbstdreq.c **** 				bCurConfig = pab[CONF_DESC_bConfigurationValue];
 269              		.loc 1 183 0
 270 01a8 0570D505 		ldreqb	r7, [r5, #5]	@ zero_extendqisi2
 271              	.LVL26:
 272 01ac 080000EA 		b	.L30
 273              	.LVL27:
 274              	.L33:
 192:../Library/lpcusb/usbstdreq.c **** 				if ((bCurConfig == bConfigIndex) &&
 275              		.loc 1 192 0
 276 01b0 000053E3 		cmp	r3, #0
 277 01b4 06005701 		cmpeq	r7, r6
 278 01b8 0500001A 		bne	.L30
 279              	.LVL28:
 196:../Library/lpcusb/usbstdreq.c **** 					wMaxPktSize = 	(pab[ENDP_DESC_wMaxPacketSize]) |
 280              		.loc 1 196 0
 281 01bc 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 197:../Library/lpcusb/usbstdreq.c **** 									(pab[ENDP_DESC_wMaxPacketSize + 1] << 8);
 282              		.loc 1 197 0
 283 01c0 0510D5E5 		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 199:../Library/lpcusb/usbstdreq.c **** 					USBHwEPConfig(bEP, wMaxPktSize);
 284              		.loc 1 199 0
 285 01c4 0200D5E5 		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 286 01c8 011483E1 		orr	r1, r3, r1, asl #8
 287 01cc FEFFFFEB 		bl	USBHwEPConfig
 288              	.LVL29:
 289 01d0 0030A0E3 		mov	r3, #0
 290              	.LVL30:
 291              	.L30:
 207:../Library/lpcusb/usbstdreq.c **** 			pab += pab[DESC_bLength];
 292              		.loc 1 207 0
 293 01d4 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 294 01d8 025085E0 		add	r5, r5, r2
 295              	.LVL31:
 296              	.L29:
 177:../Library/lpcusb/usbstdreq.c **** 		while (pab[DESC_bLength] != 0) {
 297              		.loc 1 177 0
 298 01dc 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 299 01e0 000052E3 		cmp	r2, #0
 300 01e4 E8FFFF1A 		bne	.L34
 211:../Library/lpcusb/usbstdreq.c **** 		USBHwConfigDevice(TRUE);
 301              		.loc 1 211 0
 302 01e8 0100A0E3 		mov	r0, #1
 303              	.LVL32:
 304              	.L52:
 305 01ec FEFFFFEB 		bl	USBHwConfigDevice
 306              	.LBE19:
 307              	.LBE18:
 261:../Library/lpcusb/usbstdreq.c **** 		bConfiguration = pSetup->wValue & 0xFF;	
 308              		.loc 1 261 0
 309 01f0 B220D4E1 		ldrh	r2, [r4, #2]
 310 01f4 EC309FE5 		ldr	r3, .L58
 311 01f8 0820C3E5 		strb	r2, [r3, #8]
 312 01fc 330000EA 		b	.L53
 313              	.LVL33:
 314              	.L18:
 315              	.LBE20:
 316              	.LBE21:
 317              	.LBB22:
 318              	.LBB23:
 300:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 319              		.loc 1 300 0
 320 0200 0130D4E5 		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 321              	.LBE23:
 322              	.LBE22:
 414:../Library/lpcusb/usbstdreq.c **** 
 415:../Library/lpcusb/usbstdreq.c **** 
 416:../Library/lpcusb/usbstdreq.c **** /**
 417:../Library/lpcusb/usbstdreq.c **** 	Registers a callback for custom device requests
 418:../Library/lpcusb/usbstdreq.c **** 	
 419:../Library/lpcusb/usbstdreq.c **** 	In USBHandleStandardRequest, the custom request handler gets a first
 420:../Library/lpcusb/usbstdreq.c **** 	chance at handling the request before it is handed over to the 'chapter 9'
 421:../Library/lpcusb/usbstdreq.c **** 	request handler.
 422:../Library/lpcusb/usbstdreq.c **** 	
 423:../Library/lpcusb/usbstdreq.c **** 	This can be used for example in HID devices, where a REQ_GET_DESCRIPTOR
 424:../Library/lpcusb/usbstdreq.c **** 	request is sent to an interface, which is not covered by the 'chapter 9'
 425:../Library/lpcusb/usbstdreq.c **** 	specification.
 426:../Library/lpcusb/usbstdreq.c **** 		
 427:../Library/lpcusb/usbstdreq.c **** 	@param [in]	pfnHandler	Callback function pointer
 428:../Library/lpcusb/usbstdreq.c ****  */
 429:../Library/lpcusb/usbstdreq.c **** void USBRegisterCustomReqHandler(TFnHandleRequest *pfnHandler)
 430:../Library/lpcusb/usbstdreq.c **** {
 431:../Library/lpcusb/usbstdreq.c **** 	pfnHandleCustomReq = pfnHandler;
 432:../Library/lpcusb/usbstdreq.c **** }
 323              		.loc 1 432 0
 324 0204 002096E5 		ldr	r2, [r6, #0]
 325              	.LVL34:
 326              	.LBB25:
 327              	.LBB24:
 300:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 328              		.loc 1 300 0
 329 0208 000053E3 		cmp	r3, #0
 304:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 330              		.loc 1 304 0
 331 020c 0030C205 		streqb	r3, [r2, #0]
 305:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 332              		.loc 1 305 0
 333 0210 0130C205 		streqb	r3, [r2, #1]
 306:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 334              		.loc 1 306 0
 335 0214 0230A003 		moveq	r3, #2
 300:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 336              		.loc 1 300 0
 337 0218 0B00000A 		beq	.L55
 338 021c 0A0053E3 		cmp	r3, #10
 339 0220 0200000A 		beq	.L36
 340 0224 0B0053E3 		cmp	r3, #11
 341 0228 2A00001A 		bne	.L48
 342 022c 030000EA 		b	.L56
 343              	.L36:
 316:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = 0;
 344              		.loc 1 316 0
 345 0230 0030A0E3 		mov	r3, #0
 346 0234 0030C2E5 		strb	r3, [r2, #0]
 347              	.LVL35:
 348              	.L54:
 317:../Library/lpcusb/usbstdreq.c **** 		*piLen = 1;
 349              		.loc 1 317 0
 350 0238 007085E5 		str	r7, [r5, #0]
 351 023c 260000EA 		b	.L16
 352              	.LVL36:
 353              	.L56:
 322:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue != 0) {
 354              		.loc 1 322 0
 355 0240 B230D4E1 		ldrh	r3, [r4, #2]
 356 0244 000053E3 		cmp	r3, #0
 357 0248 2200001A 		bne	.L48
 358              	.L55:
 325:../Library/lpcusb/usbstdreq.c **** 		*piLen = 0;
 359              		.loc 1 325 0
 360 024c 003085E5 		str	r3, [r5, #0]
 361 0250 210000EA 		b	.L16
 362              	.LVL37:
 363              	.L19:
 364              		.loc 1 432 0
 365 0254 008096E5 		ldr	r8, [r6, #0]
 366              	.LVL38:
 367              	.LBE24:
 368              	.LBE25:
 369              	.LBB26:
 370              	.LBB27:
 350:../Library/lpcusb/usbstdreq.c **** 	switch (pSetup->bRequest) {
 371              		.loc 1 350 0
 372 0258 0160D4E5 		ldrb	r6, [r4, #1]	@ zero_extendqisi2
 373              	.LVL39:
 374 025c 010056E3 		cmp	r6, #1
 375 0260 0D00000A 		beq	.L39
 376 0264 0200003A 		bcc	.L38
 377 0268 030056E3 		cmp	r6, #3
 378 026c 1900001A 		bne	.L48
 379 0270 100000EA 		b	.L57
 380              	.L38:
 353:../Library/lpcusb/usbstdreq.c **** 		pbData[0] = (USBHwEPGetStatus(pSetup->wIndex) & EP_STATUS_STALLED) ? 1 : 0;
 381              		.loc 1 353 0
 382 0274 0400D4E5 		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 383 0278 FEFFFFEB 		bl	USBHwEPGetStatus
 384 027c 020010E3 		tst	r0, #2
 385 0280 0030A003 		moveq	r3, #0
 386 0284 0130A013 		movne	r3, #1
 387 0288 0030C8E5 		strb	r3, [r8, #0]
 354:../Library/lpcusb/usbstdreq.c **** 		pbData[1] = 0;
 388              		.loc 1 354 0
 389 028c 0030A0E3 		mov	r3, #0
 390 0290 0130C8E5 		strb	r3, [r8, #1]
 355:../Library/lpcusb/usbstdreq.c **** 		*piLen = 2;
 391              		.loc 1 355 0
 392 0294 007085E5 		str	r7, [r5, #0]
 393 0298 0C0000EA 		b	.L53
 394              	.L39:
 359:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_ENDPOINT_HALT) {
 395              		.loc 1 359 0
 396 029c B210D4E1 		ldrh	r1, [r4, #2]
 397 02a0 000051E3 		cmp	r1, #0
 398 02a4 0B00001A 		bne	.L48
 361:../Library/lpcusb/usbstdreq.c **** 			USBHwEPStall(pSetup->wIndex, FALSE);
 399              		.loc 1 361 0
 400 02a8 0400D4E5 		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 401 02ac FEFFFFEB 		bl	USBHwEPStall
 385:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 402              		.loc 1 385 0
 403 02b0 0670A0E1 		mov	r7, r6
 404 02b4 080000EA 		b	.L16
 405              	.L57:
 368:../Library/lpcusb/usbstdreq.c **** 		if (pSetup->wValue == FEA_ENDPOINT_HALT) {
 406              		.loc 1 368 0
 407 02b8 B230D4E1 		ldrh	r3, [r4, #2]
 408 02bc 000053E3 		cmp	r3, #0
 409 02c0 0400001A 		bne	.L48
 370:../Library/lpcusb/usbstdreq.c **** 			USBHwEPStall(pSetup->wIndex, TRUE);
 410              		.loc 1 370 0
 411 02c4 0400D4E5 		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 412 02c8 0110A0E3 		mov	r1, #1
 413 02cc FEFFFFEB 		bl	USBHwEPStall
 414              	.LVL40:
 415              	.L53:
 385:../Library/lpcusb/usbstdreq.c **** 	return TRUE;
 416              		.loc 1 385 0
 417 02d0 0170A0E3 		mov	r7, #1
 418 02d4 000000EA 		b	.L16
 419              	.LVL41:
 420              	.L48:
 374:../Library/lpcusb/usbstdreq.c **** 		return FALSE;
 421              		.loc 1 374 0
 422 02d8 0070A0E3 		mov	r7, #0
 423              	.LVL42:
 424              	.L16:
 425              	.LBE27:
 426              	.LBE26:
 413:../Library/lpcusb/usbstdreq.c **** }
 427              		.loc 1 413 0
 428 02dc 0700A0E1 		mov	r0, r7
 429 02e0 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 430 02e4 1EFF2FE1 		bx	lr
 431              	.L59:
 432              		.align	2
 433              	.L58:
 434 02e8 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE6:
 438              		.align	2
 439              		.global	USBRegisterCustomReqHandler
 441              	USBRegisterCustomReqHandler:
 442              	.LFB7:
 430:../Library/lpcusb/usbstdreq.c **** {
 443              		.loc 1 430 0
 444              		.cfi_startproc
 445              		@ Function supports interworking.
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 449              	.LVL43:
 431:../Library/lpcusb/usbstdreq.c **** 	pfnHandleCustomReq = pfnHandler;
 450              		.loc 1 431 0
 451 02ec 04309FE5 		ldr	r3, .L61
 452 02f0 040083E5 		str	r0, [r3, #4]
 453              		.loc 1 432 0
 454 02f4 1EFF2FE1 		bx	lr
 455              	.L62:
 456              		.align	2
 457              	.L61:
 458 02f8 00000000 		.word	.LANCHOR0
 459              		.cfi_endproc
 460              	.LFE7:
 462              		.bss
 463              		.align	2
 464              		.set	.LANCHOR0,. + 0
 467              	pabDescrip:
 468 0000 00000000 		.space	4
 471              	pfnHandleCustomReq:
 472 0004 00000000 		.space	4
 475              	bConfiguration:
 476 0008 00       		.space	1
 477 0009 000000   		.text
 478              	.Letext0:
 479              		.file 2 "../Library/lpcusb/type.h"
 480              		.file 3 "../Library/lpcusb/usbstruct.h"
 481              		.file 4 "../Library/lpcusb/usbapi.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbstdreq.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:8      .text:0000000000000000 USBRegisterDescriptors
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:26     .text:000000000000000c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:30     .text:0000000000000010 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:33     .text:0000000000000010 USBGetDescriptor
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:118    .text:0000000000000088 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:122    .text:000000000000008c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:125    .text:000000000000008c USBHandleStandardRequest
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:182    .text:00000000000000f0 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:194    .text:0000000000000118 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:434    .text:00000000000002e8 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:438    .text:00000000000002ec $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:441    .text:00000000000002ec USBRegisterCustomReqHandler
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:458    .text:00000000000002f8 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:463    .bss:0000000000000000 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:467    .bss:0000000000000000 pabDescrip
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:471    .bss:0000000000000004 pfnHandleCustomReq
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccxLnVIR.s:475    .bss:0000000000000008 bConfiguration
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBHwSetAddress
USBHwEPConfig
USBHwConfigDevice
USBHwEPGetStatus
USBHwEPStall
