   1              		.file	"fat16.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   7              	fat16_get_fs_free_callback:
   8              	.LFB29:
   9              		.file 1 "../Library/sdfat/fat16.c"
   1:../Library/sdfat/fat16.c **** /* This program is free software; you can redistribute it and/or modify
   2:../Library/sdfat/fat16.c ****  * it under the terms of the GNU General Public License version 2 as
   3:../Library/sdfat/fat16.c ****  * published by the Free Software Foundation.
   4:../Library/sdfat/fat16.c ****  */
   5:../Library/sdfat/fat16.c **** 
   6:../Library/sdfat/fat16.c **** #include <stdio.h>
   7:../Library/sdfat/fat16.c **** 
   8:../Library/sdfat/fat16.c **** //Debug
   9:../Library/sdfat/fat16.c **** #include "rprintf.h"
  10:../Library/sdfat/fat16.c **** 
  11:../Library/sdfat/fat16.c **** #include "partition.h"
  12:../Library/sdfat/fat16.c **** #include "fat16.h"
  13:../Library/sdfat/fat16.c **** #include "fat16_config.h"
  14:../Library/sdfat/fat16.c **** #include "sd_raw.h"
  15:../Library/sdfat/fat16.c **** 
  16:../Library/sdfat/fat16.c **** #include <stdlib.h>
  17:../Library/sdfat/fat16.c **** #include <string.h>
  18:../Library/sdfat/fat16.c **** 
  19:../Library/sdfat/fat16.c **** /**
  20:../Library/sdfat/fat16.c ****  * \addtogroup fat16 FAT16 support
  21:../Library/sdfat/fat16.c ****  *
  22:../Library/sdfat/fat16.c ****  * This module implements FAT16 read and write access.
  23:../Library/sdfat/fat16.c ****  *
  24:../Library/sdfat/fat16.c ****  * The following features are supported:
  25:../Library/sdfat/fat16.c ****  * - File names up to 31 characters long.
  26:../Library/sdfat/fat16.c ****  * - Unlimited depth of subdirectories.
  27:../Library/sdfat/fat16.c ****  * - Short 8.3 and long filenames.
  28:../Library/sdfat/fat16.c ****  * - Creating and deleting files.
  29:../Library/sdfat/fat16.c ****  * - Reading and writing from and to files.
  30:../Library/sdfat/fat16.c ****  * - File resizing.
  31:../Library/sdfat/fat16.c ****  * - File sizes of up to 4 gigabytes.
  32:../Library/sdfat/fat16.c ****  *
  33:../Library/sdfat/fat16.c ****  * @{
  34:../Library/sdfat/fat16.c ****  */
  35:../Library/sdfat/fat16.c **** /**
  36:../Library/sdfat/fat16.c ****  * \file
  37:../Library/sdfat/fat16.c ****  * FAT16 implementation.
  38:../Library/sdfat/fat16.c ****  *
  39:../Library/sdfat/fat16.c ****  * \author Roland Riegel
  40:../Library/sdfat/fat16.c ****  */
  41:../Library/sdfat/fat16.c **** 
  42:../Library/sdfat/fat16.c **** /**
  43:../Library/sdfat/fat16.c ****  * \addtogroup fat16_config FAT16 configuration
  44:../Library/sdfat/fat16.c ****  * Preprocessor defines to configure the FAT16 implementation.
  45:../Library/sdfat/fat16.c ****  */
  46:../Library/sdfat/fat16.c **** 
  47:../Library/sdfat/fat16.c **** /**
  48:../Library/sdfat/fat16.c ****  * \addtogroup fat16_fs FAT16 access
  49:../Library/sdfat/fat16.c ****  * Basic functions for handling a FAT16 filesystem.
  50:../Library/sdfat/fat16.c ****  */
  51:../Library/sdfat/fat16.c **** 
  52:../Library/sdfat/fat16.c **** /**
  53:../Library/sdfat/fat16.c ****  * \addtogroup fat16_file FAT16 file functions
  54:../Library/sdfat/fat16.c ****  * Functions for managing files.
  55:../Library/sdfat/fat16.c ****  */
  56:../Library/sdfat/fat16.c **** 
  57:../Library/sdfat/fat16.c **** /**
  58:../Library/sdfat/fat16.c ****  * \addtogroup fat16_dir FAT16 directory functions
  59:../Library/sdfat/fat16.c ****  * Functions for managing directories.
  60:../Library/sdfat/fat16.c ****  */
  61:../Library/sdfat/fat16.c **** 
  62:../Library/sdfat/fat16.c **** /**
  63:../Library/sdfat/fat16.c ****  * @}
  64:../Library/sdfat/fat16.c ****  */
  65:../Library/sdfat/fat16.c **** 
  66:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_FREE 0x0000
  67:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_RESERVED_MIN (uint16_t)0xfff0
  68:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_RESERVED_MAX (uint16_t)0xfff6
  69:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_BAD (uint16_t)0xfff7
  70:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_LAST_MIN (uint16_t)0xfff8
  71:../Library/sdfat/fat16.c **** #define FAT16_CLUSTER_LAST_MAX (uint16_t)0xffff
  72:../Library/sdfat/fat16.c **** 
  73:../Library/sdfat/fat16.c **** #define FAT16_DIRENTRY_DELETED 0xe5
  74:../Library/sdfat/fat16.c **** #define FAT16_DIRENTRY_LFNLAST (1 << 6)
  75:../Library/sdfat/fat16.c **** #define FAT16_DIRENTRY_LFNSEQMASK ((1 << 6) - 1)
  76:../Library/sdfat/fat16.c **** 
  77:../Library/sdfat/fat16.c **** /* Each entry within the directory table has a size of 32 bytes
  78:../Library/sdfat/fat16.c ****  * and either contains a 8.3 DOS-style file name or a part of a
  79:../Library/sdfat/fat16.c ****  * long file name, which may consist of several directory table
  80:../Library/sdfat/fat16.c ****  * entries at once.
  81:../Library/sdfat/fat16.c ****  *
  82:../Library/sdfat/fat16.c ****  * multi-byte integer values are stored little-endian!
  83:../Library/sdfat/fat16.c ****  *
  84:../Library/sdfat/fat16.c ****  * 8.3 file name entry:
  85:../Library/sdfat/fat16.c ****  * ====================
  86:../Library/sdfat/fat16.c ****  * offset  length  description
  87:../Library/sdfat/fat16.c ****  *      0       8  name (space padded)
  88:../Library/sdfat/fat16.c ****  *      8       3  extension (space padded)
  89:../Library/sdfat/fat16.c ****  *     11       1  attributes (FAT16_ATTRIB_*)
  90:../Library/sdfat/fat16.c ****  
  91:../Library/sdfat/fat16.c ****  *     0x0E     2  Creation Time
  92:../Library/sdfat/fat16.c ****  *     0x10     2  Creation Date
  93:../Library/sdfat/fat16.c ****  
  94:../Library/sdfat/fat16.c ****  *
  95:../Library/sdfat/fat16.c ****  * long file name (lfn) entry ordering for a single file name:
  96:../Library/sdfat/fat16.c ****  * ===========================================================
  97:../Library/sdfat/fat16.c ****  * LFN entry n
  98:../Library/sdfat/fat16.c ****  *     ...
  99:../Library/sdfat/fat16.c ****  * LFN entry 2
 100:../Library/sdfat/fat16.c ****  * LFN entry 1
 101:../Library/sdfat/fat16.c ****  * 8.3 entry (see above)
 102:../Library/sdfat/fat16.c ****  *
 103:../Library/sdfat/fat16.c ****  * lfn entry:
 104:../Library/sdfat/fat16.c ****  * ==========
 105:../Library/sdfat/fat16.c ****  * offset  length  description
 106:../Library/sdfat/fat16.c ****  *      0       1  ordinal field
 107:../Library/sdfat/fat16.c ****  *      1       2  unicode character 1
 108:../Library/sdfat/fat16.c ****  *      3       3  unicode character 2
 109:../Library/sdfat/fat16.c ****  *      5       3  unicode character 3
 110:../Library/sdfat/fat16.c ****  *      7       3  unicode character 4
 111:../Library/sdfat/fat16.c ****  *      9       3  unicode character 5
 112:../Library/sdfat/fat16.c ****  *     11       1  attribute (always 0x0f)
 113:../Library/sdfat/fat16.c ****  *     12       1  type (reserved, always 0)
 114:../Library/sdfat/fat16.c ****  *     13       1  checksum
 115:../Library/sdfat/fat16.c ****  *     14       2  unicode character 6
 116:../Library/sdfat/fat16.c ****  *     16       2  unicode character 7
 117:../Library/sdfat/fat16.c ****  *     18       2  unicode character 8
 118:../Library/sdfat/fat16.c ****  *     20       2  unicode character 9
 119:../Library/sdfat/fat16.c ****  *     22       2  unicode character 10
 120:../Library/sdfat/fat16.c ****  *     24       2  unicode character 11
 121:../Library/sdfat/fat16.c ****  *     26       2  cluster (unused, always 0)
 122:../Library/sdfat/fat16.c ****  *     28       2  unicode character 12
 123:../Library/sdfat/fat16.c ****  *     30       2  unicode character 13
 124:../Library/sdfat/fat16.c ****  *
 125:../Library/sdfat/fat16.c ****  * The ordinal field contains a descending number, from n to 1.
 126:../Library/sdfat/fat16.c ****  * For the n'th lfn entry the ordinal field is or'ed with 0x40.
 127:../Library/sdfat/fat16.c ****  * For deleted lfn entries, the ordinal field is set to 0xe5.
 128:../Library/sdfat/fat16.c ****  */
 129:../Library/sdfat/fat16.c **** 
 130:../Library/sdfat/fat16.c **** struct fat16_header_struct
 131:../Library/sdfat/fat16.c **** {
 132:../Library/sdfat/fat16.c ****     uint32_t size;
 133:../Library/sdfat/fat16.c **** 
 134:../Library/sdfat/fat16.c ****     uint32_t fat_offset;
 135:../Library/sdfat/fat16.c ****     uint32_t fat_size;
 136:../Library/sdfat/fat16.c **** 
 137:../Library/sdfat/fat16.c ****     uint16_t sector_size;
 138:../Library/sdfat/fat16.c ****     uint16_t cluster_size;
 139:../Library/sdfat/fat16.c **** 
 140:../Library/sdfat/fat16.c ****     uint32_t root_dir_offset;
 141:../Library/sdfat/fat16.c **** 
 142:../Library/sdfat/fat16.c ****     uint32_t cluster_zero_offset;
 143:../Library/sdfat/fat16.c **** };
 144:../Library/sdfat/fat16.c **** 
 145:../Library/sdfat/fat16.c **** struct fat16_fs_struct
 146:../Library/sdfat/fat16.c **** {
 147:../Library/sdfat/fat16.c ****     struct partition_struct* partition;
 148:../Library/sdfat/fat16.c ****     struct fat16_header_struct header;
 149:../Library/sdfat/fat16.c **** };
 150:../Library/sdfat/fat16.c **** 
 151:../Library/sdfat/fat16.c **** struct fat16_file_struct
 152:../Library/sdfat/fat16.c **** {
 153:../Library/sdfat/fat16.c ****     struct fat16_fs_struct* fs;
 154:../Library/sdfat/fat16.c ****     struct fat16_dir_entry_struct dir_entry;
 155:../Library/sdfat/fat16.c ****     uint32_t pos;
 156:../Library/sdfat/fat16.c ****     uint16_t pos_cluster;
 157:../Library/sdfat/fat16.c **** };
 158:../Library/sdfat/fat16.c **** 
 159:../Library/sdfat/fat16.c **** struct fat16_dir_struct
 160:../Library/sdfat/fat16.c **** {
 161:../Library/sdfat/fat16.c ****     struct fat16_fs_struct* fs;
 162:../Library/sdfat/fat16.c ****     struct fat16_dir_entry_struct dir_entry;
 163:../Library/sdfat/fat16.c ****     uint16_t entry_next;
 164:../Library/sdfat/fat16.c **** };
 165:../Library/sdfat/fat16.c **** 
 166:../Library/sdfat/fat16.c **** struct fat16_read_callback_arg
 167:../Library/sdfat/fat16.c **** {
 168:../Library/sdfat/fat16.c ****     uint16_t entry_cur;
 169:../Library/sdfat/fat16.c ****     uint16_t entry_num;
 170:../Library/sdfat/fat16.c ****     uint32_t entry_offset;
 171:../Library/sdfat/fat16.c ****     uint8_t byte_count;
 172:../Library/sdfat/fat16.c **** };
 173:../Library/sdfat/fat16.c **** 
 174:../Library/sdfat/fat16.c **** struct fat16_usage_count_callback_arg
 175:../Library/sdfat/fat16.c **** {
 176:../Library/sdfat/fat16.c ****     uint16_t cluster_count;
 177:../Library/sdfat/fat16.c ****     uint8_t buffer_size;
 178:../Library/sdfat/fat16.c **** };
 179:../Library/sdfat/fat16.c **** 
 180:../Library/sdfat/fat16.c **** static uint8_t fat16_read_header(struct fat16_fs_struct* fs);
 181:../Library/sdfat/fat16.c **** static uint8_t fat16_read_root_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, stru
 182:../Library/sdfat/fat16.c **** static uint8_t fat16_read_sub_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, const
 183:../Library/sdfat/fat16.c **** static uint8_t fat16_dir_entry_seek_callback(uint8_t* buffer, uint32_t offset, void* p);
 184:../Library/sdfat/fat16.c **** static uint8_t fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p);
 185:../Library/sdfat/fat16.c **** static uint8_t fat16_interpret_dir_entry(struct fat16_dir_entry_struct* dir_entry, const uint8_t* r
 186:../Library/sdfat/fat16.c **** static uint16_t fat16_get_next_cluster(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 187:../Library/sdfat/fat16.c **** static uint16_t fat16_append_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num, uint1
 188:../Library/sdfat/fat16.c **** static uint8_t fat16_free_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 189:../Library/sdfat/fat16.c **** static uint8_t fat16_terminate_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num);
 190:../Library/sdfat/fat16.c **** static uint8_t fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry
 191:../Library/sdfat/fat16.c **** 
 192:../Library/sdfat/fat16.c **** static uint8_t fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p);
 193:../Library/sdfat/fat16.c **** 
 194:../Library/sdfat/fat16.c **** /**
 195:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 196:../Library/sdfat/fat16.c ****  * Opens a FAT16 filesystem.
 197:../Library/sdfat/fat16.c ****  *
 198:../Library/sdfat/fat16.c ****  * \param[in] partition Discriptor of partition on which the filesystem resides.
 199:../Library/sdfat/fat16.c ****  * \returns 0 on error, a FAT16 filesystem descriptor on success.
 200:../Library/sdfat/fat16.c ****  * \see fat16_open
 201:../Library/sdfat/fat16.c ****  */
 202:../Library/sdfat/fat16.c **** struct fat16_fs_struct* fat16_open(struct partition_struct* partition)
 203:../Library/sdfat/fat16.c **** {
 204:../Library/sdfat/fat16.c ****     if(!partition ||
 205:../Library/sdfat/fat16.c ****         #if FAT16_WRITE_SUPPORT
 206:../Library/sdfat/fat16.c ****         !partition->device_write
 207:../Library/sdfat/fat16.c ****        #else
 208:../Library/sdfat/fat16.c ****         0
 209:../Library/sdfat/fat16.c ****        #endif
 210:../Library/sdfat/fat16.c ****        )
 211:../Library/sdfat/fat16.c ****     return 0;
 212:../Library/sdfat/fat16.c **** 
 213:../Library/sdfat/fat16.c ****     struct fat16_fs_struct* fs = malloc(sizeof(*fs));
 214:../Library/sdfat/fat16.c ****     if(!fs)
 215:../Library/sdfat/fat16.c ****     {
 216:../Library/sdfat/fat16.c ****         rprintf("MALLOC FAILS\n\r");
 217:../Library/sdfat/fat16.c ****         return 0;
 218:../Library/sdfat/fat16.c ****     }
 219:../Library/sdfat/fat16.c ****     memset(fs, 0, sizeof(*fs));
 220:../Library/sdfat/fat16.c **** 
 221:../Library/sdfat/fat16.c ****     fs->partition = partition;
 222:../Library/sdfat/fat16.c ****     if(!fat16_read_header(fs))
 223:../Library/sdfat/fat16.c ****     {
 224:../Library/sdfat/fat16.c ****         rprintf("Failed Reading Header\n\r");
 225:../Library/sdfat/fat16.c ****         free(fs);
 226:../Library/sdfat/fat16.c ****         return 0;
 227:../Library/sdfat/fat16.c ****     }
 228:../Library/sdfat/fat16.c **** 
 229:../Library/sdfat/fat16.c ****     return fs;
 230:../Library/sdfat/fat16.c **** }
 231:../Library/sdfat/fat16.c **** 
 232:../Library/sdfat/fat16.c **** /**
 233:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 234:../Library/sdfat/fat16.c ****  * Closes a FAT16 filesystem.
 235:../Library/sdfat/fat16.c ****  *
 236:../Library/sdfat/fat16.c ****  * When this function returns, the given filesystem descriptor
 237:../Library/sdfat/fat16.c ****  * will be invalid.
 238:../Library/sdfat/fat16.c ****  *
 239:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem to close.
 240:../Library/sdfat/fat16.c ****  * \see fat16_open
 241:../Library/sdfat/fat16.c ****  */
 242:../Library/sdfat/fat16.c **** void fat16_close(struct fat16_fs_struct* fs)
 243:../Library/sdfat/fat16.c **** {
 244:../Library/sdfat/fat16.c ****     if(!fs)
 245:../Library/sdfat/fat16.c ****         return;
 246:../Library/sdfat/fat16.c **** 
 247:../Library/sdfat/fat16.c ****     free(fs);
 248:../Library/sdfat/fat16.c **** }
 249:../Library/sdfat/fat16.c **** 
 250:../Library/sdfat/fat16.c **** /**
 251:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 252:../Library/sdfat/fat16.c ****  * Reads and parses the header of a FAT16 filesystem.
 253:../Library/sdfat/fat16.c ****  *
 254:../Library/sdfat/fat16.c ****  * \param[inout] fs The filesystem for which to parse the header.
 255:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
 256:../Library/sdfat/fat16.c ****  */
 257:../Library/sdfat/fat16.c **** uint8_t fat16_read_header(struct fat16_fs_struct* fs)
 258:../Library/sdfat/fat16.c **** {
 259:../Library/sdfat/fat16.c ****     if(!fs)
 260:../Library/sdfat/fat16.c ****         return 0;
 261:../Library/sdfat/fat16.c **** 
 262:../Library/sdfat/fat16.c ****     struct partition_struct* partition = fs->partition;
 263:../Library/sdfat/fat16.c ****     if(!partition)
 264:../Library/sdfat/fat16.c ****     {
 265:../Library/sdfat/fat16.c ****         rprintf("Partition = 0\n\r");
 266:../Library/sdfat/fat16.c ****         return 0;
 267:../Library/sdfat/fat16.c ****     }
 268:../Library/sdfat/fat16.c **** 
 269:../Library/sdfat/fat16.c ****     /* read fat parameters */
 270:../Library/sdfat/fat16.c ****     uint8_t buffer[25];
 271:../Library/sdfat/fat16.c ****     uint32_t partition_offset = partition->offset * 512;
 272:../Library/sdfat/fat16.c **** 
 273:../Library/sdfat/fat16.c ****     if(!partition->device_read(partition_offset + 0x0b, buffer, sizeof(buffer)))
 274:../Library/sdfat/fat16.c ****         return 0;
 275:../Library/sdfat/fat16.c **** 
 276:../Library/sdfat/fat16.c ****     uint16_t bytes_per_sector = ((uint16_t) buffer[0x00]) |
 277:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x01] << 8);
 278:../Library/sdfat/fat16.c ****     uint8_t sectors_per_cluster = buffer[0x02];
 279:../Library/sdfat/fat16.c ****     uint16_t reserved_sectors = ((uint16_t) buffer[0x03]) |
 280:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x04] << 8);
 281:../Library/sdfat/fat16.c ****     uint8_t fat_copies = buffer[0x05];
 282:../Library/sdfat/fat16.c ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 283:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x07] << 8);
 284:../Library/sdfat/fat16.c ****     uint16_t sector_count_16 = ((uint16_t) buffer[0x08]) |
 285:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x09] << 8);
 286:../Library/sdfat/fat16.c ****     uint16_t sectors_per_fat = ((uint16_t) buffer[0x0b]) |
 287:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x0c] << 8);
 288:../Library/sdfat/fat16.c ****     uint32_t sector_count = ((uint32_t) buffer[0x15]) |
 289:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x16] << 8) |
 290:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x17] << 16) |
 291:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x18] << 24);
 292:../Library/sdfat/fat16.c **** 
 293:../Library/sdfat/fat16.c ****     if(sectors_per_fat == 0)
 294:../Library/sdfat/fat16.c ****     /* this is not a FAT16 */
 295:../Library/sdfat/fat16.c ****         return 0;
 296:../Library/sdfat/fat16.c **** 
 297:../Library/sdfat/fat16.c ****     if(sector_count == 0)
 298:../Library/sdfat/fat16.c ****     {
 299:../Library/sdfat/fat16.c ****         if(sector_count_16 == 0)
 300:../Library/sdfat/fat16.c ****     /* illegal volume size */
 301:../Library/sdfat/fat16.c ****             return 0;
 302:../Library/sdfat/fat16.c ****         else
 303:../Library/sdfat/fat16.c ****             sector_count = sector_count_16;
 304:../Library/sdfat/fat16.c ****     }
 305:../Library/sdfat/fat16.c **** 
 306:../Library/sdfat/fat16.c ****     /* ensure we really have a FAT16 fs here */
 307:../Library/sdfat/fat16.c ****     uint32_t data_sector_count = sector_count
 308:../Library/sdfat/fat16.c ****     - reserved_sectors
 309:../Library/sdfat/fat16.c ****     - (uint32_t) sectors_per_fat * fat_copies
 310:../Library/sdfat/fat16.c ****     - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sector);
 311:../Library/sdfat/fat16.c ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 312:../Library/sdfat/fat16.c ****     if(data_cluster_count < 4085 || data_cluster_count >= 65525)
 313:../Library/sdfat/fat16.c ****     /* this is not a FAT16 */
 314:../Library/sdfat/fat16.c ****         return 0;
 315:../Library/sdfat/fat16.c **** 
 316:../Library/sdfat/fat16.c ****     partition->type = PARTITION_TYPE_FAT16;
 317:../Library/sdfat/fat16.c **** 
 318:../Library/sdfat/fat16.c ****     /* fill header information */
 319:../Library/sdfat/fat16.c ****     struct fat16_header_struct* header = &fs->header;
 320:../Library/sdfat/fat16.c ****     memset(header, 0, sizeof(*header));
 321:../Library/sdfat/fat16.c **** 
 322:../Library/sdfat/fat16.c ****     header->size = sector_count * bytes_per_sector;
 323:../Library/sdfat/fat16.c **** 
 324:../Library/sdfat/fat16.c ****     header->fat_offset = /* jump to partition */
 325:../Library/sdfat/fat16.c ****     partition_offset +
 326:../Library/sdfat/fat16.c ****     /* jump to fat */
 327:../Library/sdfat/fat16.c ****     (uint32_t) reserved_sectors * bytes_per_sector;
 328:../Library/sdfat/fat16.c ****     header->fat_size = (data_cluster_count + 2) * 2;
 329:../Library/sdfat/fat16.c **** 
 330:../Library/sdfat/fat16.c ****     header->sector_size = bytes_per_sector;
 331:../Library/sdfat/fat16.c ****     header->cluster_size = (uint32_t) bytes_per_sector * sectors_per_cluster;
 332:../Library/sdfat/fat16.c **** 
 333:../Library/sdfat/fat16.c ****     header->root_dir_offset = /* jump to fats */
 334:../Library/sdfat/fat16.c ****     header->fat_offset +
 335:../Library/sdfat/fat16.c ****     /* jump to root directory entries */
 336:../Library/sdfat/fat16.c ****     (uint32_t) fat_copies * sectors_per_fat * bytes_per_sector;
 337:../Library/sdfat/fat16.c **** 
 338:../Library/sdfat/fat16.c ****     header->cluster_zero_offset = /* jump to root directory entries */
 339:../Library/sdfat/fat16.c ****     header->root_dir_offset +
 340:../Library/sdfat/fat16.c ****     /* skip root directory entries */
 341:../Library/sdfat/fat16.c ****     (uint32_t) max_root_entries * 32;
 342:../Library/sdfat/fat16.c **** 
 343:../Library/sdfat/fat16.c ****     return 1;
 344:../Library/sdfat/fat16.c **** }
 345:../Library/sdfat/fat16.c **** 
 346:../Library/sdfat/fat16.c **** /**
 347:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 348:../Library/sdfat/fat16.c ****  * Reads a directory entry of the root directory.
 349:../Library/sdfat/fat16.c ****  *
 350:../Library/sdfat/fat16.c ****  * \param[in] fs Descriptor of file system to use.
 351:../Library/sdfat/fat16.c ****  * \param[in] entry_num The index of the directory entry to read.
 352:../Library/sdfat/fat16.c ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 353:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success
 354:../Library/sdfat/fat16.c ****  * \see fat16_read_sub_dir_entry, fat16_read_dir_entry_by_path
 355:../Library/sdfat/fat16.c ****  */
 356:../Library/sdfat/fat16.c **** uint8_t fat16_read_root_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, struct fat1
 357:../Library/sdfat/fat16.c **** {
 358:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry)
 359:../Library/sdfat/fat16.c ****         return 0;
 360:../Library/sdfat/fat16.c **** 
 361:../Library/sdfat/fat16.c ****     /* we read from the root directory entry */
 362:../Library/sdfat/fat16.c ****     const struct fat16_header_struct* header = &fs->header;
 363:../Library/sdfat/fat16.c ****     device_read_interval_t device_read_interval = fs->partition->device_read_interval;
 364:../Library/sdfat/fat16.c ****     uint8_t buffer[32];
 365:../Library/sdfat/fat16.c **** 
 366:../Library/sdfat/fat16.c ****     /* seek to the n-th entry */
 367:../Library/sdfat/fat16.c ****     struct fat16_read_callback_arg arg;
 368:../Library/sdfat/fat16.c ****     memset(&arg, 0, sizeof(arg));
 369:../Library/sdfat/fat16.c ****     arg.entry_num = entry_num;
 370:../Library/sdfat/fat16.c ****     if(!device_read_interval(header->root_dir_offset,
 371:../Library/sdfat/fat16.c ****         buffer,
 372:../Library/sdfat/fat16.c ****        sizeof(buffer),
 373:../Library/sdfat/fat16.c ****        header->cluster_zero_offset - header->root_dir_offset,
 374:../Library/sdfat/fat16.c ****        fat16_dir_entry_seek_callback,
 375:../Library/sdfat/fat16.c ****        &arg) ||
 376:../Library/sdfat/fat16.c ****        arg.entry_offset == 0
 377:../Library/sdfat/fat16.c ****        )
 378:../Library/sdfat/fat16.c ****     return 0;
 379:../Library/sdfat/fat16.c **** 
 380:../Library/sdfat/fat16.c ****     /* read entry */
 381:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 382:../Library/sdfat/fat16.c ****     if(!device_read_interval(arg.entry_offset,
 383:../Library/sdfat/fat16.c ****         buffer,
 384:../Library/sdfat/fat16.c ****        sizeof(buffer),
 385:../Library/sdfat/fat16.c ****        arg.byte_count,
 386:../Library/sdfat/fat16.c ****        fat16_dir_entry_read_callback,
 387:../Library/sdfat/fat16.c ****        dir_entry))
 388:../Library/sdfat/fat16.c ****     return 0;
 389:../Library/sdfat/fat16.c **** 
 390:../Library/sdfat/fat16.c ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 391:../Library/sdfat/fat16.c **** }
 392:../Library/sdfat/fat16.c **** 
 393:../Library/sdfat/fat16.c **** /**
 394:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 395:../Library/sdfat/fat16.c ****  * Reads a directory entry of a given parent directory.
 396:../Library/sdfat/fat16.c ****  *
 397:../Library/sdfat/fat16.c ****  * \param[in] fs Descriptor of file system to use.
 398:../Library/sdfat/fat16.c ****  * \param[in] entry_num The index of the directory entry to read.
 399:../Library/sdfat/fat16.c ****  * \param[in] parent Directory entry descriptor in which to read directory entry.
 400:../Library/sdfat/fat16.c ****  * \param[out] dir_entry Directory entry descriptor which will get filled.
 401:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success
 402:../Library/sdfat/fat16.c ****  * \see fat16_read_root_dir_entry, fat16_read_dir_entry_by_path
 403:../Library/sdfat/fat16.c ****  */
 404:../Library/sdfat/fat16.c **** uint8_t fat16_read_sub_dir_entry(const struct fat16_fs_struct* fs, uint16_t entry_num, const struct
 405:../Library/sdfat/fat16.c **** {
 406:../Library/sdfat/fat16.c ****     if(!fs || !parent || !dir_entry)
 407:../Library/sdfat/fat16.c ****         return 0;
 408:../Library/sdfat/fat16.c **** 
 409:../Library/sdfat/fat16.c ****     /* we are in a parent directory and want to search within its directory entry table */
 410:../Library/sdfat/fat16.c ****     if(!(parent->attributes & FAT16_ATTRIB_DIR))
 411:../Library/sdfat/fat16.c ****         return 0;
 412:../Library/sdfat/fat16.c **** 
 413:../Library/sdfat/fat16.c ****     /* loop through all clusters of the directory */
 414:../Library/sdfat/fat16.c ****     uint8_t buffer[32];
 415:../Library/sdfat/fat16.c ****     uint32_t cluster_offset;
 416:../Library/sdfat/fat16.c ****     uint16_t cluster_size = fs->header.cluster_size;
 417:../Library/sdfat/fat16.c ****     uint16_t cluster_num = parent->cluster;
 418:../Library/sdfat/fat16.c ****     struct fat16_read_callback_arg arg;
 419:../Library/sdfat/fat16.c **** 
 420:../Library/sdfat/fat16.c ****     while(1)
 421:../Library/sdfat/fat16.c ****     {
 422:../Library/sdfat/fat16.c ****         /* calculate new cluster offset */
 423:../Library/sdfat/fat16.c ****         cluster_offset = fs->header.cluster_zero_offset + (uint32_t) (cluster_num - 2) * cluster_si
 424:../Library/sdfat/fat16.c **** 
 425:../Library/sdfat/fat16.c ****         /* seek to the n-th entry */
 426:../Library/sdfat/fat16.c ****         memset(&arg, 0, sizeof(arg));
 427:../Library/sdfat/fat16.c ****         arg.entry_num = entry_num;
 428:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(cluster_offset,
 429:../Library/sdfat/fat16.c ****             buffer,
 430:../Library/sdfat/fat16.c ****            sizeof(buffer),
 431:../Library/sdfat/fat16.c ****            cluster_size,
 432:../Library/sdfat/fat16.c ****            fat16_dir_entry_seek_callback,
 433:../Library/sdfat/fat16.c ****            &arg)
 434:../Library/sdfat/fat16.c ****            )
 435:../Library/sdfat/fat16.c ****         return 0;
 436:../Library/sdfat/fat16.c **** 
 437:../Library/sdfat/fat16.c ****         /* check if we found the entry */
 438:../Library/sdfat/fat16.c ****         if(arg.entry_offset)
 439:../Library/sdfat/fat16.c ****             break;
 440:../Library/sdfat/fat16.c **** 
 441:../Library/sdfat/fat16.c ****         /* get number of next cluster */
 442:../Library/sdfat/fat16.c ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 443:../Library/sdfat/fat16.c ****             return 0; /* directory entry not found */
 444:../Library/sdfat/fat16.c ****     }
 445:../Library/sdfat/fat16.c **** 
 446:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 447:../Library/sdfat/fat16.c **** 
 448:../Library/sdfat/fat16.c ****     /* read entry */
 449:../Library/sdfat/fat16.c ****     if(!fs->partition->device_read_interval(arg.entry_offset,
 450:../Library/sdfat/fat16.c ****         buffer,
 451:../Library/sdfat/fat16.c ****        sizeof(buffer),
 452:../Library/sdfat/fat16.c ****        arg.byte_count,
 453:../Library/sdfat/fat16.c ****        fat16_dir_entry_read_callback,
 454:../Library/sdfat/fat16.c ****        dir_entry))
 455:../Library/sdfat/fat16.c ****     return 0;
 456:../Library/sdfat/fat16.c **** 
 457:../Library/sdfat/fat16.c ****     return dir_entry->long_name[0] != '\0' ? 1 : 0;
 458:../Library/sdfat/fat16.c **** }
 459:../Library/sdfat/fat16.c **** 
 460:../Library/sdfat/fat16.c **** /**
 461:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 462:../Library/sdfat/fat16.c ****  * Callback function for seeking through subdirectory entries.
 463:../Library/sdfat/fat16.c ****  */
 464:../Library/sdfat/fat16.c **** uint8_t fat16_dir_entry_seek_callback(uint8_t* buffer, uint32_t offset, void* p)
 465:../Library/sdfat/fat16.c **** {
 466:../Library/sdfat/fat16.c ****     struct fat16_read_callback_arg* arg = p;
 467:../Library/sdfat/fat16.c **** 
 468:../Library/sdfat/fat16.c ****     /* skip deleted or empty entries */
 469:../Library/sdfat/fat16.c ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 470:../Library/sdfat/fat16.c ****         return 1;
 471:../Library/sdfat/fat16.c **** 
 472:../Library/sdfat/fat16.c ****     if(arg->entry_cur == arg->entry_num)
 473:../Library/sdfat/fat16.c ****     {
 474:../Library/sdfat/fat16.c ****         arg->entry_offset = offset;
 475:../Library/sdfat/fat16.c ****         arg->byte_count = buffer[11] == 0x0f ?
 476:../Library/sdfat/fat16.c ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
 477:../Library/sdfat/fat16.c ****         32;
 478:../Library/sdfat/fat16.c ****         return 0;
 479:../Library/sdfat/fat16.c ****     }
 480:../Library/sdfat/fat16.c **** 
 481:../Library/sdfat/fat16.c ****     /* if we read a 8.3 entry, we reached a new directory entry */
 482:../Library/sdfat/fat16.c ****     if(buffer[11] != 0x0f)
 483:../Library/sdfat/fat16.c ****         ++arg->entry_cur;
 484:../Library/sdfat/fat16.c **** 
 485:../Library/sdfat/fat16.c ****     return 1;
 486:../Library/sdfat/fat16.c **** }
 487:../Library/sdfat/fat16.c **** 
 488:../Library/sdfat/fat16.c **** /**
 489:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 490:../Library/sdfat/fat16.c ****  * Callback function for reading a directory entry.
 491:../Library/sdfat/fat16.c ****  */
 492:../Library/sdfat/fat16.c **** uint8_t fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p)
 493:../Library/sdfat/fat16.c **** {
 494:../Library/sdfat/fat16.c ****     struct fat16_dir_entry_struct* dir_entry = p;
 495:../Library/sdfat/fat16.c **** 
 496:../Library/sdfat/fat16.c ****     /* there should not be any deleted or empty entries */
 497:../Library/sdfat/fat16.c ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 498:../Library/sdfat/fat16.c ****         return 0;
 499:../Library/sdfat/fat16.c **** 
 500:../Library/sdfat/fat16.c ****     if(!dir_entry->entry_offset)
 501:../Library/sdfat/fat16.c ****         dir_entry->entry_offset = offset;
 502:../Library/sdfat/fat16.c **** 
 503:../Library/sdfat/fat16.c ****     switch(fat16_interpret_dir_entry(dir_entry, buffer))
 504:../Library/sdfat/fat16.c ****     {
 505:../Library/sdfat/fat16.c ****         case 0: /* failure */
 506:../Library/sdfat/fat16.c ****             return 0;
 507:../Library/sdfat/fat16.c ****             case 1: /* buffer successfully parsed, continue */
 508:../Library/sdfat/fat16.c ****             return 1;
 509:../Library/sdfat/fat16.c ****             case 2: /* directory entry complete, finish */
 510:../Library/sdfat/fat16.c ****             return 0;
 511:../Library/sdfat/fat16.c ****         }
 512:../Library/sdfat/fat16.c **** 
 513:../Library/sdfat/fat16.c ****     return 0;
 514:../Library/sdfat/fat16.c **** }
 515:../Library/sdfat/fat16.c **** 
 516:../Library/sdfat/fat16.c **** /**
 517:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 518:../Library/sdfat/fat16.c ****  * Interprets a raw directory entry and puts the contained
 519:../Library/sdfat/fat16.c ****  * information into the directory entry.
 520:../Library/sdfat/fat16.c ****  *
 521:../Library/sdfat/fat16.c ****  * For a single file there may exist multiple directory
 522:../Library/sdfat/fat16.c ****  * entries. All except the last one are lfn entries, which
 523:../Library/sdfat/fat16.c ****  * contain parts of the long filename. The last directory
 524:../Library/sdfat/fat16.c ****  * entry is a traditional 8.3 style one. It contains all
 525:../Library/sdfat/fat16.c ****  * other information like size, cluster, date and time.
 526:../Library/sdfat/fat16.c ****  *
 527:../Library/sdfat/fat16.c ****  * \param[in,out] dir_entry The directory entry to fill.
 528:../Library/sdfat/fat16.c ****  * \param[in] raw_entry A pointer to 32 bytes of raw data.
 529:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success and 2 if the
 530:../Library/sdfat/fat16.c ****  *          directory entry is complete.
 531:../Library/sdfat/fat16.c ****  */
 532:../Library/sdfat/fat16.c **** uint8_t fat16_interpret_dir_entry(struct fat16_dir_entry_struct* dir_entry, const uint8_t* raw_entr
 533:../Library/sdfat/fat16.c **** {
 534:../Library/sdfat/fat16.c ****     if(!dir_entry || !raw_entry || !raw_entry[0])
 535:../Library/sdfat/fat16.c ****         return 0;
 536:../Library/sdfat/fat16.c **** 
 537:../Library/sdfat/fat16.c ****     char* long_name = dir_entry->long_name;
 538:../Library/sdfat/fat16.c ****     if(raw_entry[11] == 0x0f)
 539:../Library/sdfat/fat16.c ****     {
 540:../Library/sdfat/fat16.c ****         uint16_t char_offset = ((raw_entry[0] & 0x3f) - 1) * 13;
 541:../Library/sdfat/fat16.c **** 
 542:../Library/sdfat/fat16.c ****         if(char_offset + 12 < sizeof(dir_entry->long_name))
 543:../Library/sdfat/fat16.c ****         {
 544:../Library/sdfat/fat16.c ****             /* Lfn supports unicode, but we do not, for now.
 545:../Library/sdfat/fat16.c ****                                                  * So we assume pure ascii and read only every
 546:../Library/sdfat/fat16.c ****                                                  * second byte.
 547:../Library/sdfat/fat16.c ****                                                  */
 548:../Library/sdfat/fat16.c ****             long_name[char_offset + 0] = raw_entry[1];
 549:../Library/sdfat/fat16.c ****             long_name[char_offset + 1] = raw_entry[3];
 550:../Library/sdfat/fat16.c ****             long_name[char_offset + 2] = raw_entry[5];
 551:../Library/sdfat/fat16.c ****             long_name[char_offset + 3] = raw_entry[7];
 552:../Library/sdfat/fat16.c ****             long_name[char_offset + 4] = raw_entry[9];
 553:../Library/sdfat/fat16.c ****             long_name[char_offset + 5] = raw_entry[14];
 554:../Library/sdfat/fat16.c ****             long_name[char_offset + 6] = raw_entry[16];
 555:../Library/sdfat/fat16.c ****             long_name[char_offset + 7] = raw_entry[18];
 556:../Library/sdfat/fat16.c ****             long_name[char_offset + 8] = raw_entry[20];
 557:../Library/sdfat/fat16.c ****             long_name[char_offset + 9] = raw_entry[22];
 558:../Library/sdfat/fat16.c ****             long_name[char_offset + 10] = raw_entry[24];
 559:../Library/sdfat/fat16.c ****             long_name[char_offset + 11] = raw_entry[28];
 560:../Library/sdfat/fat16.c ****             long_name[char_offset + 12] = raw_entry[30];
 561:../Library/sdfat/fat16.c ****         }
 562:../Library/sdfat/fat16.c **** 
 563:../Library/sdfat/fat16.c ****         return 1;
 564:../Library/sdfat/fat16.c ****     }
 565:../Library/sdfat/fat16.c ****     else
 566:../Library/sdfat/fat16.c ****     {
 567:../Library/sdfat/fat16.c ****         /* if we do not have a long name, take the short one */
 568:../Library/sdfat/fat16.c ****         if(long_name[0] == '\0')
 569:../Library/sdfat/fat16.c ****         {
 570:../Library/sdfat/fat16.c ****             uint8_t i;
 571:../Library/sdfat/fat16.c ****             for(i = 0; i < 8; ++i)
 572:../Library/sdfat/fat16.c ****             {
 573:../Library/sdfat/fat16.c ****                 if(raw_entry[i] == ' ')
 574:../Library/sdfat/fat16.c ****                     break;
 575:../Library/sdfat/fat16.c ****                 long_name[i] = raw_entry[i];
 576:../Library/sdfat/fat16.c ****             }
 577:../Library/sdfat/fat16.c ****             if(raw_entry[8] != ' ')
 578:../Library/sdfat/fat16.c ****             {
 579:../Library/sdfat/fat16.c ****                 long_name[i++] = '.';
 580:../Library/sdfat/fat16.c **** 
 581:../Library/sdfat/fat16.c ****                 uint8_t j = 8;
 582:../Library/sdfat/fat16.c ****                 for(; j < 11; ++j)
 583:../Library/sdfat/fat16.c ****                 {
 584:../Library/sdfat/fat16.c ****                     if(raw_entry[j] != ' ')
 585:../Library/sdfat/fat16.c ****                     {
 586:../Library/sdfat/fat16.c ****                         long_name[i++] = raw_entry[j];
 587:../Library/sdfat/fat16.c ****                     }
 588:../Library/sdfat/fat16.c ****                     else
 589:../Library/sdfat/fat16.c ****                     {
 590:../Library/sdfat/fat16.c ****                         break;
 591:../Library/sdfat/fat16.c ****                     }
 592:../Library/sdfat/fat16.c ****                 }
 593:../Library/sdfat/fat16.c ****             }
 594:../Library/sdfat/fat16.c **** 
 595:../Library/sdfat/fat16.c ****             long_name[i] = '\0';
 596:../Library/sdfat/fat16.c ****         }
 597:../Library/sdfat/fat16.c **** 
 598:../Library/sdfat/fat16.c ****         /* extract properties of file and store them within the structure */
 599:../Library/sdfat/fat16.c ****         dir_entry->attributes = raw_entry[11];
 600:../Library/sdfat/fat16.c ****         dir_entry->cluster = ((uint16_t) raw_entry[26]) |
 601:../Library/sdfat/fat16.c ****         ((uint16_t) raw_entry[27] << 8);
 602:../Library/sdfat/fat16.c ****         dir_entry->file_size = ((uint32_t) raw_entry[28]) |
 603:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[29] << 8) |
 604:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[30] << 16) |
 605:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[31] << 24);
 606:../Library/sdfat/fat16.c **** 
 607:../Library/sdfat/fat16.c ****         return 2;
 608:../Library/sdfat/fat16.c ****     }
 609:../Library/sdfat/fat16.c **** }
 610:../Library/sdfat/fat16.c **** 
 611:../Library/sdfat/fat16.c **** /**
 612:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
 613:../Library/sdfat/fat16.c ****  * Retrieves the directory entry of a path.
 614:../Library/sdfat/fat16.c ****  *
 615:../Library/sdfat/fat16.c ****  * The given path may both describe a file or a directory.
 616:../Library/sdfat/fat16.c ****  *
 617:../Library/sdfat/fat16.c ****  * \param[in] fs The FAT16 filesystem on which to search.
 618:../Library/sdfat/fat16.c ****  * \param[in] path The path of which to read the directory entry.
 619:../Library/sdfat/fat16.c ****  * \param[out] dir_entry The directory entry to fill.
 620:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
 621:../Library/sdfat/fat16.c ****  * \see fat16_read_dir
 622:../Library/sdfat/fat16.c ****  */
 623:../Library/sdfat/fat16.c **** uint8_t fat16_get_dir_entry_of_path(struct fat16_fs_struct* fs, const char* path, struct fat16_dir_
 624:../Library/sdfat/fat16.c **** {
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 626:../Library/sdfat/fat16.c ****         return 0;
 627:../Library/sdfat/fat16.c **** 
 628:../Library/sdfat/fat16.c ****     if(path[0] == '/')
 629:../Library/sdfat/fat16.c ****         ++path;
 630:../Library/sdfat/fat16.c **** 
 631:../Library/sdfat/fat16.c ****     /* begin with the root directory */
 632:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 633:../Library/sdfat/fat16.c ****     dir_entry->attributes = FAT16_ATTRIB_DIR;
 634:../Library/sdfat/fat16.c **** 
 635:../Library/sdfat/fat16.c ****     if(path[0] == '\0')
 636:../Library/sdfat/fat16.c ****         return 1;
 637:../Library/sdfat/fat16.c **** 
 638:../Library/sdfat/fat16.c ****     while(1)
 639:../Library/sdfat/fat16.c ****     {
 640:../Library/sdfat/fat16.c ****         struct fat16_dir_struct* dd = fat16_open_dir(fs, dir_entry);
 641:../Library/sdfat/fat16.c ****         if(!dd)
 642:../Library/sdfat/fat16.c ****             break;
 643:../Library/sdfat/fat16.c **** 
 644:../Library/sdfat/fat16.c ****         /* extract the next hierarchy we will search for */
 645:../Library/sdfat/fat16.c ****         const char* sep_pos = strchr(path, '/');
 646:../Library/sdfat/fat16.c ****         if(!sep_pos)
 647:../Library/sdfat/fat16.c ****             sep_pos = path + strlen(path);
 648:../Library/sdfat/fat16.c ****         uint8_t length_to_sep = sep_pos - path;
 649:../Library/sdfat/fat16.c **** 
 650:../Library/sdfat/fat16.c ****         /* read directory entries */
 651:../Library/sdfat/fat16.c ****         while(fat16_read_dir(dd, dir_entry))
 652:../Library/sdfat/fat16.c ****         {
 653:../Library/sdfat/fat16.c ****             /* check if we have found the next hierarchy */
 654:../Library/sdfat/fat16.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 655:../Library/sdfat/fat16.c ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 656:../Library/sdfat/fat16.c ****             continue;
 657:../Library/sdfat/fat16.c **** 
 658:../Library/sdfat/fat16.c ****             fat16_close_dir(dd);
 659:../Library/sdfat/fat16.c ****             dd = 0;
 660:../Library/sdfat/fat16.c **** 
 661:../Library/sdfat/fat16.c ****             if(path[length_to_sep] == '\0')
 662:../Library/sdfat/fat16.c ****     /* we iterated through the whole path and have found the file */
 663:../Library/sdfat/fat16.c ****                 return 1;
 664:../Library/sdfat/fat16.c **** 
 665:../Library/sdfat/fat16.c ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 666:../Library/sdfat/fat16.c ****             {
 667:../Library/sdfat/fat16.c ****                 /* we found a parent directory of the file we are searching for */
 668:../Library/sdfat/fat16.c ****                 path = sep_pos + 1;
 669:../Library/sdfat/fat16.c ****                 break;
 670:../Library/sdfat/fat16.c ****             }
 671:../Library/sdfat/fat16.c **** 
 672:../Library/sdfat/fat16.c ****             /* a parent of the file exists, but not the file itself */
 673:../Library/sdfat/fat16.c ****             return 0;
 674:../Library/sdfat/fat16.c ****         }
 675:../Library/sdfat/fat16.c **** 
 676:../Library/sdfat/fat16.c ****         fat16_close_dir(dd);
 677:../Library/sdfat/fat16.c ****     }
 678:../Library/sdfat/fat16.c **** 
 679:../Library/sdfat/fat16.c ****     return 0;
 680:../Library/sdfat/fat16.c **** }
 681:../Library/sdfat/fat16.c **** 
 682:../Library/sdfat/fat16.c **** /**
 683:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 684:../Library/sdfat/fat16.c ****  * Retrieves the next following cluster of a given cluster.
 685:../Library/sdfat/fat16.c ****  *
 686:../Library/sdfat/fat16.c ****  * Using the filesystem file allocation table, this function returns
 687:../Library/sdfat/fat16.c ****  * the number of the cluster containing the data directly following
 688:../Library/sdfat/fat16.c ****  * the data within the cluster with the given number.
 689:../Library/sdfat/fat16.c ****  *
 690:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem for which to determine the next cluster.
 691:../Library/sdfat/fat16.c ****  * \param[in] cluster_num The number of the cluster for which to determine its successor.
 692:../Library/sdfat/fat16.c ****  * \returns The wanted cluster number, or 0 on error.
 693:../Library/sdfat/fat16.c ****  */
 694:../Library/sdfat/fat16.c **** uint16_t fat16_get_next_cluster(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 695:../Library/sdfat/fat16.c **** {
 696:../Library/sdfat/fat16.c ****     if(!fs || cluster_num < 2)
 697:../Library/sdfat/fat16.c ****         return 0;
 698:../Library/sdfat/fat16.c **** 
 699:../Library/sdfat/fat16.c ****     /* read appropriate fat entry */
 700:../Library/sdfat/fat16.c ****     uint8_t fat_entry[2];
 701:../Library/sdfat/fat16.c ****     if(!fs->partition->device_read(fs->header.fat_offset + 2 * cluster_num, fat_entry, 2))
 702:../Library/sdfat/fat16.c ****         return 0;
 703:../Library/sdfat/fat16.c **** 
 704:../Library/sdfat/fat16.c ****     /* determine next cluster from fat */
 705:../Library/sdfat/fat16.c ****     cluster_num = ((uint16_t) fat_entry[0]) |
 706:../Library/sdfat/fat16.c ****     ((uint16_t) fat_entry[1] << 8);
 707:../Library/sdfat/fat16.c **** 	///*
 708:../Library/sdfat/fat16.c ****     if(cluster_num == FAT16_CLUSTER_FREE ||
 709:../Library/sdfat/fat16.c ****         cluster_num == FAT16_CLUSTER_BAD ||
 710:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX) ||
 711:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
 712:../Library/sdfat/fat16.c ****     //*/
 713:../Library/sdfat/fat16.c **** 	return 0;
 714:../Library/sdfat/fat16.c **** 
 715:../Library/sdfat/fat16.c ****     return cluster_num;
 716:../Library/sdfat/fat16.c **** }
 717:../Library/sdfat/fat16.c **** 
 718:../Library/sdfat/fat16.c **** /**
 719:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 720:../Library/sdfat/fat16.c ****  * Appends a new cluster chain to an existing one.
 721:../Library/sdfat/fat16.c ****  *
 722:../Library/sdfat/fat16.c ****  * Set cluster_num to zero to create a completely new one.
 723:../Library/sdfat/fat16.c ****  *
 724:../Library/sdfat/fat16.c ****  * \param[in] fs The file system on which to operate.
 725:../Library/sdfat/fat16.c ****  * \param[in] cluster_num The cluster to which to append the new chain.
 726:../Library/sdfat/fat16.c ****  * \param[in] count The number of clusters to allocate.
 727:../Library/sdfat/fat16.c ****  * \returns 0 on failure, the number of the first new cluster on success.
 728:../Library/sdfat/fat16.c ****  */
 729:../Library/sdfat/fat16.c **** uint16_t fat16_append_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num, uint16_t cou
 730:../Library/sdfat/fat16.c **** {
 731:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
 732:../Library/sdfat/fat16.c ****         if(!fs)
 733:../Library/sdfat/fat16.c ****             return 0;
 734:../Library/sdfat/fat16.c ****     
 735:../Library/sdfat/fat16.c ****         device_read_t device_read = fs->partition->device_read;
 736:../Library/sdfat/fat16.c ****         device_write_t device_write = fs->partition->device_write;
 737:../Library/sdfat/fat16.c ****         uint32_t fat_offset = fs->header.fat_offset;
 738:../Library/sdfat/fat16.c ****         uint16_t cluster_max = fs->header.fat_size / 2;
 739:../Library/sdfat/fat16.c ****         uint16_t cluster_next = 0;
 740:../Library/sdfat/fat16.c ****         uint16_t count_left = count;
 741:../Library/sdfat/fat16.c ****         uint8_t buffer[2];
 742:../Library/sdfat/fat16.c ****         uint16_t cluster_new;
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 744:../Library/sdfat/fat16.c ****         {
 745:../Library/sdfat/fat16.c ****             if(!device_read(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 746:../Library/sdfat/fat16.c ****                 return 0;
 747:../Library/sdfat/fat16.c ****     
 748:../Library/sdfat/fat16.c ****             /* check if this is a free cluster */
 749:../Library/sdfat/fat16.c ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 750:../Library/sdfat/fat16.c ****                 buffer[1] == ((FAT16_CLUSTER_FREE >> 8) & 0xff))
 751:../Library/sdfat/fat16.c ****             {
 752:../Library/sdfat/fat16.c ****                 /* allocate cluster */
 753:../Library/sdfat/fat16.c ****                 if(count_left == count)
 754:../Library/sdfat/fat16.c ****                 {
 755:../Library/sdfat/fat16.c ****                     buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 756:../Library/sdfat/fat16.c ****                     buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 757:../Library/sdfat/fat16.c ****                 }
 758:../Library/sdfat/fat16.c ****                 else
 759:../Library/sdfat/fat16.c ****                 {
 760:../Library/sdfat/fat16.c ****                     buffer[0] = cluster_next & 0xff;
 761:../Library/sdfat/fat16.c ****                     buffer[1] = (cluster_next >> 8) & 0xff;
 762:../Library/sdfat/fat16.c ****                 }
 763:../Library/sdfat/fat16.c ****     
 764:../Library/sdfat/fat16.c ****                 if(!device_write(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 765:../Library/sdfat/fat16.c ****                     break;
 766:../Library/sdfat/fat16.c ****     
 767:../Library/sdfat/fat16.c ****                 cluster_next = cluster_new;
 768:../Library/sdfat/fat16.c ****                 if(--count_left == 0)
 769:../Library/sdfat/fat16.c ****                     break;
 770:../Library/sdfat/fat16.c ****             }
 771:../Library/sdfat/fat16.c ****         }
 772:../Library/sdfat/fat16.c ****     
 773:../Library/sdfat/fat16.c ****         do
 774:../Library/sdfat/fat16.c ****         {
 775:../Library/sdfat/fat16.c ****             if(count_left > 0)
 776:../Library/sdfat/fat16.c ****                 break;
 777:../Library/sdfat/fat16.c ****     
 778:../Library/sdfat/fat16.c ****             /* We allocated a new cluster chain. Now join
 779:../Library/sdfat/fat16.c ****                                              * it with the existing one.
 780:../Library/sdfat/fat16.c ****                                              */
 781:../Library/sdfat/fat16.c ****             if(cluster_num >= 2)
 782:../Library/sdfat/fat16.c ****             {
 783:../Library/sdfat/fat16.c ****                 buffer[0] = cluster_next & 0xff;
 784:../Library/sdfat/fat16.c ****                 buffer[1] = (cluster_next >> 8) & 0xff;
 785:../Library/sdfat/fat16.c ****                 if(!device_write(fat_offset + 2 * cluster_num, buffer, sizeof(buffer)))
 786:../Library/sdfat/fat16.c ****                     break;
 787:../Library/sdfat/fat16.c ****             }
 788:../Library/sdfat/fat16.c ****     
 789:../Library/sdfat/fat16.c ****             return cluster_next;
 790:../Library/sdfat/fat16.c ****     
 791:../Library/sdfat/fat16.c ****         }
 792:../Library/sdfat/fat16.c ****         while(0);
 793:../Library/sdfat/fat16.c ****     
 794:../Library/sdfat/fat16.c ****         /* No space left on device or writing error.
 795:../Library/sdfat/fat16.c ****                              * Free up all clusters already allocated.
 796:../Library/sdfat/fat16.c ****                              */
 797:../Library/sdfat/fat16.c ****         fat16_free_clusters(fs, cluster_next);
 798:../Library/sdfat/fat16.c ****     
 799:../Library/sdfat/fat16.c ****         return 0;
 800:../Library/sdfat/fat16.c ****     #else
 801:../Library/sdfat/fat16.c ****         return 0;
 802:../Library/sdfat/fat16.c ****     #endif
 803:../Library/sdfat/fat16.c **** }
 804:../Library/sdfat/fat16.c **** 
 805:../Library/sdfat/fat16.c **** /**
 806:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 807:../Library/sdfat/fat16.c ****  * Frees a cluster chain, or a part thereof.
 808:../Library/sdfat/fat16.c ****  *
 809:../Library/sdfat/fat16.c ****  * Marks the specified cluster and all clusters which are sequentially
 810:../Library/sdfat/fat16.c ****  * referenced by it as free. They may then be used again for future
 811:../Library/sdfat/fat16.c ****  * file allocations.
 812:../Library/sdfat/fat16.c ****  *
 813:../Library/sdfat/fat16.c ****  * \note If this function is used for freeing just a part of a cluster
 814:../Library/sdfat/fat16.c ****  *       chain, the new end of the chain is not correctly terminated
 815:../Library/sdfat/fat16.c ****  *       within the FAT. Use fat16_terminate_clusters() instead.
 816:../Library/sdfat/fat16.c ****  *
 817:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
 818:../Library/sdfat/fat16.c ****  * \param[in] cluster_num The starting cluster of the chain which to free.
 819:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
 820:../Library/sdfat/fat16.c ****  * \see fat16_terminate_clusters
 821:../Library/sdfat/fat16.c ****  */
 822:../Library/sdfat/fat16.c **** uint8_t fat16_free_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 823:../Library/sdfat/fat16.c **** {
 824:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
 825:../Library/sdfat/fat16.c ****         if(!fs || cluster_num < 2)
 826:../Library/sdfat/fat16.c ****             return 0;
 827:../Library/sdfat/fat16.c ****     
 828:../Library/sdfat/fat16.c ****         uint32_t fat_offset = fs->header.fat_offset;
 829:../Library/sdfat/fat16.c ****         uint8_t buffer[2];
 830:../Library/sdfat/fat16.c ****         while(cluster_num)
 831:../Library/sdfat/fat16.c ****         {
 832:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(fat_offset + 2 * cluster_num, buffer, 2))
 833:../Library/sdfat/fat16.c ****                 return 0;
 834:../Library/sdfat/fat16.c ****     
 835:../Library/sdfat/fat16.c ****             /* get next cluster of current cluster before freeing current cluster */
 836:../Library/sdfat/fat16.c ****             uint16_t cluster_num_next = ((uint16_t) buffer[0]) |
 837:../Library/sdfat/fat16.c ****             ((uint16_t) buffer[1] << 8);
 838:../Library/sdfat/fat16.c ****     
 839:../Library/sdfat/fat16.c ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 840:../Library/sdfat/fat16.c ****                 return 1;
 841:../Library/sdfat/fat16.c ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 842:../Library/sdfat/fat16.c ****                 (cluster_num_next >= FAT16_CLUSTER_RESERVED_MIN &&
 843:../Library/sdfat/fat16.c ****                cluster_num_next <= FAT16_CLUSTER_RESERVED_MAX
 844:../Library/sdfat/fat16.c ****                )
 845:../Library/sdfat/fat16.c ****                )
 846:../Library/sdfat/fat16.c ****             return 0;
 847:../Library/sdfat/fat16.c **** 			///*
 848:../Library/sdfat/fat16.c ****             if((cluster_num_next >= FAT16_CLUSTER_LAST_MIN) &&
 849:../Library/sdfat/fat16.c ****                 (cluster_num_next <= FAT16_CLUSTER_LAST_MAX)
 850:../Library/sdfat/fat16.c ****                )
 851:../Library/sdfat/fat16.c **** 			//*/
 852:../Library/sdfat/fat16.c ****             cluster_num_next = 0;
 853:../Library/sdfat/fat16.c ****     
 854:../Library/sdfat/fat16.c ****             /* free cluster */
 855:../Library/sdfat/fat16.c ****             buffer[0] = FAT16_CLUSTER_FREE & 0xff;
 856:../Library/sdfat/fat16.c ****             buffer[1] = (FAT16_CLUSTER_FREE >> 8) & 0xff;
 857:../Library/sdfat/fat16.c ****             fs->partition->device_write(fat_offset + 2 * cluster_num, buffer, 2);
 858:../Library/sdfat/fat16.c ****     
 859:../Library/sdfat/fat16.c ****             /* We continue in any case here, even if freeing the cluster failed.
 860:../Library/sdfat/fat16.c ****                                              * The cluster is lost, but maybe we can still free up 
 861:../Library/sdfat/fat16.c ****                                              */
 862:../Library/sdfat/fat16.c ****     
 863:../Library/sdfat/fat16.c ****             cluster_num = cluster_num_next;
 864:../Library/sdfat/fat16.c ****         }
 865:../Library/sdfat/fat16.c ****     
 866:../Library/sdfat/fat16.c ****         return 1;
 867:../Library/sdfat/fat16.c ****     #else
 868:../Library/sdfat/fat16.c ****         return 0;
 869:../Library/sdfat/fat16.c ****     #endif
 870:../Library/sdfat/fat16.c **** }
 871:../Library/sdfat/fat16.c **** 
 872:../Library/sdfat/fat16.c **** /**
 873:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
 874:../Library/sdfat/fat16.c ****  * Frees a part of a cluster chain and correctly terminates the rest.
 875:../Library/sdfat/fat16.c ****  *
 876:../Library/sdfat/fat16.c ****  * Marks the specified cluster as the new end of a cluster chain and
 877:../Library/sdfat/fat16.c ****  * frees all following clusters.
 878:../Library/sdfat/fat16.c ****  *
 879:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
 880:../Library/sdfat/fat16.c ****  * \param[in] cluster_num The new end of the cluster chain.
 881:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
 882:../Library/sdfat/fat16.c ****  * \see fat16_free_clusters
 883:../Library/sdfat/fat16.c ****  */
 884:../Library/sdfat/fat16.c **** uint8_t fat16_terminate_clusters(const struct fat16_fs_struct* fs, uint16_t cluster_num)
 885:../Library/sdfat/fat16.c **** {
 886:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
 887:../Library/sdfat/fat16.c ****         if(!fs || cluster_num < 2)
 888:../Library/sdfat/fat16.c ****             return 0;
 889:../Library/sdfat/fat16.c ****     
 890:../Library/sdfat/fat16.c ****         /* fetch next cluster before overwriting the cluster entry */
 891:../Library/sdfat/fat16.c ****         uint16_t cluster_num_next = fat16_get_next_cluster(fs, cluster_num);
 892:../Library/sdfat/fat16.c ****     
 893:../Library/sdfat/fat16.c ****         /* mark cluster as the last one */
 894:../Library/sdfat/fat16.c ****         uint8_t buffer[2];
 895:../Library/sdfat/fat16.c ****         buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 896:../Library/sdfat/fat16.c ****         buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 897:../Library/sdfat/fat16.c ****         if(!fs->partition->device_write(fs->header.fat_offset + 2 * cluster_num, buffer, 2))
 898:../Library/sdfat/fat16.c ****             return 0;
 899:../Library/sdfat/fat16.c ****     
 900:../Library/sdfat/fat16.c ****         /* free remaining clusters */
 901:../Library/sdfat/fat16.c ****         if(cluster_num_next)
 902:../Library/sdfat/fat16.c ****             return fat16_free_clusters(fs, cluster_num_next);
 903:../Library/sdfat/fat16.c ****         else
 904:../Library/sdfat/fat16.c ****             return 1;
 905:../Library/sdfat/fat16.c ****     #else
 906:../Library/sdfat/fat16.c ****         return 0;
 907:../Library/sdfat/fat16.c ****     #endif
 908:../Library/sdfat/fat16.c **** }
 909:../Library/sdfat/fat16.c **** 
 910:../Library/sdfat/fat16.c **** /**
 911:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
 912:../Library/sdfat/fat16.c ****  * Opens a file on a FAT16 filesystem.
 913:../Library/sdfat/fat16.c ****  *
 914:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which the file to open lies.
 915:../Library/sdfat/fat16.c ****  * \param[in] dir_entry The directory entry of the file to open.
 916:../Library/sdfat/fat16.c ****  * \returns The file handle, or 0 on failure.
 917:../Library/sdfat/fat16.c ****  * \see fat16_close_file
 918:../Library/sdfat/fat16.c ****  */
 919:../Library/sdfat/fat16.c **** struct fat16_file_struct* fat16_open_file(struct fat16_fs_struct* fs, const struct fat16_dir_entry_
 920:../Library/sdfat/fat16.c **** {
 921:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 922:../Library/sdfat/fat16.c ****         return 0;
 923:../Library/sdfat/fat16.c **** 
 924:../Library/sdfat/fat16.c ****     struct fat16_file_struct* fd = malloc(sizeof(*fd));
 925:../Library/sdfat/fat16.c ****     if(!fd)
 926:../Library/sdfat/fat16.c ****         return 0;
 927:../Library/sdfat/fat16.c **** 
 928:../Library/sdfat/fat16.c ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 929:../Library/sdfat/fat16.c ****     fd->fs = fs;
 930:../Library/sdfat/fat16.c ****     fd->pos = 0;
 931:../Library/sdfat/fat16.c ****     fd->pos_cluster = dir_entry->cluster;
 932:../Library/sdfat/fat16.c **** 
 933:../Library/sdfat/fat16.c ****     return fd;
 934:../Library/sdfat/fat16.c **** }
 935:../Library/sdfat/fat16.c **** 
 936:../Library/sdfat/fat16.c **** /**
 937:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
 938:../Library/sdfat/fat16.c ****  * Closes a file.
 939:../Library/sdfat/fat16.c ****  *
 940:../Library/sdfat/fat16.c ****  * \param[in] fd The file handle of the file to close.
 941:../Library/sdfat/fat16.c ****  * \see fat16_open_file
 942:../Library/sdfat/fat16.c ****  */
 943:../Library/sdfat/fat16.c **** void fat16_close_file(struct fat16_file_struct* fd)
 944:../Library/sdfat/fat16.c **** {
 945:../Library/sdfat/fat16.c ****     if(fd)
 946:../Library/sdfat/fat16.c ****         free(fd);
 947:../Library/sdfat/fat16.c **** }
 948:../Library/sdfat/fat16.c **** 
 949:../Library/sdfat/fat16.c **** /**
 950:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
 951:../Library/sdfat/fat16.c ****  * Reads data from a file.
 952:../Library/sdfat/fat16.c ****  *
 953:../Library/sdfat/fat16.c ****  * The data requested is read from the current file location.
 954:../Library/sdfat/fat16.c ****  *
 955:../Library/sdfat/fat16.c ****  * \param[in] fd The file handle of the file from which to read.
 956:../Library/sdfat/fat16.c ****  * \param[out] buffer The buffer into which to write.
 957:../Library/sdfat/fat16.c ****  * \param[in] buffer_len The amount of data to read.
 958:../Library/sdfat/fat16.c ****  * \returns The number of bytes read, 0 on end of file, or -1 on failure.
 959:../Library/sdfat/fat16.c ****  * \see fat16_write_file
 960:../Library/sdfat/fat16.c ****  */
 961:../Library/sdfat/fat16.c **** int16_t fat16_read_file(struct fat16_file_struct* fd, uint8_t* buffer, uint16_t buffer_len)
 962:../Library/sdfat/fat16.c **** {
 963:../Library/sdfat/fat16.c ****     /* check arguments */
 964:../Library/sdfat/fat16.c ****     if(!fd || !buffer || buffer_len < 1)
 965:../Library/sdfat/fat16.c ****         return -1;
 966:../Library/sdfat/fat16.c **** 
 967:../Library/sdfat/fat16.c ****     /* determine number of bytes to read */
 968:../Library/sdfat/fat16.c ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
 969:../Library/sdfat/fat16.c ****         buffer_len = fd->dir_entry.file_size - fd->pos;
 970:../Library/sdfat/fat16.c ****     if(buffer_len == 0)
 971:../Library/sdfat/fat16.c ****         return 0;
 972:../Library/sdfat/fat16.c **** 
 973:../Library/sdfat/fat16.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 974:../Library/sdfat/fat16.c ****     uint16_t cluster_num = fd->pos_cluster;
 975:../Library/sdfat/fat16.c ****     uint16_t buffer_left = buffer_len;
 976:../Library/sdfat/fat16.c ****     uint16_t first_cluster_offset = fd->pos % cluster_size;
 977:../Library/sdfat/fat16.c **** 
 978:../Library/sdfat/fat16.c ****     /* find cluster in which to start reading */
 979:../Library/sdfat/fat16.c ****     if(!cluster_num)
 980:../Library/sdfat/fat16.c ****     {
 981:../Library/sdfat/fat16.c ****         cluster_num = fd->dir_entry.cluster;
 982:../Library/sdfat/fat16.c **** 
 983:../Library/sdfat/fat16.c ****         if(!cluster_num)
 984:../Library/sdfat/fat16.c ****         {
 985:../Library/sdfat/fat16.c ****             if(!fd->pos)
 986:../Library/sdfat/fat16.c ****                 return 0;
 987:../Library/sdfat/fat16.c ****             else
 988:../Library/sdfat/fat16.c ****                 return -1;
 989:../Library/sdfat/fat16.c ****         }
 990:../Library/sdfat/fat16.c **** 
 991:../Library/sdfat/fat16.c ****         if(fd->pos)
 992:../Library/sdfat/fat16.c ****         {
 993:../Library/sdfat/fat16.c ****             uint32_t pos = fd->pos;
 994:../Library/sdfat/fat16.c ****             while(pos >= cluster_size)
 995:../Library/sdfat/fat16.c ****             {
 996:../Library/sdfat/fat16.c ****                 pos -= cluster_size;
 997:../Library/sdfat/fat16.c ****                 cluster_num = fat16_get_next_cluster(fd->fs, cluster_num);
 998:../Library/sdfat/fat16.c ****                 if(!cluster_num)
 999:../Library/sdfat/fat16.c ****                     return -1;
1000:../Library/sdfat/fat16.c ****             }
1001:../Library/sdfat/fat16.c ****         }
1002:../Library/sdfat/fat16.c ****     }
1003:../Library/sdfat/fat16.c **** 
1004:../Library/sdfat/fat16.c ****     /* read data */
1005:../Library/sdfat/fat16.c ****     do
1006:../Library/sdfat/fat16.c ****     {
1007:../Library/sdfat/fat16.c ****         /* calculate data size to copy from cluster */
1008:../Library/sdfat/fat16.c ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
1009:../Library/sdfat/fat16.c ****         (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
1010:../Library/sdfat/fat16.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
1011:../Library/sdfat/fat16.c ****         if(copy_length > buffer_left)
1012:../Library/sdfat/fat16.c ****             copy_length = buffer_left;
1013:../Library/sdfat/fat16.c **** 
1014:../Library/sdfat/fat16.c ****         /* read data */
1015:../Library/sdfat/fat16.c ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
1016:../Library/sdfat/fat16.c ****             return buffer_len - buffer_left;
1017:../Library/sdfat/fat16.c **** 
1018:../Library/sdfat/fat16.c ****         /* calculate new file position */
1019:../Library/sdfat/fat16.c ****         buffer += copy_length;
1020:../Library/sdfat/fat16.c ****         buffer_left -= copy_length;
1021:../Library/sdfat/fat16.c ****         fd->pos += copy_length;
1022:../Library/sdfat/fat16.c **** 
1023:../Library/sdfat/fat16.c ****         if(first_cluster_offset + copy_length >= cluster_size)
1024:../Library/sdfat/fat16.c ****         {
1025:../Library/sdfat/fat16.c ****             /* we are on a cluster boundary, so get the next cluster */
1026:../Library/sdfat/fat16.c ****             if((cluster_num = fat16_get_next_cluster(fd->fs, cluster_num)))
1027:../Library/sdfat/fat16.c ****             {
1028:../Library/sdfat/fat16.c ****                 first_cluster_offset = 0;
1029:../Library/sdfat/fat16.c ****             }
1030:../Library/sdfat/fat16.c ****             else
1031:../Library/sdfat/fat16.c ****             {
1032:../Library/sdfat/fat16.c ****                 fd->pos_cluster = 0;
1033:../Library/sdfat/fat16.c ****                 return buffer_len - buffer_left;
1034:../Library/sdfat/fat16.c ****             }
1035:../Library/sdfat/fat16.c ****         }
1036:../Library/sdfat/fat16.c **** 
1037:../Library/sdfat/fat16.c ****         fd->pos_cluster = cluster_num;
1038:../Library/sdfat/fat16.c **** 
1039:../Library/sdfat/fat16.c ****     }
1040:../Library/sdfat/fat16.c ****     while(buffer_left > 0); /* check if we are done */
1041:../Library/sdfat/fat16.c **** 
1042:../Library/sdfat/fat16.c ****     return buffer_len;
1043:../Library/sdfat/fat16.c **** }
1044:../Library/sdfat/fat16.c **** 
1045:../Library/sdfat/fat16.c **** /**
1046:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
1047:../Library/sdfat/fat16.c ****  * Writes data to a file.
1048:../Library/sdfat/fat16.c ****  *
1049:../Library/sdfat/fat16.c ****  * The data is written to the current file location.
1050:../Library/sdfat/fat16.c ****  *
1051:../Library/sdfat/fat16.c ****  * \param[in] fd The file handle of the file to which to write.
1052:../Library/sdfat/fat16.c ****  * \param[in] buffer The buffer from which to read the data to be written.
1053:../Library/sdfat/fat16.c ****  * \param[in] buffer_len The amount of data to write.
1054:../Library/sdfat/fat16.c ****  * \returns The number of bytes written, 0 on disk full, or -1 on failure.
1055:../Library/sdfat/fat16.c ****  * \see fat16_read_file
1056:../Library/sdfat/fat16.c ****  */
1057:../Library/sdfat/fat16.c **** int16_t fat16_write_file(struct fat16_file_struct* fd, const uint8_t* buffer, uint16_t buffer_len)
1058:../Library/sdfat/fat16.c **** {
1059:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
1060:../Library/sdfat/fat16.c ****         /* check arguments */
1061:../Library/sdfat/fat16.c ****         if(!fd || !buffer || buffer_len < 1)
1062:../Library/sdfat/fat16.c ****             return -1;
1063:../Library/sdfat/fat16.c ****         if(fd->pos > fd->dir_entry.file_size)
1064:../Library/sdfat/fat16.c ****             return -1;
1065:../Library/sdfat/fat16.c ****     
1066:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
1067:../Library/sdfat/fat16.c ****         uint16_t cluster_num = fd->pos_cluster;
1068:../Library/sdfat/fat16.c ****         uint16_t buffer_left = buffer_len;
1069:../Library/sdfat/fat16.c ****         uint16_t first_cluster_offset = fd->pos % cluster_size;
1070:../Library/sdfat/fat16.c ****     
1071:../Library/sdfat/fat16.c ****         /* find cluster in which to start writing */
1072:../Library/sdfat/fat16.c ****         if(!cluster_num)
1073:../Library/sdfat/fat16.c ****         {
1074:../Library/sdfat/fat16.c ****             cluster_num = fd->dir_entry.cluster;
1075:../Library/sdfat/fat16.c ****     
1076:../Library/sdfat/fat16.c ****             if(!cluster_num)
1077:../Library/sdfat/fat16.c ****             {
1078:../Library/sdfat/fat16.c ****                 if(!fd->pos)
1079:../Library/sdfat/fat16.c ****                 {
1080:../Library/sdfat/fat16.c ****                     /* empty file */
1081:../Library/sdfat/fat16.c ****                     fd->dir_entry.cluster = cluster_num = fat16_append_clusters(fd->fs, 0, 1);
1082:../Library/sdfat/fat16.c ****                     if(!cluster_num)
1083:../Library/sdfat/fat16.c ****                         return -1;
1084:../Library/sdfat/fat16.c ****                 }
1085:../Library/sdfat/fat16.c ****                 else
1086:../Library/sdfat/fat16.c ****                 {
1087:../Library/sdfat/fat16.c ****                     return -2;
1088:../Library/sdfat/fat16.c ****                 }
1089:../Library/sdfat/fat16.c ****             }
1090:../Library/sdfat/fat16.c ****     
1091:../Library/sdfat/fat16.c ****             if(fd->pos)
1092:../Library/sdfat/fat16.c ****             {
1093:../Library/sdfat/fat16.c ****                 uint32_t pos = fd->pos;
1094:../Library/sdfat/fat16.c ****                 uint16_t cluster_num_next;
1095:../Library/sdfat/fat16.c ****                 while(pos >= cluster_size)
1096:../Library/sdfat/fat16.c ****                 {
1097:../Library/sdfat/fat16.c ****                     pos -= cluster_size;
1098:../Library/sdfat/fat16.c ****                     cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
1099:../Library/sdfat/fat16.c ****                     if(!cluster_num_next && pos == 0)
1100:../Library/sdfat/fat16.c ****         /* the file exactly ends on a cluster boundary, and we append to it */
1101:../Library/sdfat/fat16.c ****                         cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
1102:../Library/sdfat/fat16.c ****                     if(!cluster_num_next)
1103:../Library/sdfat/fat16.c ****                         return -3;
1104:../Library/sdfat/fat16.c ****     
1105:../Library/sdfat/fat16.c ****                     cluster_num = cluster_num_next;
1106:../Library/sdfat/fat16.c ****                 }
1107:../Library/sdfat/fat16.c ****             }
1108:../Library/sdfat/fat16.c ****         }
1109:../Library/sdfat/fat16.c ****     
1110:../Library/sdfat/fat16.c ****         /* write data */
1111:../Library/sdfat/fat16.c ****         do
1112:../Library/sdfat/fat16.c ****         {
1113:../Library/sdfat/fat16.c ****             /* calculate data size to write to cluster */
1114:../Library/sdfat/fat16.c ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
1115:../Library/sdfat/fat16.c ****             (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
1116:../Library/sdfat/fat16.c ****             uint16_t write_length = cluster_size - first_cluster_offset;
1117:../Library/sdfat/fat16.c ****             if(write_length > buffer_left)
1118:../Library/sdfat/fat16.c ****                 write_length = buffer_left;
1119:../Library/sdfat/fat16.c ****     
1120:../Library/sdfat/fat16.c ****             /* write data which fits into the current cluster */
1121:../Library/sdfat/fat16.c ****             if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
1122:../Library/sdfat/fat16.c ****                 break;
1123:../Library/sdfat/fat16.c ****     
1124:../Library/sdfat/fat16.c ****             /* calculate new file position */
1125:../Library/sdfat/fat16.c ****             buffer += write_length;
1126:../Library/sdfat/fat16.c ****             buffer_left -= write_length;
1127:../Library/sdfat/fat16.c ****             fd->pos += write_length;
1128:../Library/sdfat/fat16.c ****     
1129:../Library/sdfat/fat16.c ****             if(first_cluster_offset + write_length >= cluster_size)
1130:../Library/sdfat/fat16.c ****             {
1131:../Library/sdfat/fat16.c ****                 /* we are on a cluster boundary, so get the next cluster */
1132:../Library/sdfat/fat16.c ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
1133:../Library/sdfat/fat16.c ****                 if(!cluster_num_next && buffer_left > 0)
1134:../Library/sdfat/fat16.c ****         /* we reached the last cluster, append a new one */
1135:../Library/sdfat/fat16.c ****                     cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
1136:../Library/sdfat/fat16.c ****                 if(!cluster_num_next)
1137:../Library/sdfat/fat16.c ****                 {
1138:../Library/sdfat/fat16.c ****                     fd->pos_cluster = 0;
1139:../Library/sdfat/fat16.c ****                     break;
1140:../Library/sdfat/fat16.c ****                 }
1141:../Library/sdfat/fat16.c ****     
1142:../Library/sdfat/fat16.c ****                 cluster_num = cluster_num_next;
1143:../Library/sdfat/fat16.c ****                 first_cluster_offset = 0;
1144:../Library/sdfat/fat16.c ****             }
1145:../Library/sdfat/fat16.c ****     
1146:../Library/sdfat/fat16.c ****             fd->pos_cluster = cluster_num;
1147:../Library/sdfat/fat16.c ****     
1148:../Library/sdfat/fat16.c ****         }
1149:../Library/sdfat/fat16.c ****         while(buffer_left > 0); /* check if we are done */
1150:../Library/sdfat/fat16.c ****     
1151:../Library/sdfat/fat16.c ****         /* update directory entry */
1152:../Library/sdfat/fat16.c ****         if(fd->pos > fd->dir_entry.file_size)
1153:../Library/sdfat/fat16.c ****         {
1154:../Library/sdfat/fat16.c ****             uint32_t size_old = fd->dir_entry.file_size;
1155:../Library/sdfat/fat16.c ****     
1156:../Library/sdfat/fat16.c ****             /* update file size */
1157:../Library/sdfat/fat16.c ****             fd->dir_entry.file_size = fd->pos;
1158:../Library/sdfat/fat16.c ****             /* write directory entry */
1159:../Library/sdfat/fat16.c ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
1160:../Library/sdfat/fat16.c ****             {
1161:../Library/sdfat/fat16.c ****                 /* We do not return an error here since we actually wrote
1162:../Library/sdfat/fat16.c ****                                                              * some data to disk. So we calculate t
1163:../Library/sdfat/fat16.c ****                                                              * we wrote to disk and which lies with
1164:../Library/sdfat/fat16.c ****                                                              */
1165:../Library/sdfat/fat16.c ****                 buffer_left = fd->pos - size_old;
1166:../Library/sdfat/fat16.c ****                 fd->pos = size_old;
1167:../Library/sdfat/fat16.c ****             }
1168:../Library/sdfat/fat16.c ****         }
1169:../Library/sdfat/fat16.c ****     
1170:../Library/sdfat/fat16.c ****         return buffer_len - buffer_left;
1171:../Library/sdfat/fat16.c ****     
1172:../Library/sdfat/fat16.c ****     #else
1173:../Library/sdfat/fat16.c ****         return -4;
1174:../Library/sdfat/fat16.c ****     #endif
1175:../Library/sdfat/fat16.c **** }
1176:../Library/sdfat/fat16.c **** 
1177:../Library/sdfat/fat16.c **** /**
1178:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
1179:../Library/sdfat/fat16.c ****  * Repositions the read/write file offset.
1180:../Library/sdfat/fat16.c ****  *
1181:../Library/sdfat/fat16.c ****  * Changes the file offset where the next call to fat16_read_file()
1182:../Library/sdfat/fat16.c ****  * or fat16_write_file() starts reading/writing.
1183:../Library/sdfat/fat16.c ****  *
1184:../Library/sdfat/fat16.c ****  * If the new offset is beyond the end of the file, fat16_resize_file()
1185:../Library/sdfat/fat16.c ****  * is implicitly called, i.e. the file is expanded.
1186:../Library/sdfat/fat16.c ****  *
1187:../Library/sdfat/fat16.c ****  * The new offset can be given in different ways determined by
1188:../Library/sdfat/fat16.c ****  * the \c whence parameter:
1189:../Library/sdfat/fat16.c ****  * - \b FAT16_SEEK_SET: \c *offset is relative to the beginning of the file.
1190:../Library/sdfat/fat16.c ****  * - \b FAT16_SEEK_CUR: \c *offset is relative to the current file position.
1191:../Library/sdfat/fat16.c ****  * - \b FAT16_SEEK_END: \c *offset is relative to the end of the file.
1192:../Library/sdfat/fat16.c ****  *
1193:../Library/sdfat/fat16.c ****  * The resulting absolute offset is written to the location the \c offset
1194:../Library/sdfat/fat16.c ****  * parameter points to.
1195:../Library/sdfat/fat16.c ****  *
1196:../Library/sdfat/fat16.c ****  * \param[in] fd The file decriptor of the file on which to seek.
1197:../Library/sdfat/fat16.c ****  * \param[in,out] offset A pointer to the new offset, as affected by the \c whence
1198:../Library/sdfat/fat16.c ****  *                   parameter. The function writes the new absolute offset
1199:../Library/sdfat/fat16.c ****  *                   to this location before it returns.
1200:../Library/sdfat/fat16.c ****  * \param[in] whence Affects the way \c offset is interpreted, see above.
1201:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1202:../Library/sdfat/fat16.c ****  */
1203:../Library/sdfat/fat16.c **** uint8_t fat16_seek_file(struct fat16_file_struct* fd, int32_t* offset, uint8_t whence)
1204:../Library/sdfat/fat16.c **** {
1205:../Library/sdfat/fat16.c ****     if(!fd || !offset)
1206:../Library/sdfat/fat16.c ****         return 0;
1207:../Library/sdfat/fat16.c **** 
1208:../Library/sdfat/fat16.c ****     uint32_t new_pos = fd->pos;
1209:../Library/sdfat/fat16.c ****     switch(whence)
1210:../Library/sdfat/fat16.c ****     {
1211:../Library/sdfat/fat16.c ****         case FAT16_SEEK_SET:
1212:../Library/sdfat/fat16.c ****             new_pos = *offset;
1213:../Library/sdfat/fat16.c ****             break;
1214:../Library/sdfat/fat16.c ****         case FAT16_SEEK_CUR:
1215:../Library/sdfat/fat16.c ****             new_pos += *offset;
1216:../Library/sdfat/fat16.c ****             break;
1217:../Library/sdfat/fat16.c ****         case FAT16_SEEK_END:
1218:../Library/sdfat/fat16.c ****             new_pos = fd->dir_entry.file_size + *offset;
1219:../Library/sdfat/fat16.c ****             break;
1220:../Library/sdfat/fat16.c ****         default:
1221:../Library/sdfat/fat16.c ****             return 0;
1222:../Library/sdfat/fat16.c ****     }
1223:../Library/sdfat/fat16.c **** 
1224:../Library/sdfat/fat16.c ****     if(new_pos > fd->dir_entry.file_size && !fat16_resize_file(fd, new_pos))
1225:../Library/sdfat/fat16.c ****         return 0;
1226:../Library/sdfat/fat16.c **** 
1227:../Library/sdfat/fat16.c ****     fd->pos = new_pos;
1228:../Library/sdfat/fat16.c ****     fd->pos_cluster = 0;
1229:../Library/sdfat/fat16.c **** 
1230:../Library/sdfat/fat16.c ****     *offset = new_pos;
1231:../Library/sdfat/fat16.c ****     return 1;
1232:../Library/sdfat/fat16.c **** }
1233:../Library/sdfat/fat16.c **** 
1234:../Library/sdfat/fat16.c **** /**
1235:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
1236:../Library/sdfat/fat16.c ****  * Resizes a file to have a specific size.
1237:../Library/sdfat/fat16.c ****  *
1238:../Library/sdfat/fat16.c ****  * Enlarges or shrinks the file pointed to by the file descriptor to have
1239:../Library/sdfat/fat16.c ****  * exactly the specified size.
1240:../Library/sdfat/fat16.c ****  *
1241:../Library/sdfat/fat16.c ****  * If the file is truncated, all bytes having an equal or larger offset
1242:../Library/sdfat/fat16.c ****  * than the given size are lost. If the file is expanded, the additional
1243:../Library/sdfat/fat16.c ****  * bytes are allocated.
1244:../Library/sdfat/fat16.c ****  *
1245:../Library/sdfat/fat16.c ****  * \note Please be aware that this function just allocates or deallocates disk
1246:../Library/sdfat/fat16.c ****  * space, it does not explicitely clear it. To avoid data leakage, this
1247:../Library/sdfat/fat16.c ****  * must be done manually.
1248:../Library/sdfat/fat16.c ****  *
1249:../Library/sdfat/fat16.c ****  * \param[in] fd The file decriptor of the file which to resize.
1250:../Library/sdfat/fat16.c ****  * \param[in] size The new size of the file.
1251:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1252:../Library/sdfat/fat16.c ****  */
1253:../Library/sdfat/fat16.c **** uint8_t fat16_resize_file(struct fat16_file_struct* fd, uint32_t size)
1254:../Library/sdfat/fat16.c **** {
1255:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
1256:../Library/sdfat/fat16.c ****         if(!fd)
1257:../Library/sdfat/fat16.c ****             return 0;
1258:../Library/sdfat/fat16.c ****     
1259:../Library/sdfat/fat16.c ****         uint16_t cluster_num = fd->dir_entry.cluster;
1260:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
1261:../Library/sdfat/fat16.c ****         uint32_t size_new = size;
1262:../Library/sdfat/fat16.c ****     
1263:../Library/sdfat/fat16.c ****         do
1264:../Library/sdfat/fat16.c ****         {
1265:../Library/sdfat/fat16.c ****             if(cluster_num == 0 && size_new == 0)
1266:../Library/sdfat/fat16.c ****         /* the file stays empty */
1267:../Library/sdfat/fat16.c ****                 break;
1268:../Library/sdfat/fat16.c ****     
1269:../Library/sdfat/fat16.c ****             /* seek to the next cluster as long as we need the space */
1270:../Library/sdfat/fat16.c ****             while(size_new > cluster_size)
1271:../Library/sdfat/fat16.c ****             {
1272:../Library/sdfat/fat16.c ****                 /* get next cluster of file */
1273:../Library/sdfat/fat16.c ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
1274:../Library/sdfat/fat16.c ****                 if(cluster_num_next)
1275:../Library/sdfat/fat16.c ****                 {
1276:../Library/sdfat/fat16.c ****                     cluster_num = cluster_num_next;
1277:../Library/sdfat/fat16.c ****                     size_new -= cluster_size;
1278:../Library/sdfat/fat16.c ****                 }
1279:../Library/sdfat/fat16.c ****                 else
1280:../Library/sdfat/fat16.c ****                 {
1281:../Library/sdfat/fat16.c ****                     break;
1282:../Library/sdfat/fat16.c ****                 }
1283:../Library/sdfat/fat16.c ****             }
1284:../Library/sdfat/fat16.c ****     
1285:../Library/sdfat/fat16.c ****             if(size_new > cluster_size || cluster_num == 0)
1286:../Library/sdfat/fat16.c ****             {
1287:../Library/sdfat/fat16.c ****                 /* Allocate new cluster chain and append
1288:../Library/sdfat/fat16.c ****                                                              * it to the existing one, if available
1289:../Library/sdfat/fat16.c ****                                                              */
1290:../Library/sdfat/fat16.c ****                 uint16_t cluster_count = size_new / cluster_size;
1291:../Library/sdfat/fat16.c ****                 if((uint32_t) cluster_count * cluster_size < size_new)
1292:../Library/sdfat/fat16.c ****                     ++cluster_count;
1293:../Library/sdfat/fat16.c ****                 uint16_t cluster_new_chain = fat16_append_clusters(fd->fs, cluster_num, cluster_cou
1294:../Library/sdfat/fat16.c ****                 if(!cluster_new_chain)
1295:../Library/sdfat/fat16.c ****                     return 0;
1296:../Library/sdfat/fat16.c ****     
1297:../Library/sdfat/fat16.c ****                 if(!cluster_num)
1298:../Library/sdfat/fat16.c ****                 {
1299:../Library/sdfat/fat16.c ****                     cluster_num = cluster_new_chain;
1300:../Library/sdfat/fat16.c ****                     fd->dir_entry.cluster = cluster_num;
1301:../Library/sdfat/fat16.c ****                 }
1302:../Library/sdfat/fat16.c ****             }
1303:../Library/sdfat/fat16.c ****     
1304:../Library/sdfat/fat16.c ****             /* write new directory entry */
1305:../Library/sdfat/fat16.c ****             fd->dir_entry.file_size = size;
1306:../Library/sdfat/fat16.c ****             if(size == 0)
1307:../Library/sdfat/fat16.c ****                 fd->dir_entry.cluster = 0;
1308:../Library/sdfat/fat16.c ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
1309:../Library/sdfat/fat16.c ****                 return 0;
1310:../Library/sdfat/fat16.c ****     
1311:../Library/sdfat/fat16.c ****             if(size == 0)
1312:../Library/sdfat/fat16.c ****             {
1313:../Library/sdfat/fat16.c ****                 /* free all clusters of file */
1314:../Library/sdfat/fat16.c ****                 fat16_free_clusters(fd->fs, cluster_num);
1315:../Library/sdfat/fat16.c ****             }
1316:../Library/sdfat/fat16.c ****             else if(size_new <= cluster_size)
1317:../Library/sdfat/fat16.c ****             {
1318:../Library/sdfat/fat16.c ****                 /* free all clusters no longer needed */
1319:../Library/sdfat/fat16.c ****                 fat16_terminate_clusters(fd->fs, cluster_num);
1320:../Library/sdfat/fat16.c ****             }
1321:../Library/sdfat/fat16.c ****     
1322:../Library/sdfat/fat16.c ****         }
1323:../Library/sdfat/fat16.c ****         while(0);
1324:../Library/sdfat/fat16.c ****     
1325:../Library/sdfat/fat16.c ****         /* correct file position */
1326:../Library/sdfat/fat16.c ****         if(size < fd->pos)
1327:../Library/sdfat/fat16.c ****         {
1328:../Library/sdfat/fat16.c ****             fd->pos = size;
1329:../Library/sdfat/fat16.c ****             fd->pos_cluster = 0;
1330:../Library/sdfat/fat16.c ****         }
1331:../Library/sdfat/fat16.c ****     
1332:../Library/sdfat/fat16.c ****         return 1;
1333:../Library/sdfat/fat16.c ****     #else
1334:../Library/sdfat/fat16.c ****         return 0;
1335:../Library/sdfat/fat16.c ****     #endif
1336:../Library/sdfat/fat16.c **** }
1337:../Library/sdfat/fat16.c **** 
1338:../Library/sdfat/fat16.c **** /**
1339:../Library/sdfat/fat16.c ****  * \ingroup fat16_dir
1340:../Library/sdfat/fat16.c ****  * Opens a directory.
1341:../Library/sdfat/fat16.c ****  *
1342:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which the directory to open resides.
1343:../Library/sdfat/fat16.c ****  * \param[in] dir_entry The directory entry which stands for the directory to open.
1344:../Library/sdfat/fat16.c ****  * \returns An opaque directory descriptor on success, 0 on failure.
1345:../Library/sdfat/fat16.c ****  * \see fat16_close_dir
1346:../Library/sdfat/fat16.c ****  */
1347:../Library/sdfat/fat16.c **** struct fat16_dir_struct* fat16_open_dir(struct fat16_fs_struct* fs, const struct fat16_dir_entry_st
1348:../Library/sdfat/fat16.c **** {
1349:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
1350:../Library/sdfat/fat16.c ****         return 0;
1351:../Library/sdfat/fat16.c **** 
1352:../Library/sdfat/fat16.c ****     struct fat16_dir_struct* dd = malloc(sizeof(*dd));
1353:../Library/sdfat/fat16.c ****     if(!dd)
1354:../Library/sdfat/fat16.c ****         return 0;
1355:../Library/sdfat/fat16.c **** 
1356:../Library/sdfat/fat16.c ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
1357:../Library/sdfat/fat16.c ****     dd->fs = fs;
1358:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
1359:../Library/sdfat/fat16.c **** 
1360:../Library/sdfat/fat16.c ****     return dd;
1361:../Library/sdfat/fat16.c **** }
1362:../Library/sdfat/fat16.c **** 
1363:../Library/sdfat/fat16.c **** /**
1364:../Library/sdfat/fat16.c ****  * \ingroup fat16_dir
1365:../Library/sdfat/fat16.c ****  * Closes a directory descriptor.
1366:../Library/sdfat/fat16.c ****  *
1367:../Library/sdfat/fat16.c ****  * This function destroys a directory descriptor which was
1368:../Library/sdfat/fat16.c ****  * previously obtained by calling fat16_open_dir(). When this
1369:../Library/sdfat/fat16.c ****  * function returns, the given descriptor will be invalid.
1370:../Library/sdfat/fat16.c ****  *
1371:../Library/sdfat/fat16.c ****  * \param[in] dd The directory descriptor to close.
1372:../Library/sdfat/fat16.c ****  * \see fat16_open_dir
1373:../Library/sdfat/fat16.c ****  */
1374:../Library/sdfat/fat16.c **** void fat16_close_dir(struct fat16_dir_struct* dd)
1375:../Library/sdfat/fat16.c **** {
1376:../Library/sdfat/fat16.c ****     if(dd)
1377:../Library/sdfat/fat16.c ****         free(dd);
1378:../Library/sdfat/fat16.c **** }
1379:../Library/sdfat/fat16.c **** 
1380:../Library/sdfat/fat16.c **** /**
1381:../Library/sdfat/fat16.c ****  * \ingroup fat16_dir
1382:../Library/sdfat/fat16.c ****  * Reads the next directory entry contained within a parent directory.
1383:../Library/sdfat/fat16.c ****  *
1384:../Library/sdfat/fat16.c ****  * \param[in] dd The descriptor of the parent directory from which to read the entry.
1385:../Library/sdfat/fat16.c ****  * \param[out] dir_entry Pointer to a buffer into which to write the directory entry information.
1386:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1387:../Library/sdfat/fat16.c ****  * \see fat16_reset_dir
1388:../Library/sdfat/fat16.c ****  */
1389:../Library/sdfat/fat16.c **** uint8_t fat16_read_dir(struct fat16_dir_struct* dd, struct fat16_dir_entry_struct* dir_entry)
1390:../Library/sdfat/fat16.c **** {
1391:../Library/sdfat/fat16.c ****     if(!dd || !dir_entry)
1392:../Library/sdfat/fat16.c ****         return 0;
1393:../Library/sdfat/fat16.c **** 
1394:../Library/sdfat/fat16.c ****     if(dd->dir_entry.cluster == 0)
1395:../Library/sdfat/fat16.c ****     {
1396:../Library/sdfat/fat16.c ****         /* read entry from root directory */
1397:../Library/sdfat/fat16.c ****         if(fat16_read_root_dir_entry(dd->fs, dd->entry_next, dir_entry))
1398:../Library/sdfat/fat16.c ****         {
1399:../Library/sdfat/fat16.c ****             ++dd->entry_next;
1400:../Library/sdfat/fat16.c ****             return 1;
1401:../Library/sdfat/fat16.c ****         }
1402:../Library/sdfat/fat16.c ****     }
1403:../Library/sdfat/fat16.c ****     else
1404:../Library/sdfat/fat16.c ****     {
1405:../Library/sdfat/fat16.c ****         /* read entry from a subdirectory */
1406:../Library/sdfat/fat16.c ****         if(fat16_read_sub_dir_entry(dd->fs, dd->entry_next, &dd->dir_entry, dir_entry))
1407:../Library/sdfat/fat16.c ****         {
1408:../Library/sdfat/fat16.c ****             ++dd->entry_next;
1409:../Library/sdfat/fat16.c ****             return 1;
1410:../Library/sdfat/fat16.c ****         }
1411:../Library/sdfat/fat16.c ****     }
1412:../Library/sdfat/fat16.c **** 
1413:../Library/sdfat/fat16.c ****     /* restart reading */
1414:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
1415:../Library/sdfat/fat16.c **** 
1416:../Library/sdfat/fat16.c ****     return 0;
1417:../Library/sdfat/fat16.c **** }
1418:../Library/sdfat/fat16.c **** 
1419:../Library/sdfat/fat16.c **** /**
1420:../Library/sdfat/fat16.c ****  * \ingroup fat16_dir
1421:../Library/sdfat/fat16.c ****  * Resets a directory handle.
1422:../Library/sdfat/fat16.c ****  *
1423:../Library/sdfat/fat16.c ****  * Resets the directory handle such that reading restarts
1424:../Library/sdfat/fat16.c ****  * with the first directory entry.
1425:../Library/sdfat/fat16.c ****  *
1426:../Library/sdfat/fat16.c ****  * \param[in] dd The directory handle to reset.
1427:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1428:../Library/sdfat/fat16.c ****  * \see fat16_read_dir
1429:../Library/sdfat/fat16.c ****  */
1430:../Library/sdfat/fat16.c **** uint8_t fat16_reset_dir(struct fat16_dir_struct* dd)
1431:../Library/sdfat/fat16.c **** {
1432:../Library/sdfat/fat16.c ****     if(!dd)
1433:../Library/sdfat/fat16.c ****         return 0;
1434:../Library/sdfat/fat16.c **** 
1435:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
1436:../Library/sdfat/fat16.c ****     return 1;
1437:../Library/sdfat/fat16.c **** }
1438:../Library/sdfat/fat16.c **** 
1439:../Library/sdfat/fat16.c **** uint8_t fat16_set_dir(struct fat16_dir_struct* dd, uint16_t offset)
1440:../Library/sdfat/fat16.c **** {
1441:../Library/sdfat/fat16.c ****     if(!dd)
1442:../Library/sdfat/fat16.c ****         return 0;
1443:../Library/sdfat/fat16.c **** 
1444:../Library/sdfat/fat16.c ****     dd->entry_next = offset;
1445:../Library/sdfat/fat16.c ****     return 1;
1446:../Library/sdfat/fat16.c **** }
1447:../Library/sdfat/fat16.c **** 
1448:../Library/sdfat/fat16.c **** /**
1449:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
1450:../Library/sdfat/fat16.c ****  * Writes a directory entry to disk.
1451:../Library/sdfat/fat16.c ****  *
1452:../Library/sdfat/fat16.c ****  * \note The file name is not checked for invalid characters.
1453:../Library/sdfat/fat16.c ****  *
1454:../Library/sdfat/fat16.c ****  * \note The generation of the short 8.3 file name is quite
1455:../Library/sdfat/fat16.c ****  * simple. The first eight characters are used for the filename.
1456:../Library/sdfat/fat16.c ****  * The extension, if any, is made up of the first three characters
1457:../Library/sdfat/fat16.c ****  * following the last dot within the long filename. If the
1458:../Library/sdfat/fat16.c ****  * filename (without the extension) is longer than eight characters,
1459:../Library/sdfat/fat16.c ****  * the lower byte of the cluster number replaces the last two
1460:../Library/sdfat/fat16.c ****  * characters to avoid name clashes. In any other case, it is your
1461:../Library/sdfat/fat16.c ****  * responsibility to avoid name clashes.
1462:../Library/sdfat/fat16.c ****  *
1463:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
1464:../Library/sdfat/fat16.c ****  * \param[in] dir_entry The directory entry to write.
1465:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1466:../Library/sdfat/fat16.c ****  */
1467:../Library/sdfat/fat16.c **** uint8_t fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry_struct
1468:../Library/sdfat/fat16.c **** {
1469:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
1470:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
1471:../Library/sdfat/fat16.c ****             return 0;
1472:../Library/sdfat/fat16.c ****     
1473:../Library/sdfat/fat16.c ****         device_write_t device_write = fs->partition->device_write;
1474:../Library/sdfat/fat16.c ****         uint32_t offset = dir_entry->entry_offset;
1475:../Library/sdfat/fat16.c ****         uint8_t name_len = strlen(dir_entry->long_name);
1476:../Library/sdfat/fat16.c ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
1477:../Library/sdfat/fat16.c ****         uint8_t buffer[32];
1478:../Library/sdfat/fat16.c ****     
1479:../Library/sdfat/fat16.c ****         /* write 8.3 entry */
1480:../Library/sdfat/fat16.c ****     
1481:../Library/sdfat/fat16.c ****         /* generate 8.3 file name */
1482:../Library/sdfat/fat16.c ****         memset(&buffer[0], ' ', 11);
1483:../Library/sdfat/fat16.c ****         char* name_ext = strrchr(dir_entry->long_name, '.');
1484:../Library/sdfat/fat16.c ****         if(name_ext)
1485:../Library/sdfat/fat16.c ****         {
1486:../Library/sdfat/fat16.c ****             ++name_ext;
1487:../Library/sdfat/fat16.c ****     
1488:../Library/sdfat/fat16.c ****             uint8_t name_ext_len = strlen(name_ext);
1489:../Library/sdfat/fat16.c ****             name_len -= name_ext_len + 1;
1490:../Library/sdfat/fat16.c ****     
1491:../Library/sdfat/fat16.c ****             if(name_ext_len > 3)
1492:../Library/sdfat/fat16.c ****                 name_ext_len = 3;
1493:../Library/sdfat/fat16.c ****     
1494:../Library/sdfat/fat16.c ****             memcpy(&buffer[8], name_ext, name_ext_len);
1495:../Library/sdfat/fat16.c ****         }
1496:../Library/sdfat/fat16.c ****     
1497:../Library/sdfat/fat16.c ****         if(name_len <= 8)
1498:../Library/sdfat/fat16.c ****         {
1499:../Library/sdfat/fat16.c ****             memcpy(buffer, dir_entry->long_name, name_len);
1500:../Library/sdfat/fat16.c ****         }
1501:../Library/sdfat/fat16.c ****         else
1502:../Library/sdfat/fat16.c ****         {
1503:../Library/sdfat/fat16.c ****             memcpy(buffer, dir_entry->long_name, 8);
1504:../Library/sdfat/fat16.c ****     
1505:../Library/sdfat/fat16.c ****             /* Minimize 8.3 name clashes by appending
1506:../Library/sdfat/fat16.c ****                                              * the lower byte of the cluster number.
1507:../Library/sdfat/fat16.c ****                                              */
1508:../Library/sdfat/fat16.c ****             uint8_t num = dir_entry->cluster & 0xff;
1509:../Library/sdfat/fat16.c ****     
1510:../Library/sdfat/fat16.c ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
1511:../Library/sdfat/fat16.c ****             num &= 0x0f;
1512:../Library/sdfat/fat16.c ****             buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
1513:../Library/sdfat/fat16.c ****         }
1514:../Library/sdfat/fat16.c ****     
1515:../Library/sdfat/fat16.c ****         /* fill directory entry buffer */
1516:../Library/sdfat/fat16.c ****         memset(&buffer[11], 0, sizeof(buffer) - 11);
1517:../Library/sdfat/fat16.c ****         buffer[0x0b] = dir_entry->attributes;
1518:../Library/sdfat/fat16.c **** 
1519:../Library/sdfat/fat16.c ****         //Not used in bootloader
1520:../Library/sdfat/fat16.c **** 		#ifdef MAIN_FIRMWARE
1521:../Library/sdfat/fat16.c **** 			//Added modified date/time 12-26-07
1522:../Library/sdfat/fat16.c **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1523:../Library/sdfat/fat16.c **** 			char * current_time;
1524:../Library/sdfat/fat16.c **** /*			current_time = GPS_get_time();
1525:../Library/sdfat/fat16.c **** 			char * current_date;
1526:../Library/sdfat/fat16.c **** 			current_date = GPS_get_date();
1527:../Library/sdfat/fat16.c **** 			
1528:../Library/sdfat/fat16.c **** 			uint16_t modified_time, modified_date;
1529:../Library/sdfat/fat16.c **** 			uint8_t c_hour, c_minute, c_second;
1530:../Library/sdfat/fat16.c **** 			uint8_t c_year, c_month, c_day;
1531:../Library/sdfat/fat16.c **** 			
1532:../Library/sdfat/fat16.c **** 			c_hour = (current_time[0] - '0') * 10;
1533:../Library/sdfat/fat16.c **** 			c_hour += (current_time[1] - '0');
1534:../Library/sdfat/fat16.c **** 			c_minute = (current_time[3] - '0') * 10;
1535:../Library/sdfat/fat16.c **** 			c_minute += (current_time[4] - '0');
1536:../Library/sdfat/fat16.c **** 			c_second = (current_time[6] - '0') * 10;
1537:../Library/sdfat/fat16.c **** 			c_second += (current_time[7] - '0');
1538:../Library/sdfat/fat16.c **** 			
1539:../Library/sdfat/fat16.c **** 			c_day = (current_date[0] - '0') * 10;
1540:../Library/sdfat/fat16.c **** 			c_day += (current_date[1] - '0');
1541:../Library/sdfat/fat16.c **** 			c_month = (current_date[3] - '0') * 10;
1542:../Library/sdfat/fat16.c **** 			c_month += (current_date[4] - '0');
1543:../Library/sdfat/fat16.c **** 			c_year = (current_date[6] - '0') * 10;
1544:../Library/sdfat/fat16.c **** 			c_year += (current_date[7] - '0');
1545:../Library/sdfat/fat16.c **** 			
1546:../Library/sdfat/fat16.c **** 			//Correct for 1980 = 0, 2000 = 20, year code
1547:../Library/sdfat/fat16.c **** 			c_year += 20;
1548:../Library/sdfat/fat16.c **** 			
1549:../Library/sdfat/fat16.c **** 			modified_time = (c_hour << (16-5)) | (c_minute << (16-11)) | (c_second);
1550:../Library/sdfat/fat16.c **** 			modified_date = (c_year << (16-7)) | (c_month << (16-11)) | (c_day);
1551:../Library/sdfat/fat16.c **** 
1552:../Library/sdfat/fat16.c **** 			//Do a little error correction
1553:../Library/sdfat/fat16.c **** 			if (c_year < 26) //26 = 2006
1554:../Library/sdfat/fat16.c **** 			{
1555:../Library/sdfat/fat16.c **** 				modified_time = 0;
1556:../Library/sdfat/fat16.c **** 				modified_date = 0;
1557:../Library/sdfat/fat16.c **** 			}
1558:../Library/sdfat/fat16.c **** 
1559:../Library/sdfat/fat16.c **** 			//rprintf("c_time=%d, %d, %d\n", c_hour, c_minute, c_second);
1560:../Library/sdfat/fat16.c **** 			//rprintf("c_date=%d, %d, %d\n", c_month, c_day, c_year);
1561:../Library/sdfat/fat16.c **** 			//rprintf("mod_time=%x\n", modified_time);
1562:../Library/sdfat/fat16.c **** 			//rprintf("mod_date=%x\n", modified_date);
1563:../Library/sdfat/fat16.c **** 			
1564:../Library/sdfat/fat16.c **** 			buffer[0x16] = (modified_time >> 0) & 0xFF;
1565:../Library/sdfat/fat16.c **** 			buffer[0x17] = (modified_time >> 8) & 0xFF;
1566:../Library/sdfat/fat16.c **** 			buffer[0x18] = (modified_date >> 0) & 0xFF;
1567:../Library/sdfat/fat16.c **** 			buffer[0x19] = (modified_date >> 8) & 0xFF;
1568:../Library/sdfat/fat16.c **** 			*/
1569:../Library/sdfat/fat16.c **** 			//=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
1570:../Library/sdfat/fat16.c **** 		#endif
1571:../Library/sdfat/fat16.c **** 
1572:../Library/sdfat/fat16.c ****         buffer[0x1a] = (dir_entry->cluster >> 0) & 0xff;
1573:../Library/sdfat/fat16.c ****         buffer[0x1b] = (dir_entry->cluster >> 8) & 0xff;
1574:../Library/sdfat/fat16.c ****         buffer[0x1c] = (dir_entry->file_size >> 0) & 0xff;
1575:../Library/sdfat/fat16.c ****         buffer[0x1d] = (dir_entry->file_size >> 8) & 0xff;
1576:../Library/sdfat/fat16.c ****         buffer[0x1e] = (dir_entry->file_size >> 16) & 0xff;
1577:../Library/sdfat/fat16.c ****         buffer[0x1f] = (dir_entry->file_size >> 24) & 0xff;
1578:../Library/sdfat/fat16.c ****     
1579:../Library/sdfat/fat16.c ****         /* write to disk */
1580:../Library/sdfat/fat16.c ****         if(!device_write(offset + (uint32_t) lfn_entry_count * 32, buffer, sizeof(buffer)))
1581:../Library/sdfat/fat16.c ****             return 0;
1582:../Library/sdfat/fat16.c ****     
1583:../Library/sdfat/fat16.c ****         /* calculate checksum of 8.3 name */
1584:../Library/sdfat/fat16.c ****         uint8_t checksum = buffer[0];
1585:../Library/sdfat/fat16.c ****         uint8_t i;
1586:../Library/sdfat/fat16.c ****         for(i = 1; i < 11; ++i)
1587:../Library/sdfat/fat16.c ****             checksum = ((checksum >> 1) | (checksum << 7)) + buffer[i];
1588:../Library/sdfat/fat16.c ****     
1589:../Library/sdfat/fat16.c ****         /* write lfn entries */
1590:../Library/sdfat/fat16.c ****         uint8_t lfn_entry;
1591:../Library/sdfat/fat16.c ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
1592:../Library/sdfat/fat16.c ****         {
1593:../Library/sdfat/fat16.c ****             memset(buffer, 0, sizeof(buffer));
1594:../Library/sdfat/fat16.c ****             memset(&buffer[0x01], 0xff, 10);
1595:../Library/sdfat/fat16.c ****             memset(&buffer[0x0e], 0xff, 12);
1596:../Library/sdfat/fat16.c ****             memset(&buffer[0x1c], 0xff, 4);
1597:../Library/sdfat/fat16.c ****     
1598:../Library/sdfat/fat16.c ****             buffer[0x00] = lfn_entry;
1599:../Library/sdfat/fat16.c ****             if(lfn_entry == lfn_entry_count)
1600:../Library/sdfat/fat16.c ****                 buffer[0x00] |= FAT16_DIRENTRY_LFNLAST;
1601:../Library/sdfat/fat16.c ****     
1602:../Library/sdfat/fat16.c ****             /* set file name */
1603:../Library/sdfat/fat16.c ****             const char* long_name_curr = dir_entry->long_name + (lfn_entry - 1) * 13;
1604:../Library/sdfat/fat16.c ****             i = 1;
1605:../Library/sdfat/fat16.c ****             while(i < 0x1f)
1606:../Library/sdfat/fat16.c ****             {
1607:../Library/sdfat/fat16.c ****                 buffer[i++] = *long_name_curr;
1608:../Library/sdfat/fat16.c ****                 buffer[i++] = 0;
1609:../Library/sdfat/fat16.c ****     
1610:../Library/sdfat/fat16.c ****                 switch(i)
1611:../Library/sdfat/fat16.c ****                 {
1612:../Library/sdfat/fat16.c ****                     case 0x0b:
1613:../Library/sdfat/fat16.c ****                         i = 0x0e;
1614:../Library/sdfat/fat16.c ****                         break;
1615:../Library/sdfat/fat16.c ****                     case 0x1a:
1616:../Library/sdfat/fat16.c ****                         i = 0x1c;
1617:../Library/sdfat/fat16.c ****                         break;
1618:../Library/sdfat/fat16.c ****                 }
1619:../Library/sdfat/fat16.c ****     
1620:../Library/sdfat/fat16.c ****                 if(!*long_name_curr++)
1621:../Library/sdfat/fat16.c ****                     break;
1622:../Library/sdfat/fat16.c ****             }
1623:../Library/sdfat/fat16.c ****     
1624:../Library/sdfat/fat16.c ****             /* mark as lfn entry */
1625:../Library/sdfat/fat16.c ****             buffer[0x0b] = 0x0f;
1626:../Library/sdfat/fat16.c ****     
1627:../Library/sdfat/fat16.c ****             /* set checksum */
1628:../Library/sdfat/fat16.c ****             buffer[0x0d] = checksum;
1629:../Library/sdfat/fat16.c ****     
1630:../Library/sdfat/fat16.c ****             /* write entry */
1631:../Library/sdfat/fat16.c ****             device_write(offset, buffer, sizeof(buffer));
1632:../Library/sdfat/fat16.c ****     
1633:../Library/sdfat/fat16.c ****             offset += sizeof(buffer);
1634:../Library/sdfat/fat16.c ****         }
1635:../Library/sdfat/fat16.c ****     
1636:../Library/sdfat/fat16.c ****         return 1;
1637:../Library/sdfat/fat16.c ****     
1638:../Library/sdfat/fat16.c ****     #else
1639:../Library/sdfat/fat16.c ****         return 0;
1640:../Library/sdfat/fat16.c ****     #endif
1641:../Library/sdfat/fat16.c **** }
1642:../Library/sdfat/fat16.c **** 
1643:../Library/sdfat/fat16.c **** /**
1644:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
1645:../Library/sdfat/fat16.c ****  * Creates a file.
1646:../Library/sdfat/fat16.c ****  *
1647:../Library/sdfat/fat16.c ****  * Creates a file and obtains the directory entry of the
1648:../Library/sdfat/fat16.c ****  * new file. If the file to create already exists, the
1649:../Library/sdfat/fat16.c ****  * directory entry of the existing file will be returned
1650:../Library/sdfat/fat16.c ****  * within the dir_entry parameter.
1651:../Library/sdfat/fat16.c ****  *
1652:../Library/sdfat/fat16.c ****  * \note The file name is not checked for invalid characters.
1653:../Library/sdfat/fat16.c ****  *
1654:../Library/sdfat/fat16.c ****  * \note The generation of the short 8.3 file name is quite
1655:../Library/sdfat/fat16.c ****  * simple. The first eight characters are used for the filename.
1656:../Library/sdfat/fat16.c ****  * The extension, if any, is made up of the first three characters
1657:../Library/sdfat/fat16.c ****  * following the last dot within the long filename. If the
1658:../Library/sdfat/fat16.c ****  * filename (without the extension) is longer than eight characters,
1659:../Library/sdfat/fat16.c ****  * the lower byte of the cluster number replaces the last two
1660:../Library/sdfat/fat16.c ****  * characters to avoid name clashes. In any other case, it is your
1661:../Library/sdfat/fat16.c ****  * responsibility to avoid name clashes.
1662:../Library/sdfat/fat16.c ****  *
1663:../Library/sdfat/fat16.c ****  * \param[in] parent The handle of the directory in which to create the file.
1664:../Library/sdfat/fat16.c ****  * \param[in] file The name of the file to create.
1665:../Library/sdfat/fat16.c ****  * \param[out] dir_entry The directory entry to fill for the new file.
1666:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1667:../Library/sdfat/fat16.c ****  * \see fat16_delete_file
1668:../Library/sdfat/fat16.c ****  */
1669:../Library/sdfat/fat16.c **** uint8_t fat16_create_file(struct fat16_dir_struct* parent, const char* file, struct fat16_dir_entry
1670:../Library/sdfat/fat16.c **** {
1671:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
1673:../Library/sdfat/fat16.c ****             return 0;
1674:../Library/sdfat/fat16.c ****     
1675:../Library/sdfat/fat16.c ****         /* check if the file already exists */
1676:../Library/sdfat/fat16.c ****         while(1)
1677:../Library/sdfat/fat16.c ****         {
1678:../Library/sdfat/fat16.c ****             if(!fat16_read_dir(parent, dir_entry))
1679:../Library/sdfat/fat16.c ****                 break;
1680:../Library/sdfat/fat16.c ****     
1681:../Library/sdfat/fat16.c ****             if(strcmp(file, dir_entry->long_name) == 0)
1682:../Library/sdfat/fat16.c ****             {
1683:../Library/sdfat/fat16.c ****                 fat16_reset_dir(parent);
1684:../Library/sdfat/fat16.c ****                 return 1;
1685:../Library/sdfat/fat16.c ****             }
1686:../Library/sdfat/fat16.c ****         }
1687:../Library/sdfat/fat16.c ****     
1688:../Library/sdfat/fat16.c ****         memset(dir_entry, 0, sizeof(*dir_entry));
1689:../Library/sdfat/fat16.c ****         strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
1690:../Library/sdfat/fat16.c ****     
1691:../Library/sdfat/fat16.c ****         /* search for a place where to write the directory entry to disk */
1692:../Library/sdfat/fat16.c ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
1693:../Library/sdfat/fat16.c ****         uint8_t free_dir_entries_found = 0;
1694:../Library/sdfat/fat16.c ****         struct fat16_fs_struct* fs = parent->fs;
1695:../Library/sdfat/fat16.c ****         uint16_t cluster_num = parent->dir_entry.cluster;
1696:../Library/sdfat/fat16.c ****         uint32_t dir_entry_offset = 0;
1697:../Library/sdfat/fat16.c ****         uint32_t offset = 0;
1698:../Library/sdfat/fat16.c ****         uint32_t offset_to = 0;
1699:../Library/sdfat/fat16.c ****     
1700:../Library/sdfat/fat16.c ****         if(cluster_num == 0)
1701:../Library/sdfat/fat16.c ****         {
1702:../Library/sdfat/fat16.c ****             /* we read/write from the root directory entry */
1703:../Library/sdfat/fat16.c ****             offset = fs->header.root_dir_offset;
1704:../Library/sdfat/fat16.c ****             offset_to = fs->header.cluster_zero_offset;
1705:../Library/sdfat/fat16.c ****             dir_entry_offset = offset;
1706:../Library/sdfat/fat16.c ****         }
1707:../Library/sdfat/fat16.c ****     
1708:../Library/sdfat/fat16.c ****         while(1)
1709:../Library/sdfat/fat16.c ****         {
1710:../Library/sdfat/fat16.c ****             if(offset == offset_to)
1711:../Library/sdfat/fat16.c ****             {
1712:../Library/sdfat/fat16.c ****                 if(cluster_num == 0)
1713:../Library/sdfat/fat16.c **** 				/* We iterated through the whole root directory entry
1714:../Library/sdfat/fat16.c ****                 * and could not find enough space for the directory entry.
1715:../Library/sdfat/fat16.c ****                 */
1716:../Library/sdfat/fat16.c ****                 return 0;
1717:../Library/sdfat/fat16.c ****     
1718:../Library/sdfat/fat16.c ****                 if(offset)
1719:../Library/sdfat/fat16.c ****                 {
1720:../Library/sdfat/fat16.c ****                     /* We reached a cluster boundary and have to
1721:../Library/sdfat/fat16.c ****                     * switch to the next cluster.
1722:../Library/sdfat/fat16.c ****                     */
1723:../Library/sdfat/fat16.c ****     
1724:../Library/sdfat/fat16.c ****                     uint16_t cluster_next = fat16_get_next_cluster(fs, cluster_num);
1725:../Library/sdfat/fat16.c ****                     if(!cluster_next)
1726:../Library/sdfat/fat16.c ****                     {
1727:../Library/sdfat/fat16.c ****                         cluster_next = fat16_append_clusters(fs, cluster_num, 1);
1728:../Library/sdfat/fat16.c ****                         if(!cluster_next)
1729:../Library/sdfat/fat16.c ****                             return 0;
1730:../Library/sdfat/fat16.c ****     
1731:../Library/sdfat/fat16.c ****                         /* we appended a new cluster and know it is free */
1732:../Library/sdfat/fat16.c ****                         dir_entry_offset = fs->header.cluster_zero_offset +
1733:../Library/sdfat/fat16.c ****                         (uint32_t) (cluster_next - 2) * fs->header.cluster_size;
1734:../Library/sdfat/fat16.c ****     
1735:../Library/sdfat/fat16.c ****                         /* TODO: This cluster has to be zeroed in an efficient way, or at least
1736:../Library/sdfat/fat16.c ****                         *       every 32th byte should be set to FAT16_DIRENTRY_DELETED.
1737:../Library/sdfat/fat16.c ****                         */
1738:../Library/sdfat/fat16.c ****                         break;
1739:../Library/sdfat/fat16.c ****                     }
1740:../Library/sdfat/fat16.c ****                     cluster_num = cluster_next;
1741:../Library/sdfat/fat16.c ****                 }
1742:../Library/sdfat/fat16.c ****     
1743:../Library/sdfat/fat16.c ****                 offset = fs->header.cluster_zero_offset +
1744:../Library/sdfat/fat16.c ****                 (uint32_t) (cluster_num - 2) * fs->header.cluster_size;
1745:../Library/sdfat/fat16.c ****                 offset_to = offset + fs->header.cluster_size;
1746:../Library/sdfat/fat16.c ****                 dir_entry_offset = offset;
1747:../Library/sdfat/fat16.c ****                 free_dir_entries_found = 0;
1748:../Library/sdfat/fat16.c ****             }
1749:../Library/sdfat/fat16.c ****     
1750:../Library/sdfat/fat16.c ****             /* read next lfn or 8.3 entry */
1751:../Library/sdfat/fat16.c ****             uint8_t first_char;
1752:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
1753:../Library/sdfat/fat16.c ****                 return 0;
1754:../Library/sdfat/fat16.c ****     
1755:../Library/sdfat/fat16.c ****             /* check if we found a free directory entry */
1756:../Library/sdfat/fat16.c ****             if(first_char == FAT16_DIRENTRY_DELETED || !first_char)
1757:../Library/sdfat/fat16.c ****             {
1758:../Library/sdfat/fat16.c ****                 /* check if we have the needed number of available entries */
1759:../Library/sdfat/fat16.c ****                 ++free_dir_entries_found;
1760:../Library/sdfat/fat16.c ****                 if(free_dir_entries_found >= free_dir_entries_needed)
1761:../Library/sdfat/fat16.c ****                     break;
1762:../Library/sdfat/fat16.c ****     
1763:../Library/sdfat/fat16.c ****                 offset += 32;
1764:../Library/sdfat/fat16.c ****             }
1765:../Library/sdfat/fat16.c ****             else
1766:../Library/sdfat/fat16.c ****             {
1767:../Library/sdfat/fat16.c ****                 offset += 32;
1768:../Library/sdfat/fat16.c ****                 dir_entry_offset = offset;
1769:../Library/sdfat/fat16.c ****                 free_dir_entries_found = 0;
1770:../Library/sdfat/fat16.c ****             }
1771:../Library/sdfat/fat16.c ****         }
1772:../Library/sdfat/fat16.c **** 
1773:../Library/sdfat/fat16.c ****         /* write directory entry to disk */
1774:../Library/sdfat/fat16.c ****         dir_entry->entry_offset = dir_entry_offset;
1775:../Library/sdfat/fat16.c ****         if(!fat16_write_dir_entry(fs, dir_entry))
1776:../Library/sdfat/fat16.c ****             return 0;
1777:../Library/sdfat/fat16.c ****     
1778:../Library/sdfat/fat16.c ****         return 1;
1779:../Library/sdfat/fat16.c ****     
1780:../Library/sdfat/fat16.c ****     #else
1781:../Library/sdfat/fat16.c ****         return 0;
1782:../Library/sdfat/fat16.c ****     #endif
1783:../Library/sdfat/fat16.c **** }
1784:../Library/sdfat/fat16.c **** 
1785:../Library/sdfat/fat16.c **** /**
1786:../Library/sdfat/fat16.c ****  * \ingroup fat16_file
1787:../Library/sdfat/fat16.c ****  * Deletes a file or directory.
1788:../Library/sdfat/fat16.c ****  *
1789:../Library/sdfat/fat16.c ****  * It is not checked if the file to delete is a directory.
1790:../Library/sdfat/fat16.c ****  * If a directory is deleted without first deleting its
1791:../Library/sdfat/fat16.c ****  * subdirectories and files, disk space occupied by these
1792:../Library/sdfat/fat16.c ****  * files will get wasted as there is no chance to release
1793:../Library/sdfat/fat16.c ****  * it and mark it as free.
1794:../Library/sdfat/fat16.c ****  *
1795:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
1796:../Library/sdfat/fat16.c ****  * \param[in] dir_entry The directory entry of the file to delete.
1797:../Library/sdfat/fat16.c ****  * \returns 0 on failure, 1 on success.
1798:../Library/sdfat/fat16.c ****  * \see fat16_create_file
1799:../Library/sdfat/fat16.c ****  */
1800:../Library/sdfat/fat16.c **** uint8_t fat16_delete_file(struct fat16_fs_struct* fs, struct fat16_dir_entry_struct* dir_entry)
1801:../Library/sdfat/fat16.c **** {
1802:../Library/sdfat/fat16.c ****     #if FAT16_WRITE_SUPPORT
1803:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
1804:../Library/sdfat/fat16.c ****             return 0;
1805:../Library/sdfat/fat16.c ****     
1806:../Library/sdfat/fat16.c ****         /* get offset of the file's directory entry */
1807:../Library/sdfat/fat16.c ****         uint32_t dir_entry_offset = dir_entry->entry_offset;
1808:../Library/sdfat/fat16.c ****         if(!dir_entry_offset)
1809:../Library/sdfat/fat16.c ****             return 0;
1810:../Library/sdfat/fat16.c ****     
1811:../Library/sdfat/fat16.c ****         uint8_t buffer[12];
1812:../Library/sdfat/fat16.c ****         while(1)
1813:../Library/sdfat/fat16.c ****         {
1814:../Library/sdfat/fat16.c ****             /* read directory entry */
1815:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
1816:../Library/sdfat/fat16.c ****                 return 0;
1817:../Library/sdfat/fat16.c ****     
1818:../Library/sdfat/fat16.c ****             /* mark the directory entry as deleted */
1819:../Library/sdfat/fat16.c ****             buffer[0] = FAT16_DIRENTRY_DELETED;
1820:../Library/sdfat/fat16.c ****     
1821:../Library/sdfat/fat16.c ****             /* write back entry */
1822:../Library/sdfat/fat16.c ****             if(!fs->partition->device_write(dir_entry_offset, buffer, sizeof(buffer)))
1823:../Library/sdfat/fat16.c ****                 return 0;
1824:../Library/sdfat/fat16.c ****     
1825:../Library/sdfat/fat16.c ****             /* check if we deleted the whole entry */
1826:../Library/sdfat/fat16.c ****             if(buffer[11] != 0x0f)
1827:../Library/sdfat/fat16.c ****                 break;
1828:../Library/sdfat/fat16.c ****     
1829:../Library/sdfat/fat16.c ****             dir_entry_offset += 32;
1830:../Library/sdfat/fat16.c ****         }
1831:../Library/sdfat/fat16.c ****     
1832:../Library/sdfat/fat16.c ****         /* We deleted the directory entry. The next thing to do is
1833:../Library/sdfat/fat16.c ****                              * marking all occupied clusters as free.
1834:../Library/sdfat/fat16.c ****                              */
1835:../Library/sdfat/fat16.c ****         return fat16_free_clusters(fs, dir_entry->cluster);
1836:../Library/sdfat/fat16.c ****     #else
1837:../Library/sdfat/fat16.c ****         return 0;
1838:../Library/sdfat/fat16.c ****     #endif
1839:../Library/sdfat/fat16.c **** }
1840:../Library/sdfat/fat16.c **** 
1841:../Library/sdfat/fat16.c **** /**
1842:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
1843:../Library/sdfat/fat16.c ****  * Returns the amount of total storage capacity of the filesystem in bytes.
1844:../Library/sdfat/fat16.c ****  *
1845:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
1846:../Library/sdfat/fat16.c ****  * \returns 0 on failure, the filesystem size in bytes otherwise.
1847:../Library/sdfat/fat16.c ****  */
1848:../Library/sdfat/fat16.c **** uint32_t fat16_get_fs_size(const struct fat16_fs_struct* fs)
1849:../Library/sdfat/fat16.c **** {
1850:../Library/sdfat/fat16.c ****     if(!fs)
1851:../Library/sdfat/fat16.c ****         return 0;
1852:../Library/sdfat/fat16.c **** 
1853:../Library/sdfat/fat16.c ****     return (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
1854:../Library/sdfat/fat16.c **** }
1855:../Library/sdfat/fat16.c **** 
1856:../Library/sdfat/fat16.c **** /**
1857:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
1858:../Library/sdfat/fat16.c ****  * Returns the amount of free storage capacity on the filesystem in bytes.
1859:../Library/sdfat/fat16.c ****  *
1860:../Library/sdfat/fat16.c ****  * \note As the FAT16 filesystem is cluster based, this function does not
1861:../Library/sdfat/fat16.c ****  *       return continuous values but multiples of the cluster size.
1862:../Library/sdfat/fat16.c ****  *
1863:../Library/sdfat/fat16.c ****  * \param[in] fs The filesystem on which to operate.
1864:../Library/sdfat/fat16.c ****  * \returns 0 on failure, the free filesystem space in bytes otherwise.
1865:../Library/sdfat/fat16.c ****  */
1866:../Library/sdfat/fat16.c **** uint32_t fat16_get_fs_free(const struct fat16_fs_struct* fs)
1867:../Library/sdfat/fat16.c **** {
1868:../Library/sdfat/fat16.c ****     if(!fs)
1869:../Library/sdfat/fat16.c ****         return 0;
1870:../Library/sdfat/fat16.c **** 
1871:../Library/sdfat/fat16.c ****     uint8_t fat[32];
1872:../Library/sdfat/fat16.c ****     struct fat16_usage_count_callback_arg count_arg;
1873:../Library/sdfat/fat16.c ****     count_arg.cluster_count = 0;
1874:../Library/sdfat/fat16.c ****     count_arg.buffer_size = sizeof(fat);
1875:../Library/sdfat/fat16.c **** 
1876:../Library/sdfat/fat16.c ****     uint32_t fat_offset = fs->header.fat_offset;
1877:../Library/sdfat/fat16.c ****     uint32_t fat_size = fs->header.fat_size;
1878:../Library/sdfat/fat16.c ****     while(fat_size > 0)
1879:../Library/sdfat/fat16.c ****     {
1880:../Library/sdfat/fat16.c ****         uint16_t length = UINT16_MAX - 1;
1881:../Library/sdfat/fat16.c ****         if(fat_size < length)
1882:../Library/sdfat/fat16.c ****             length = fat_size;
1883:../Library/sdfat/fat16.c **** 
1884:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(fat_offset,
1885:../Library/sdfat/fat16.c ****             fat,
1886:../Library/sdfat/fat16.c ****            sizeof(fat),
1887:../Library/sdfat/fat16.c ****            length,
1888:../Library/sdfat/fat16.c ****            fat16_get_fs_free_callback,
1889:../Library/sdfat/fat16.c ****            &count_arg
1890:../Library/sdfat/fat16.c ****            )
1891:../Library/sdfat/fat16.c ****            )
1892:../Library/sdfat/fat16.c ****         return 0;
1893:../Library/sdfat/fat16.c **** 
1894:../Library/sdfat/fat16.c ****         fat_offset += length;
1895:../Library/sdfat/fat16.c ****         fat_size -= length;
1896:../Library/sdfat/fat16.c ****     }
1897:../Library/sdfat/fat16.c **** 
1898:../Library/sdfat/fat16.c ****     return (uint32_t) count_arg.cluster_count * fs->header.cluster_size;
1899:../Library/sdfat/fat16.c **** }
1900:../Library/sdfat/fat16.c **** 
1901:../Library/sdfat/fat16.c **** /**
1902:../Library/sdfat/fat16.c ****  * \ingroup fat16_fs
1903:../Library/sdfat/fat16.c ****  * Callback function used for counting free clusters.
1904:../Library/sdfat/fat16.c ****  */
1905:../Library/sdfat/fat16.c **** uint8_t fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p)
1906:../Library/sdfat/fat16.c **** {
  10              		.loc 1 1906 0
  11              		.cfi_startproc
  12              		@ Function supports interworking.
  13              		@ args = 0, pretend = 0, frame = 0
  14              		@ frame_needed = 0, uses_anonymous_args = 0
  15              		@ link register save eliminated.
  16              	.LVL0:
  17 0000 04402DE5 		str	r4, [sp, #-4]!
  18              	.LCFI0:
  19              		.cfi_def_cfa_offset 4
  20              		.cfi_offset 4, -4
1907:../Library/sdfat/fat16.c ****     struct fat16_usage_count_callback_arg* count_arg = (struct fat16_usage_count_callback_arg*) p;
1908:../Library/sdfat/fat16.c ****     uint8_t buffer_size = count_arg->buffer_size;
  21              		.loc 1 1908 0
  22 0004 0210D2E5 		ldrb	r1, [r2, #2]	@ zero_extendqisi2
  23              	.LVL1:
1909:../Library/sdfat/fat16.c ****     uint8_t i;
1910:../Library/sdfat/fat16.c ****     for(i = 0; i < buffer_size; i += 2)
  24              		.loc 1 1910 0
  25 0008 0030A0E3 		mov	r3, #0
  26 000c 070000EA 		b	.L2
  27              	.LVL2:
  28              	.L4:
1905:../Library/sdfat/fat16.c **** uint8_t fat16_get_fs_free_callback(uint8_t* buffer, uint32_t offset, void* p)
  29              		.loc 1 1905 0
  30 0010 03C080E0 		add	ip, r0, r3
1911:../Library/sdfat/fat16.c ****     {
1912:../Library/sdfat/fat16.c ****         if((((uint16_t) buffer[1] << 8) | ((uint16_t) buffer[0] << 0)) == FAT16_CLUSTER_FREE)
  31              		.loc 1 1912 0
  32 0014 0140DCE5 		ldrb	r4, [ip, #1]	@ zero_extendqisi2
  33 0018 03C0D0E7 		ldrb	ip, [r0, r3]	@ zero_extendqisi2
  34 001c 04C49CE1 		orrs	ip, ip, r4, asl #8
1913:../Library/sdfat/fat16.c ****             ++(count_arg->cluster_count);
  35              		.loc 1 1913 0
  36 0020 B0C0D201 		ldreqh	ip, [r2, #0]
  37 0024 01C08C02 		addeq	ip, ip, #1
  38 0028 B0C0C201 		streqh	ip, [r2, #0]	@ movhi
  39 002c 023083E2 		add	r3, r3, #2
  40              	.L2:
1910:../Library/sdfat/fat16.c ****     for(i = 0; i < buffer_size; i += 2)
  41              		.loc 1 1910 0 discriminator 1
  42 0030 FFC003E2 		and	ip, r3, #255
  43 0034 01005CE1 		cmp	ip, r1
  44 0038 F4FFFF3A 		bcc	.L4
1914:../Library/sdfat/fat16.c **** 
1915:../Library/sdfat/fat16.c ****         buffer += 2;
1916:../Library/sdfat/fat16.c ****     }
1917:../Library/sdfat/fat16.c **** 
1918:../Library/sdfat/fat16.c ****     return 1;
1919:../Library/sdfat/fat16.c **** }
  45              		.loc 1 1919 0
  46 003c 0100A0E3 		mov	r0, #1
  47 0040 1000BDE8 		ldmfd	sp!, {r4}
  48 0044 1EFF2FE1 		bx	lr
  49              		.cfi_endproc
  50              	.LFE29:
  52              		.align	2
  54              	fat16_dir_entry_seek_callback:
  55              	.LFB5:
 465:../Library/sdfat/fat16.c **** {
  56              		.loc 1 465 0
  57              		.cfi_startproc
  58              		@ Function supports interworking.
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  62              	.LVL3:
 469:../Library/sdfat/fat16.c ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
  63              		.loc 1 469 0
  64 0048 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
  65 004c E50053E3 		cmp	r3, #229
  66 0050 00005313 		cmpne	r3, #0
  67 0054 1400000A 		beq	.L9
 472:../Library/sdfat/fat16.c ****     if(arg->entry_cur == arg->entry_num)
  68              		.loc 1 472 0
  69 0058 B030D2E1 		ldrh	r3, [r2, #0]
  70 005c B2C0D2E1 		ldrh	ip, [r2, #2]
  71 0060 03005CE1 		cmp	ip, r3
  72 0064 0B00001A 		bne	.L7
  73              	.LVL4:
  74              	.LBB18:
  75              	.LBB19:
 474:../Library/sdfat/fat16.c ****         arg->entry_offset = offset;
  76              		.loc 1 474 0
  77 0068 041082E5 		str	r1, [r2, #4]
 475:../Library/sdfat/fat16.c ****         arg->byte_count = buffer[11] == 0x0f ?
  78              		.loc 1 475 0
  79 006c 0B30D0E5 		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  80 0070 0F0053E3 		cmp	r3, #15
 476:../Library/sdfat/fat16.c ****         ((buffer[0] & FAT16_DIRENTRY_LFNSEQMASK) + 1) * 32 :
  81              		.loc 1 476 0
  82 0074 0030D005 		ldreqb	r3, [r0, #0]	@ zero_extendqisi2
  83 0078 3F300302 		andeq	r3, r3, #63
 475:../Library/sdfat/fat16.c ****         arg->byte_count = buffer[11] == 0x0f ?
  84              		.loc 1 475 0
  85 007c 01308302 		addeq	r3, r3, #1
  86 0080 8332A001 		moveq	r3, r3, asl #5
  87 0084 FF300302 		andeq	r3, r3, #255
  88 0088 2030A013 		movne	r3, #32
  89 008c 0830C2E5 		strb	r3, [r2, #8]
  90 0090 0000A0E3 		mov	r0, #0
  91              	.LVL5:
  92 0094 1EFF2FE1 		bx	lr
  93              	.LVL6:
  94              	.L7:
  95              	.LBE19:
  96              	.LBE18:
 482:../Library/sdfat/fat16.c ****     if(buffer[11] != 0x0f)
  97              		.loc 1 482 0
  98 0098 0B10D0E5 		ldrb	r1, [r0, #11]	@ zero_extendqisi2
  99              	.LVL7:
 100 009c 0F0051E3 		cmp	r1, #15
 101 00a0 0300000A 		beq	.L11
 483:../Library/sdfat/fat16.c ****         ++arg->entry_cur;
 102              		.loc 1 483 0
 103 00a4 013083E2 		add	r3, r3, #1
 104 00a8 B030C2E1 		strh	r3, [r2, #0]	@ movhi
 105              	.L9:
 470:../Library/sdfat/fat16.c ****         return 1;
 106              		.loc 1 470 0
 107 00ac 0100A0E3 		mov	r0, #1
 108              	.LVL8:
 109 00b0 1EFF2FE1 		bx	lr
 110              	.LVL9:
 111              	.L11:
 485:../Library/sdfat/fat16.c ****     return 1;
 112              		.loc 1 485 0
 113 00b4 0100A0E3 		mov	r0, #1
 114              	.LVL10:
 486:../Library/sdfat/fat16.c **** }
 115              		.loc 1 486 0
 116 00b8 1EFF2FE1 		bx	lr
 117              		.cfi_endproc
 118              	.LFE5:
 120              		.align	2
 122              	fat16_dir_entry_read_callback:
 123              	.LFB6:
 493:../Library/sdfat/fat16.c **** {
 124              		.loc 1 493 0
 125              		.cfi_startproc
 126              		@ Function supports interworking.
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL11:
 131 00bc 04402DE5 		str	r4, [sp, #-4]!
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 4, -4
 497:../Library/sdfat/fat16.c ****     if(buffer[0] == FAT16_DIRENTRY_DELETED || !buffer[0])
 135              		.loc 1 497 0
 136 00c0 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 137 00c4 E50053E3 		cmp	r3, #229
 138 00c8 00005313 		cmpne	r3, #0
 139 00cc 6100000A 		beq	.L22
 140              	.LVL12:
 141              	.LBB27:
 142              	.LBB28:
 500:../Library/sdfat/fat16.c ****     if(!dir_entry->entry_offset)
 143              		.loc 1 500 0
 144 00d0 283092E5 		ldr	r3, [r2, #40]
 145 00d4 000053E3 		cmp	r3, #0
 501:../Library/sdfat/fat16.c ****         dir_entry->entry_offset = offset;
 146              		.loc 1 501 0
 147 00d8 28108205 		streq	r1, [r2, #40]
 148              	.LVL13:
 149              	.LBB29:
 150              	.LBB30:
 534:../Library/sdfat/fat16.c ****     if(!dir_entry || !raw_entry || !raw_entry[0])
 151              		.loc 1 534 0
 152 00dc 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 153 00e0 000053E3 		cmp	r3, #0
 154 00e4 0300A001 		moveq	r0, r3
 155              	.LVL14:
 156 00e8 5B00000A 		beq	.L13
 157              	.LVL15:
 538:../Library/sdfat/fat16.c ****     if(raw_entry[11] == 0x0f)
 158              		.loc 1 538 0
 159 00ec 0B10D0E5 		ldrb	r1, [r0, #11]	@ zero_extendqisi2
 160              	.LVL16:
 161 00f0 0F0051E3 		cmp	r1, #15
 162 00f4 2400001A 		bne	.L16
 163              	.LBB31:
 540:../Library/sdfat/fat16.c ****         uint16_t char_offset = ((raw_entry[0] & 0x3f) - 1) * 13;
 164              		.loc 1 540 0
 165 00f8 3F3003E2 		and	r3, r3, #63
 166 00fc 0D10A0E3 		mov	r1, #13
 167 0100 013043E2 		sub	r3, r3, #1
 168 0104 910303E0 		mul	r3, r1, r3
 169 0108 0338A0E1 		mov	r3, r3, asl #16
 170 010c 2318A0E1 		mov	r1, r3, lsr #16
 171              	.LVL17:
 542:../Library/sdfat/fat16.c ****         if(char_offset + 12 < sizeof(dir_entry->long_name))
 172              		.loc 1 542 0
 173 0110 0CC081E2 		add	ip, r1, #12
 174 0114 1F005CE3 		cmp	ip, #31
 175 0118 4C00008A 		bhi	.L24
 548:../Library/sdfat/fat16.c ****             long_name[char_offset + 0] = raw_entry[1];
 176              		.loc 1 548 0
 177 011c 01C0D0E5 		ldrb	ip, [r0, #1]	@ zero_extendqisi2
 178 0120 23C8C2E7 		strb	ip, [r2, r3, lsr #16]
 549:../Library/sdfat/fat16.c ****             long_name[char_offset + 1] = raw_entry[3];
 179              		.loc 1 549 0
 180 0124 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 181 0128 012082E0 		add	r2, r2, r1
 182              	.LVL18:
 183 012c 0130C2E5 		strb	r3, [r2, #1]
 550:../Library/sdfat/fat16.c ****             long_name[char_offset + 2] = raw_entry[5];
 184              		.loc 1 550 0
 185 0130 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 186 0134 0230C2E5 		strb	r3, [r2, #2]
 551:../Library/sdfat/fat16.c ****             long_name[char_offset + 3] = raw_entry[7];
 187              		.loc 1 551 0
 188 0138 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 189 013c 0330C2E5 		strb	r3, [r2, #3]
 552:../Library/sdfat/fat16.c ****             long_name[char_offset + 4] = raw_entry[9];
 190              		.loc 1 552 0
 191 0140 0930D0E5 		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 192 0144 0430C2E5 		strb	r3, [r2, #4]
 553:../Library/sdfat/fat16.c ****             long_name[char_offset + 5] = raw_entry[14];
 193              		.loc 1 553 0
 194 0148 0E30D0E5 		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 195 014c 0530C2E5 		strb	r3, [r2, #5]
 554:../Library/sdfat/fat16.c ****             long_name[char_offset + 6] = raw_entry[16];
 196              		.loc 1 554 0
 197 0150 1030D0E5 		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 198 0154 0630C2E5 		strb	r3, [r2, #6]
 555:../Library/sdfat/fat16.c ****             long_name[char_offset + 7] = raw_entry[18];
 199              		.loc 1 555 0
 200 0158 1230D0E5 		ldrb	r3, [r0, #18]	@ zero_extendqisi2
 201 015c 0730C2E5 		strb	r3, [r2, #7]
 556:../Library/sdfat/fat16.c ****             long_name[char_offset + 8] = raw_entry[20];
 202              		.loc 1 556 0
 203 0160 1430D0E5 		ldrb	r3, [r0, #20]	@ zero_extendqisi2
 204 0164 0830C2E5 		strb	r3, [r2, #8]
 557:../Library/sdfat/fat16.c ****             long_name[char_offset + 9] = raw_entry[22];
 205              		.loc 1 557 0
 206 0168 1630D0E5 		ldrb	r3, [r0, #22]	@ zero_extendqisi2
 207 016c 0930C2E5 		strb	r3, [r2, #9]
 558:../Library/sdfat/fat16.c ****             long_name[char_offset + 10] = raw_entry[24];
 208              		.loc 1 558 0
 209 0170 1830D0E5 		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 210 0174 0A30C2E5 		strb	r3, [r2, #10]
 559:../Library/sdfat/fat16.c ****             long_name[char_offset + 11] = raw_entry[28];
 211              		.loc 1 559 0
 212 0178 1C30D0E5 		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 213 017c 0B30C2E5 		strb	r3, [r2, #11]
 560:../Library/sdfat/fat16.c ****             long_name[char_offset + 12] = raw_entry[30];
 214              		.loc 1 560 0
 215 0180 1E30D0E5 		ldrb	r3, [r0, #30]	@ zero_extendqisi2
 216 0184 0C30C2E5 		strb	r3, [r2, #12]
 217 0188 300000EA 		b	.L24
 218              	.LVL19:
 219              	.L16:
 220              	.LBE31:
 568:../Library/sdfat/fat16.c ****         if(long_name[0] == '\0')
 221              		.loc 1 568 0
 222 018c 0010D2E5 		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 223 0190 000051E3 		cmp	r1, #0
 224 0194 1D00001A 		bne	.L17
 225              	.L19:
 226              	.LBB32:
 573:../Library/sdfat/fat16.c ****                 if(raw_entry[i] == ' ')
 227              		.loc 1 573 0
 228 0198 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 229 019c 20005CE3 		cmp	ip, #32
 230              	.LBE32:
 568:../Library/sdfat/fat16.c ****         if(long_name[0] == '\0')
 231              		.loc 1 568 0
 232 01a0 FF3001E2 		and	r3, r1, #255
 233              	.LBB35:
 573:../Library/sdfat/fat16.c ****                 if(raw_entry[i] == ' ')
 234              		.loc 1 573 0
 235 01a4 0400000A 		beq	.L18
 575:../Library/sdfat/fat16.c ****                 long_name[i] = raw_entry[i];
 236              		.loc 1 575 0
 237 01a8 01C0C2E7 		strb	ip, [r2, r1]
 238 01ac 011081E2 		add	r1, r1, #1
 571:../Library/sdfat/fat16.c ****             for(i = 0; i < 8; ++i)
 239              		.loc 1 571 0
 240 01b0 080051E3 		cmp	r1, #8
 241 01b4 F7FFFF1A 		bne	.L19
 242 01b8 0130A0E1 		mov	r3, r1
 243              	.LVL20:
 244              	.L18:
 577:../Library/sdfat/fat16.c ****             if(raw_entry[8] != ' ')
 245              		.loc 1 577 0
 246 01bc 0810D0E5 		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 247 01c0 200051E3 		cmp	r1, #32
 248 01c4 0F00000A 		beq	.L20
 249              	.LBB33:
 579:../Library/sdfat/fat16.c ****                 long_name[i++] = '.';
 250              		.loc 1 579 0
 251 01c8 2E10A0E3 		mov	r1, #46
 252 01cc 0310C2E7 		strb	r1, [r2, r3]
 253 01d0 01C083E2 		add	ip, r3, #1
 254              	.LVL21:
 492:../Library/sdfat/fat16.c **** uint8_t fat16_dir_entry_read_callback(uint8_t* buffer, uint32_t offset, void* p)
 255              		.loc 1 492 0
 256 01d4 043083E2 		add	r3, r3, #4
 257              	.LVL22:
 258 01d8 FF4003E2 		and	r4, r3, #255
 579:../Library/sdfat/fat16.c ****                 long_name[i++] = '.';
 259              		.loc 1 579 0
 260 01dc 0010A0E1 		mov	r1, r0
 261              	.LBE33:
 262 01e0 FF300CE2 		and	r3, ip, #255
 263              	.LVL23:
 264              	.L21:
 265              	.LBB34:
 584:../Library/sdfat/fat16.c ****                     if(raw_entry[j] != ' ')
 266              		.loc 1 584 0
 267 01e4 08C0D1E5 		ldrb	ip, [r1, #8]	@ zero_extendqisi2
 268 01e8 20005CE3 		cmp	ip, #32
 269 01ec 0500000A 		beq	.L20
 586:../Library/sdfat/fat16.c ****                         long_name[i++] = raw_entry[j];
 270              		.loc 1 586 0
 271 01f0 03C0C2E7 		strb	ip, [r2, r3]
 272 01f4 013083E2 		add	r3, r3, #1
 273 01f8 FF3003E2 		and	r3, r3, #255
 274              	.LVL24:
 582:../Library/sdfat/fat16.c ****                 for(; j < 11; ++j)
 275              		.loc 1 582 0
 276 01fc 040053E1 		cmp	r3, r4
 586:../Library/sdfat/fat16.c ****                         long_name[i++] = raw_entry[j];
 277              		.loc 1 586 0
 278 0200 011081E2 		add	r1, r1, #1
 582:../Library/sdfat/fat16.c ****                 for(; j < 11; ++j)
 279              		.loc 1 582 0
 280 0204 F6FFFF1A 		bne	.L21
 281              	.LVL25:
 282              	.L20:
 283              	.LBE34:
 595:../Library/sdfat/fat16.c ****             long_name[i] = '\0';
 284              		.loc 1 595 0
 285 0208 0010A0E3 		mov	r1, #0
 286 020c 0310C2E7 		strb	r1, [r2, r3]
 287              	.LVL26:
 288              	.L17:
 289              	.LBE35:
 599:../Library/sdfat/fat16.c ****         dir_entry->attributes = raw_entry[11];
 290              		.loc 1 599 0
 291 0210 0B30D0E5 		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 292 0214 2030C2E5 		strb	r3, [r2, #32]
 601:../Library/sdfat/fat16.c ****         ((uint16_t) raw_entry[27] << 8);
 293              		.loc 1 601 0
 294 0218 1B10D0E5 		ldrb	r1, [r0, #27]	@ zero_extendqisi2
 600:../Library/sdfat/fat16.c ****         dir_entry->cluster = ((uint16_t) raw_entry[26]) |
 295              		.loc 1 600 0
 296 021c 1A30D0E5 		ldrb	r3, [r0, #26]	@ zero_extendqisi2
 297 0220 013483E1 		orr	r3, r3, r1, asl #8
 298 0224 B232C2E1 		strh	r3, [r2, #34]	@ movhi
 604:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[30] << 16) |
 299              		.loc 1 604 0
 300 0228 1E30D0E5 		ldrb	r3, [r0, #30]	@ zero_extendqisi2
 603:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[29] << 8) |
 301              		.loc 1 603 0
 302 022c 1D10D0E5 		ldrb	r1, [r0, #29]	@ zero_extendqisi2
 604:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[30] << 16) |
 303              		.loc 1 604 0
 304 0230 0338A0E1 		mov	r3, r3, asl #16
 602:../Library/sdfat/fat16.c ****         dir_entry->file_size = ((uint32_t) raw_entry[28]) |
 305              		.loc 1 602 0
 306 0234 013483E1 		orr	r3, r3, r1, asl #8
 307 0238 1C10D0E5 		ldrb	r1, [r0, #28]	@ zero_extendqisi2
 603:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[29] << 8) |
 308              		.loc 1 603 0
 309 023c 013083E1 		orr	r3, r3, r1
 605:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[31] << 24);
 310              		.loc 1 605 0
 311 0240 1F10D0E5 		ldrb	r1, [r0, #31]	@ zero_extendqisi2
 604:../Library/sdfat/fat16.c ****         ((uint32_t) raw_entry[30] << 16) |
 312              		.loc 1 604 0
 313 0244 013C83E1 		orr	r3, r3, r1, asl #24
 602:../Library/sdfat/fat16.c ****         dir_entry->file_size = ((uint32_t) raw_entry[28]) |
 314              		.loc 1 602 0
 315 0248 243082E5 		str	r3, [r2, #36]
 316 024c 010000EA 		b	.L22
 317              	.LVL27:
 318              	.L24:
 319              	.LBB36:
 542:../Library/sdfat/fat16.c ****         if(char_offset + 12 < sizeof(dir_entry->long_name))
 320              		.loc 1 542 0
 321 0250 0100A0E3 		mov	r0, #1
 322 0254 000000EA 		b	.L13
 323              	.LVL28:
 324              	.L22:
 325              	.LBE36:
 326              	.LBE30:
 327              	.LBE29:
 328              	.LBE28:
 329              	.LBE27:
 498:../Library/sdfat/fat16.c ****         return 0;
 330              		.loc 1 498 0
 331 0258 0000A0E3 		mov	r0, #0
 332              	.LVL29:
 333              	.L13:
 514:../Library/sdfat/fat16.c **** }
 334              		.loc 1 514 0
 335 025c 1000BDE8 		ldmfd	sp!, {r4}
 336 0260 1EFF2FE1 		bx	lr
 337              		.cfi_endproc
 338              	.LFE6:
 340              		.align	2
 342              	fat16_get_next_cluster:
 343              	.LFB9:
 695:../Library/sdfat/fat16.c **** {
 344              		.loc 1 695 0
 345              		.cfi_startproc
 346              		@ Function supports interworking.
 347              		@ args = 0, pretend = 0, frame = 4
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL30:
 696:../Library/sdfat/fat16.c ****     if(!fs || cluster_num < 2)
 350              		.loc 1 696 0
 351 0264 000050E3 		cmp	r0, #0
 352 0268 01005113 		cmpne	r1, #1
 695:../Library/sdfat/fat16.c **** {
 353              		.loc 1 695 0
 354 026c 11402DE9 		stmfd	sp!, {r0, r4, lr}
 355              	.LCFI2:
 356              		.cfi_def_cfa_offset 12
 357              		.cfi_offset 14, -4
 358              		.cfi_offset 4, -8
 359              		.cfi_offset 0, -12
 696:../Library/sdfat/fat16.c ****     if(!fs || cluster_num < 2)
 360              		.loc 1 696 0
 361 0270 0040A083 		movhi	r4, #0
 362 0274 0140A093 		movls	r4, #1
 697:../Library/sdfat/fat16.c ****         return 0;
 363              		.loc 1 697 0
 364 0278 0000A093 		movls	r0, #0
 365              	.LVL31:
 696:../Library/sdfat/fat16.c ****     if(!fs || cluster_num < 2)
 366              		.loc 1 696 0
 367 027c 1A00009A 		bls	.L28
 368              	.LVL32:
 369              	.LBB39:
 370              	.LBB40:
 701:../Library/sdfat/fat16.c ****     if(!fs->partition->device_read(fs->header.fat_offset + 2 * cluster_num, fat_entry, 2))
 371              		.loc 1 701 0
 372 0280 003090E5 		ldr	r3, [r0, #0]
 373 0284 080090E5 		ldr	r0, [r0, #8]
 374              	.LVL33:
 375 0288 0220A0E3 		mov	r2, #2
 376 028c 810080E0 		add	r0, r0, r1, asl #1
 377 0290 0D10A0E1 		mov	r1, sp
 378              	.LVL34:
 379 0294 00C093E5 		ldr	ip, [r3, #0]
 380 0298 0FE0A0E1 		mov	lr, pc
 381 029c 1CFF2FE1 		bx	ip
 382 02a0 000050E3 		cmp	r0, #0
 383 02a4 1000000A 		beq	.L28
 705:../Library/sdfat/fat16.c ****     cluster_num = ((uint16_t) fat_entry[0]) |
 384              		.loc 1 705 0
 385 02a8 0030DDE5 		ldrb	r3, [sp, #0]	@ zero_extendqisi2
 706:../Library/sdfat/fat16.c ****     ((uint16_t) fat_entry[1] << 8);
 386              		.loc 1 706 0
 387 02ac 0100DDE5 		ldrb	r0, [sp, #1]	@ zero_extendqisi2
 705:../Library/sdfat/fat16.c ****     cluster_num = ((uint16_t) fat_entry[0]) |
 388              		.loc 1 705 0
 389 02b0 000483E1 		orr	r0, r3, r0, asl #8
 390              	.LVL35:
 709:../Library/sdfat/fat16.c ****         cluster_num == FAT16_CLUSTER_BAD ||
 391              		.loc 1 709 0
 392 02b4 38309FE5 		ldr	r3, .L34
 708:../Library/sdfat/fat16.c ****     if(cluster_num == FAT16_CLUSTER_FREE ||
 393              		.loc 1 708 0
 394 02b8 000050E3 		cmp	r0, #0
 395 02bc 03005011 		cmpne	r0, r3
 713:../Library/sdfat/fat16.c **** 	return 0;
 396              		.loc 1 713 0
 397 02c0 0400A001 		moveq	r0, r4
 398              	.LVL36:
 708:../Library/sdfat/fat16.c ****     if(cluster_num == FAT16_CLUSTER_FREE ||
 399              		.loc 1 708 0
 400 02c4 0800000A 		beq	.L28
 711:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
 401              		.loc 1 711 0
 402 02c8 030050E1 		cmp	r0, r3
 710:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX) ||
 403              		.loc 1 710 0
 404 02cc 102080E2 		add	r2, r0, #16
 711:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
 405              		.loc 1 711 0
 406 02d0 0030A093 		movls	r3, #0
 407 02d4 0130A083 		movhi	r3, #1
 710:../Library/sdfat/fat16.c ****        (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX) ||
 408              		.loc 1 710 0
 409 02d8 0228A0E1 		mov	r2, r2, asl #16
 410 02dc 060852E3 		cmp	r2, #393216
 411 02e0 01308393 		orrls	r3, r3, #1
 713:../Library/sdfat/fat16.c **** 	return 0;
 412              		.loc 1 713 0
 413 02e4 000053E3 		cmp	r3, #0
 414 02e8 0000A013 		movne	r0, #0
 415              	.L28:
 416              	.LBE40:
 417              	.LBE39:
 716:../Library/sdfat/fat16.c **** }
 418              		.loc 1 716 0
 419 02ec 1840BDE8 		ldmfd	sp!, {r3, r4, lr}
 420 02f0 1EFF2FE1 		bx	lr
 421              	.L35:
 422              		.align	2
 423              	.L34:
 424 02f4 F7FF0000 		.word	65527
 425              		.cfi_endproc
 426              	.LFE9:
 428              		.align	2
 430              	fat16_free_clusters:
 431              	.LFB11:
 823:../Library/sdfat/fat16.c **** {
 432              		.loc 1 823 0
 433              		.cfi_startproc
 434              		@ Function supports interworking.
 435              		@ args = 0, pretend = 0, frame = 4
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              	.LVL37:
 825:../Library/sdfat/fat16.c ****         if(!fs || cluster_num < 2)
 438              		.loc 1 825 0
 439 02f8 000050E3 		cmp	r0, #0
 440 02fc 01005113 		cmpne	r1, #1
 823:../Library/sdfat/fat16.c **** {
 441              		.loc 1 823 0
 442 0300 F1452DE9 		stmfd	sp!, {r0, r4, r5, r6, r7, r8, sl, lr}
 443              	.LCFI3:
 444              		.cfi_def_cfa_offset 32
 445              		.cfi_offset 14, -4
 446              		.cfi_offset 10, -8
 447              		.cfi_offset 8, -12
 448              		.cfi_offset 7, -16
 449              		.cfi_offset 6, -20
 450              		.cfi_offset 5, -24
 451              		.cfi_offset 4, -28
 452              		.cfi_offset 0, -32
 823:../Library/sdfat/fat16.c **** {
 453              		.loc 1 823 0
 454 0304 0140A0E1 		mov	r4, r1
 825:../Library/sdfat/fat16.c ****         if(!fs || cluster_num < 2)
 455              		.loc 1 825 0
 456 0308 0050A0E1 		mov	r5, r0
 457 030c 0060A083 		movhi	r6, #0
 458 0310 0160A093 		movls	r6, #1
 459 0314 2200009A 		bls	.L41
 460              	.LVL38:
 461              	.LBB44:
 462              	.LBB45:
 828:../Library/sdfat/fat16.c ****         uint32_t fat_offset = fs->header.fat_offset;
 463              		.loc 1 828 0
 464 0318 088090E5 		ldr	r8, [r0, #8]
 465              	.LVL39:
 466              	.LBB46:
 848:../Library/sdfat/fat16.c ****             if((cluster_num_next >= FAT16_CLUSTER_LAST_MIN) &&
 467              		.loc 1 848 0
 468 031c 8CA09FE5 		ldr	sl, .L47
 469              	.LVL40:
 470              	.L40:
 832:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(fat_offset + 2 * cluster_num, buffer, 2))
 471              		.loc 1 832 0
 472 0320 847088E0 		add	r7, r8, r4, asl #1
 473 0324 003095E5 		ldr	r3, [r5, #0]
 474 0328 0700A0E1 		mov	r0, r7
 475 032c 0D10A0E1 		mov	r1, sp
 476 0330 0220A0E3 		mov	r2, #2
 477 0334 00C093E5 		ldr	ip, [r3, #0]
 478 0338 0FE0A0E1 		mov	lr, pc
 479 033c 1CFF2FE1 		bx	ip
 480 0340 000050E3 		cmp	r0, #0
 481 0344 1700000A 		beq	.L37
 837:../Library/sdfat/fat16.c ****             ((uint16_t) buffer[1] << 8);
 482              		.loc 1 837 0
 483 0348 0140DDE5 		ldrb	r4, [sp, #1]	@ zero_extendqisi2
 836:../Library/sdfat/fat16.c ****             uint16_t cluster_num_next = ((uint16_t) buffer[0]) |
 484              		.loc 1 836 0
 485 034c 0030DDE5 		ldrb	r3, [sp, #0]	@ zero_extendqisi2
 486              	.LVL41:
 839:../Library/sdfat/fat16.c ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 487              		.loc 1 839 0
 488 0350 044493E1 		orrs	r4, r3, r4, asl #8
 489              	.LVL42:
 490 0354 1000000A 		beq	.L43
 841:../Library/sdfat/fat16.c ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 491              		.loc 1 841 0
 492 0358 103084E2 		add	r3, r4, #16
 493 035c 0338A0E1 		mov	r3, r3, asl #16
 494 0360 070853E3 		cmp	r3, #458752
 495 0364 0E00009A 		bls	.L41
 852:../Library/sdfat/fat16.c ****             cluster_num_next = 0;
 496              		.loc 1 852 0
 497 0368 0A0054E1 		cmp	r4, sl
 498 036c 0040A083 		movhi	r4, #0
 499              	.LVL43:
 855:../Library/sdfat/fat16.c ****             buffer[0] = FAT16_CLUSTER_FREE & 0xff;
 500              		.loc 1 855 0
 501 0370 0060CDE5 		strb	r6, [sp, #0]
 856:../Library/sdfat/fat16.c ****             buffer[1] = (FAT16_CLUSTER_FREE >> 8) & 0xff;
 502              		.loc 1 856 0
 503 0374 0160CDE5 		strb	r6, [sp, #1]
 857:../Library/sdfat/fat16.c ****             fs->partition->device_write(fat_offset + 2 * cluster_num, buffer, 2);
 504              		.loc 1 857 0
 505 0378 003095E5 		ldr	r3, [r5, #0]
 506 037c 0700A0E1 		mov	r0, r7
 507 0380 0D10A0E1 		mov	r1, sp
 508 0384 0220A0E3 		mov	r2, #2
 509 0388 08C093E5 		ldr	ip, [r3, #8]
 510 038c 0FE0A0E1 		mov	lr, pc
 511 0390 1CFF2FE1 		bx	ip
 512              	.LVL44:
 513              	.LBE46:
 830:../Library/sdfat/fat16.c ****         while(cluster_num)
 514              		.loc 1 830 0
 515 0394 000054E3 		cmp	r4, #0
 516 0398 E0FFFF1A 		bne	.L40
 517              	.LVL45:
 518              	.L43:
 519              	.LBB47:
 840:../Library/sdfat/fat16.c ****                 return 1;
 520              		.loc 1 840 0
 521 039c 0100A0E3 		mov	r0, #1
 522 03a0 000000EA 		b	.L37
 523              	.LVL46:
 524              	.L41:
 525              	.LBE47:
 526              	.LBE45:
 527              	.LBE44:
 826:../Library/sdfat/fat16.c ****             return 0;
 528              		.loc 1 826 0
 529 03a4 0000A0E3 		mov	r0, #0
 530              	.L37:
 870:../Library/sdfat/fat16.c **** }
 531              		.loc 1 870 0
 532 03a8 F845BDE8 		ldmfd	sp!, {r3, r4, r5, r6, r7, r8, sl, lr}
 533 03ac 1EFF2FE1 		bx	lr
 534              	.L48:
 535              		.align	2
 536              	.L47:
 537 03b0 F7FF0000 		.word	65527
 538              		.cfi_endproc
 539              	.LFE11:
 541              		.align	2
 543              	fat16_append_clusters:
 544              	.LFB10:
 730:../Library/sdfat/fat16.c **** {
 545              		.loc 1 730 0
 546              		.cfi_startproc
 547              		@ Function supports interworking.
 548              		@ args = 0, pretend = 0, frame = 20
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL47:
 551 03b4 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 552              	.LCFI4:
 553              		.cfi_def_cfa_offset 36
 554              		.cfi_offset 14, -4
 555              		.cfi_offset 11, -8
 556              		.cfi_offset 10, -12
 557              		.cfi_offset 9, -16
 558              		.cfi_offset 8, -20
 559              		.cfi_offset 7, -24
 560              		.cfi_offset 6, -28
 561              		.cfi_offset 5, -32
 562              		.cfi_offset 4, -36
 732:../Library/sdfat/fat16.c ****         if(!fs)
 563              		.loc 1 732 0
 564 03b8 006050E2 		subs	r6, r0, #0
 730:../Library/sdfat/fat16.c **** {
 565              		.loc 1 730 0
 566 03bc 14D04DE2 		sub	sp, sp, #20
 567              	.LCFI5:
 568              		.cfi_def_cfa_offset 56
 730:../Library/sdfat/fat16.c **** {
 569              		.loc 1 730 0
 570 03c0 01B0A0E1 		mov	fp, r1
 571 03c4 02A0A0E1 		mov	sl, r2
 733:../Library/sdfat/fat16.c ****             return 0;
 572              		.loc 1 733 0
 573 03c8 0640A001 		moveq	r4, r6
 732:../Library/sdfat/fat16.c ****         if(!fs)
 574              		.loc 1 732 0
 575 03cc 4E00000A 		beq	.L50
 735:../Library/sdfat/fat16.c ****         device_read_t device_read = fs->partition->device_read;
 576              		.loc 1 735 0
 577 03d0 003096E5 		ldr	r3, [r6, #0]
 578 03d4 002093E5 		ldr	r2, [r3, #0]
 579              	.LVL48:
 736:../Library/sdfat/fat16.c ****         device_write_t device_write = fs->partition->device_write;
 580              		.loc 1 736 0
 581 03d8 083093E5 		ldr	r3, [r3, #8]
 582 03dc 00308DE5 		str	r3, [sp, #0]
 737:../Library/sdfat/fat16.c ****         uint32_t fat_offset = fs->header.fat_offset;
 583              		.loc 1 737 0
 584 03e0 083096E5 		ldr	r3, [r6, #8]
 585 03e4 04308DE5 		str	r3, [sp, #4]
 738:../Library/sdfat/fat16.c ****         uint16_t cluster_max = fs->header.fat_size / 2;
 586              		.loc 1 738 0
 587 03e8 0C3096E5 		ldr	r3, [r6, #12]
 588 03ec 8337A0E1 		mov	r3, r3, asl #15
 589 03f0 2338A0E1 		mov	r3, r3, lsr #16
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 590              		.loc 1 743 0
 591 03f4 0050A0E3 		mov	r5, #0
 735:../Library/sdfat/fat16.c ****         device_read_t device_read = fs->partition->device_read;
 592              		.loc 1 735 0
 593 03f8 08208DE5 		str	r2, [sp, #8]
 594              	.LVL49:
 738:../Library/sdfat/fat16.c ****         uint16_t cluster_max = fs->header.fat_size / 2;
 595              		.loc 1 738 0
 596 03fc 0C308DE5 		str	r3, [sp, #12]
 597              	.LVL50:
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 598              		.loc 1 743 0
 599 0400 04809DE5 		ldr	r8, [sp, #4]
 740:../Library/sdfat/fat16.c ****         uint16_t count_left = count;
 600              		.loc 1 740 0
 601 0404 0A70A0E1 		mov	r7, sl
 739:../Library/sdfat/fat16.c ****         uint16_t cluster_next = 0;
 602              		.loc 1 739 0
 603 0408 0540A0E1 		mov	r4, r5
 755:../Library/sdfat/fat16.c ****                     buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 604              		.loc 1 755 0
 605 040c 0090E0E3 		mvn	r9, #0
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 606              		.loc 1 743 0
 607 0410 240000EA 		b	.L51
 608              	.LVL51:
 609              	.L57:
 745:../Library/sdfat/fat16.c ****             if(!device_read(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 610              		.loc 1 745 0
 611 0414 0800A0E1 		mov	r0, r8
 612 0418 10108DE2 		add	r1, sp, #16
 613 041c 0220A0E3 		mov	r2, #2
 614 0420 08309DE5 		ldr	r3, [sp, #8]
 615 0424 0FE0A0E1 		mov	lr, pc
 616 0428 13FF2FE1 		bx	r3
 617 042c 000050E3 		cmp	r0, #0
 618 0430 3400000A 		beq	.L60
 749:../Library/sdfat/fat16.c ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 619              		.loc 1 749 0
 620 0434 1030DDE5 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 621 0438 000053E3 		cmp	r3, #0
 622 043c 1500001A 		bne	.L52
 749:../Library/sdfat/fat16.c ****             if(buffer[0] == (FAT16_CLUSTER_FREE & 0xff) &&
 623              		.loc 1 749 0 is_stmt 0 discriminator 1
 624 0440 1130DDE5 		ldrb	r3, [sp, #17]	@ zero_extendqisi2
 625 0444 000053E3 		cmp	r3, #0
 626 0448 1200001A 		bne	.L52
 753:../Library/sdfat/fat16.c ****                 if(count_left == count)
 627              		.loc 1 753 0 is_stmt 1
 628 044c 0A0057E1 		cmp	r7, sl
 761:../Library/sdfat/fat16.c ****                     buffer[1] = (cluster_next >> 8) & 0xff;
 629              		.loc 1 761 0
 630 0450 2434A011 		movne	r3, r4, lsr #8
 631 0454 1130CD15 		strneb	r3, [sp, #17]
 755:../Library/sdfat/fat16.c ****                     buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 632              		.loc 1 755 0
 633 0458 1090CD05 		streqb	r9, [sp, #16]
 756:../Library/sdfat/fat16.c ****                     buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 634              		.loc 1 756 0
 635 045c 1190CD05 		streqb	r9, [sp, #17]
 760:../Library/sdfat/fat16.c ****                     buffer[0] = cluster_next & 0xff;
 636              		.loc 1 760 0
 637 0460 1040CD15 		strneb	r4, [sp, #16]
 764:../Library/sdfat/fat16.c ****                 if(!device_write(fat_offset + 2 * cluster_new, buffer, sizeof(buffer)))
 638              		.loc 1 764 0
 639 0464 0800A0E1 		mov	r0, r8
 640 0468 10108DE2 		add	r1, sp, #16
 641 046c 0220A0E3 		mov	r2, #2
 642 0470 00309DE5 		ldr	r3, [sp, #0]
 643 0474 0FE0A0E1 		mov	lr, pc
 644 0478 13FF2FE1 		bx	r3
 645 047c 000050E3 		cmp	r0, #0
 646 0480 0B00000A 		beq	.L55
 647              	.LVL52:
 768:../Library/sdfat/fat16.c ****                 if(--count_left == 0)
 648              		.loc 1 768 0
 649 0484 017047E2 		sub	r7, r7, #1
 650              	.LVL53:
 651 0488 0778A0E1 		mov	r7, r7, asl #16
 652              	.LVL54:
 653 048c 2778B0E1 		movs	r7, r7, lsr #16
 654              	.LVL55:
 655 0490 0540A0E1 		mov	r4, r5
 656 0494 0800000A 		beq	.L56
 657              	.LVL56:
 658              	.L52:
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 659              		.loc 1 743 0
 660 0498 015085E2 		add	r5, r5, #1
 661              	.LVL57:
 662 049c 0558A0E1 		mov	r5, r5, asl #16
 663              	.LVL58:
 664 04a0 2558A0E1 		mov	r5, r5, lsr #16
 665              	.LVL59:
 666 04a4 028088E2 		add	r8, r8, #2
 667              	.LVL60:
 668              	.L51:
 743:../Library/sdfat/fat16.c ****         for(cluster_new = 0; cluster_new < cluster_max; ++cluster_new)
 669              		.loc 1 743 0 is_stmt 0 discriminator 1
 670 04a8 0C309DE5 		ldr	r3, [sp, #12]
 671 04ac 030055E1 		cmp	r5, r3
 672 04b0 D7FFFF3A 		bcc	.L57
 673              	.L55:
 775:../Library/sdfat/fat16.c ****             if(count_left > 0)
 674              		.loc 1 775 0 is_stmt 1
 675 04b4 000057E3 		cmp	r7, #0
 676 04b8 0D00001A 		bne	.L58
 677              	.LVL61:
 678              	.L56:
 781:../Library/sdfat/fat16.c ****             if(cluster_num >= 2)
 679              		.loc 1 781 0
 680 04bc 01005BE3 		cmp	fp, #1
 681 04c0 1100009A 		bls	.L50
 784:../Library/sdfat/fat16.c ****                 buffer[1] = (cluster_next >> 8) & 0xff;
 682              		.loc 1 784 0
 683 04c4 2434A0E1 		mov	r3, r4, lsr #8
 684 04c8 1130CDE5 		strb	r3, [sp, #17]
 785:../Library/sdfat/fat16.c ****                 if(!device_write(fat_offset + 2 * cluster_num, buffer, sizeof(buffer)))
 685              		.loc 1 785 0
 686 04cc 04309DE5 		ldr	r3, [sp, #4]
 783:../Library/sdfat/fat16.c ****                 buffer[0] = cluster_next & 0xff;
 687              		.loc 1 783 0
 688 04d0 1040CDE5 		strb	r4, [sp, #16]
 785:../Library/sdfat/fat16.c ****                 if(!device_write(fat_offset + 2 * cluster_num, buffer, sizeof(buffer)))
 689              		.loc 1 785 0
 690 04d4 8B0083E0 		add	r0, r3, fp, asl #1
 691 04d8 10108DE2 		add	r1, sp, #16
 692 04dc 0220A0E3 		mov	r2, #2
 693 04e0 00309DE5 		ldr	r3, [sp, #0]
 694 04e4 0FE0A0E1 		mov	lr, pc
 695 04e8 13FF2FE1 		bx	r3
 696 04ec 000050E3 		cmp	r0, #0
 697 04f0 0500001A 		bne	.L50
 698              	.L58:
 797:../Library/sdfat/fat16.c ****         fat16_free_clusters(fs, cluster_next);
 699              		.loc 1 797 0
 700 04f4 0410A0E1 		mov	r1, r4
 701 04f8 0600A0E1 		mov	r0, r6
 702 04fc 7DFFFFEB 		bl	fat16_free_clusters
 799:../Library/sdfat/fat16.c ****         return 0;
 703              		.loc 1 799 0
 704 0500 0040A0E3 		mov	r4, #0
 705 0504 000000EA 		b	.L50
 706              	.LVL62:
 707              	.L60:
 746:../Library/sdfat/fat16.c ****                 return 0;
 708              		.loc 1 746 0
 709 0508 0040A0E1 		mov	r4, r0
 710              	.LVL63:
 711              	.L50:
 803:../Library/sdfat/fat16.c **** }
 712              		.loc 1 803 0
 713 050c 0400A0E1 		mov	r0, r4
 714 0510 14D08DE2 		add	sp, sp, #20
 715 0514 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 716 0518 1EFF2FE1 		bx	lr
 717              		.cfi_endproc
 718              	.LFE10:
 720              		.global	__divsi3
 721              		.align	2
 723              	fat16_write_dir_entry:
 724              	.LFB24:
1468:../Library/sdfat/fat16.c **** {
 725              		.loc 1 1468 0
 726              		.cfi_startproc
 727              		@ Function supports interworking.
 728              		@ args = 0, pretend = 0, frame = 32
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              	.LVL64:
 731 051c F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 732              	.LCFI6:
 733              		.cfi_def_cfa_offset 36
 734              		.cfi_offset 14, -4
 735              		.cfi_offset 11, -8
 736              		.cfi_offset 10, -12
 737              		.cfi_offset 9, -16
 738              		.cfi_offset 8, -20
 739              		.cfi_offset 7, -24
 740              		.cfi_offset 6, -28
 741              		.cfi_offset 5, -32
 742              		.cfi_offset 4, -36
1470:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 743              		.loc 1 1470 0
 744 0520 000050E3 		cmp	r0, #0
 745 0524 00005113 		cmpne	r1, #0
1468:../Library/sdfat/fat16.c **** {
 746              		.loc 1 1468 0
 747 0528 20D04DE2 		sub	sp, sp, #32
 748              	.LCFI7:
 749              		.cfi_def_cfa_offset 68
1470:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 750              		.loc 1 1470 0
 751 052c 0140A0E1 		mov	r4, r1
1471:../Library/sdfat/fat16.c ****             return 0;
 752              		.loc 1 1471 0
 753 0530 0000A003 		moveq	r0, #0
 754              	.LVL65:
1470:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 755              		.loc 1 1470 0
 756 0534 9200000A 		beq	.L63
 757              	.LVL66:
 758              	.LBB53:
 759              	.LBB54:
1473:../Library/sdfat/fat16.c ****         device_write_t device_write = fs->partition->device_write;
 760              		.loc 1 1473 0
 761 0538 003090E5 		ldr	r3, [r0, #0]
1475:../Library/sdfat/fat16.c ****         uint8_t name_len = strlen(dir_entry->long_name);
 762              		.loc 1 1475 0
 763 053c 0100A0E1 		mov	r0, r1
 764              	.LVL67:
1473:../Library/sdfat/fat16.c ****         device_write_t device_write = fs->partition->device_write;
 765              		.loc 1 1473 0
 766 0540 08A093E5 		ldr	sl, [r3, #8]
 767              	.LVL68:
1474:../Library/sdfat/fat16.c ****         uint32_t offset = dir_entry->entry_offset;
 768              		.loc 1 1474 0
 769 0544 286091E5 		ldr	r6, [r1, #40]
 770              	.LVL69:
1475:../Library/sdfat/fat16.c ****         uint8_t name_len = strlen(dir_entry->long_name);
 771              		.loc 1 1475 0
 772 0548 FEFFFFEB 		bl	strlen
 773              	.LVL70:
 774 054c FF5000E2 		and	r5, r0, #255
 775              	.LVL71:
1476:../Library/sdfat/fat16.c ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
 776              		.loc 1 1476 0
 777 0550 0D10A0E3 		mov	r1, #13
 778 0554 0C0085E2 		add	r0, r5, #12
 779 0558 FEFFFFEB 		bl	__divsi3
1482:../Library/sdfat/fat16.c ****         memset(&buffer[0], ' ', 11);
 780              		.loc 1 1482 0
 781 055c 2010A0E3 		mov	r1, #32
 782 0560 0B20A0E3 		mov	r2, #11
1476:../Library/sdfat/fat16.c ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
 783              		.loc 1 1476 0
 784 0564 FF8000E2 		and	r8, r0, #255
 785              	.LVL72:
1482:../Library/sdfat/fat16.c ****         memset(&buffer[0], ' ', 11);
 786              		.loc 1 1482 0
 787 0568 0D00A0E1 		mov	r0, sp
 788 056c FEFFFFEB 		bl	memset
1483:../Library/sdfat/fat16.c ****         char* name_ext = strrchr(dir_entry->long_name, '.');
 789              		.loc 1 1483 0
 790 0570 0400A0E1 		mov	r0, r4
 791 0574 2E10A0E3 		mov	r1, #46
 792 0578 FEFFFFEB 		bl	strrchr
 793              	.LVL73:
1484:../Library/sdfat/fat16.c ****         if(name_ext)
 794              		.loc 1 1484 0
 795 057c 000050E3 		cmp	r0, #0
 796 0580 0B00000A 		beq	.L64
 797              	.LBB55:
1486:../Library/sdfat/fat16.c ****             ++name_ext;
 798              		.loc 1 1486 0
 799 0584 017080E2 		add	r7, r0, #1
 800              	.LVL74:
1488:../Library/sdfat/fat16.c ****             uint8_t name_ext_len = strlen(name_ext);
 801              		.loc 1 1488 0
 802 0588 0700A0E1 		mov	r0, r7
 803 058c FEFFFFEB 		bl	strlen
 804 0590 FF2000E2 		and	r2, r0, #255
 805              	.LVL75:
1489:../Library/sdfat/fat16.c ****             name_len -= name_ext_len + 1;
 806              		.loc 1 1489 0
 807 0594 0230E0E1 		mvn	r3, r2
 808 0598 035085E0 		add	r5, r5, r3
 809              	.LVL76:
1494:../Library/sdfat/fat16.c ****             memcpy(&buffer[8], name_ext, name_ext_len);
 810              		.loc 1 1494 0
 811 059c 08008DE2 		add	r0, sp, #8
 812 05a0 0710A0E1 		mov	r1, r7
 813 05a4 030052E3 		cmp	r2, #3
 814 05a8 0320A023 		movcs	r2, #3
 815              	.LVL77:
1489:../Library/sdfat/fat16.c ****             name_len -= name_ext_len + 1;
 816              		.loc 1 1489 0
 817 05ac FF5005E2 		and	r5, r5, #255
 818              	.LVL78:
1494:../Library/sdfat/fat16.c ****             memcpy(&buffer[8], name_ext, name_ext_len);
 819              		.loc 1 1494 0
 820 05b0 FEFFFFEB 		bl	memcpy
 821              	.LVL79:
 822              	.L64:
 823              	.LBE55:
1497:../Library/sdfat/fat16.c ****         if(name_len <= 8)
 824              		.loc 1 1497 0
 825 05b4 080055E3 		cmp	r5, #8
1499:../Library/sdfat/fat16.c ****             memcpy(buffer, dir_entry->long_name, name_len);
 826              		.loc 1 1499 0
 827 05b8 0D00A0E1 		mov	r0, sp
 828 05bc 0410A0E1 		mov	r1, r4
1497:../Library/sdfat/fat16.c ****         if(name_len <= 8)
 829              		.loc 1 1497 0
 830 05c0 0200008A 		bhi	.L65
1499:../Library/sdfat/fat16.c ****             memcpy(buffer, dir_entry->long_name, name_len);
 831              		.loc 1 1499 0
 832 05c4 0520A0E1 		mov	r2, r5
 833 05c8 FEFFFFEB 		bl	memcpy
 834 05cc 0C0000EA 		b	.L66
 835              	.L65:
 836              	.LBB56:
1503:../Library/sdfat/fat16.c ****             memcpy(buffer, dir_entry->long_name, 8);
 837              		.loc 1 1503 0
 838 05d0 0820A0E3 		mov	r2, #8
 839 05d4 FEFFFFEB 		bl	memcpy
1508:../Library/sdfat/fat16.c ****             uint8_t num = dir_entry->cluster & 0xff;
 840              		.loc 1 1508 0
 841 05d8 2230D4E5 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 842              	.LVL80:
1510:../Library/sdfat/fat16.c ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 843              		.loc 1 1510 0
 844 05dc 9F0053E3 		cmp	r3, #159
 845 05e0 2322A0E1 		mov	r2, r3, lsr #4
1511:../Library/sdfat/fat16.c ****             num &= 0x0f;
 846              		.loc 1 1511 0
 847 05e4 0F3003E2 		and	r3, r3, #15
 848              	.LVL81:
1510:../Library/sdfat/fat16.c ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 849              		.loc 1 1510 0
 850 05e8 30208292 		addls	r2, r2, #48
 851 05ec 61208282 		addhi	r2, r2, #97
1512:../Library/sdfat/fat16.c ****             buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
 852              		.loc 1 1512 0
 853 05f0 090053E3 		cmp	r3, #9
 854 05f4 30308392 		addls	r3, r3, #48
 855              	.LVL82:
 856 05f8 61308382 		addhi	r3, r3, #97
1510:../Library/sdfat/fat16.c ****             buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 857              		.loc 1 1510 0
 858 05fc 0620CDE5 		strb	r2, [sp, #6]
1512:../Library/sdfat/fat16.c ****             buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
 859              		.loc 1 1512 0
 860 0600 0730CDE5 		strb	r3, [sp, #7]
 861              	.L66:
 862              	.LBE56:
1516:../Library/sdfat/fat16.c ****         memset(&buffer[11], 0, sizeof(buffer) - 11);
 863              		.loc 1 1516 0
 864 0604 0010A0E3 		mov	r1, #0
 865 0608 1520A0E3 		mov	r2, #21
 866 060c 0B008DE2 		add	r0, sp, #11
 867 0610 FEFFFFEB 		bl	memset
1517:../Library/sdfat/fat16.c ****         buffer[0x0b] = dir_entry->attributes;
 868              		.loc 1 1517 0
 869 0614 2030D4E5 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 870 0618 0B30CDE5 		strb	r3, [sp, #11]
1572:../Library/sdfat/fat16.c ****         buffer[0x1a] = (dir_entry->cluster >> 0) & 0xff;
 871              		.loc 1 1572 0
 872 061c B232D4E1 		ldrh	r3, [r4, #34]
 873 0620 1A30CDE5 		strb	r3, [sp, #26]
1573:../Library/sdfat/fat16.c ****         buffer[0x1b] = (dir_entry->cluster >> 8) & 0xff;
 874              		.loc 1 1573 0
 875 0624 2334A0E1 		mov	r3, r3, lsr #8
 876 0628 1B30CDE5 		strb	r3, [sp, #27]
1574:../Library/sdfat/fat16.c ****         buffer[0x1c] = (dir_entry->file_size >> 0) & 0xff;
 877              		.loc 1 1574 0
 878 062c 243094E5 		ldr	r3, [r4, #36]
1575:../Library/sdfat/fat16.c ****         buffer[0x1d] = (dir_entry->file_size >> 8) & 0xff;
 879              		.loc 1 1575 0
 880 0630 2324A0E1 		mov	r2, r3, lsr #8
1574:../Library/sdfat/fat16.c ****         buffer[0x1c] = (dir_entry->file_size >> 0) & 0xff;
 881              		.loc 1 1574 0
 882 0634 1C30CDE5 		strb	r3, [sp, #28]
1575:../Library/sdfat/fat16.c ****         buffer[0x1d] = (dir_entry->file_size >> 8) & 0xff;
 883              		.loc 1 1575 0
 884 0638 1D20CDE5 		strb	r2, [sp, #29]
1576:../Library/sdfat/fat16.c ****         buffer[0x1e] = (dir_entry->file_size >> 16) & 0xff;
 885              		.loc 1 1576 0
 886 063c 2328A0E1 		mov	r2, r3, lsr #16
1577:../Library/sdfat/fat16.c ****         buffer[0x1f] = (dir_entry->file_size >> 24) & 0xff;
 887              		.loc 1 1577 0
 888 0640 233CA0E1 		mov	r3, r3, lsr #24
1576:../Library/sdfat/fat16.c ****         buffer[0x1e] = (dir_entry->file_size >> 16) & 0xff;
 889              		.loc 1 1576 0
 890 0644 1E20CDE5 		strb	r2, [sp, #30]
1577:../Library/sdfat/fat16.c ****         buffer[0x1f] = (dir_entry->file_size >> 24) & 0xff;
 891              		.loc 1 1577 0
 892 0648 1F30CDE5 		strb	r3, [sp, #31]
1580:../Library/sdfat/fat16.c ****         if(!device_write(offset + (uint32_t) lfn_entry_count * 32, buffer, sizeof(buffer)))
 893              		.loc 1 1580 0
 894 064c 880286E0 		add	r0, r6, r8, asl #5
 895 0650 0D10A0E1 		mov	r1, sp
 896 0654 2020A0E3 		mov	r2, #32
 897 0658 0FE0A0E1 		mov	lr, pc
 898 065c 1AFF2FE1 		bx	sl
 899 0660 000050E3 		cmp	r0, #0
 900 0664 4600000A 		beq	.L63
1584:../Library/sdfat/fat16.c ****         uint8_t checksum = buffer[0];
 901              		.loc 1 1584 0
 902 0668 0070DDE5 		ldrb	r7, [sp, #0]	@ zero_extendqisi2
 903              	.LVL83:
 904 066c 0D30A0E1 		mov	r3, sp
1467:../Library/sdfat/fat16.c **** uint8_t fat16_write_dir_entry(const struct fat16_fs_struct* fs, const struct fat16_dir_entry_struct
 905              		.loc 1 1467 0
 906 0670 0A208DE2 		add	r2, sp, #10
 907              	.LVL84:
 908              	.L72:
1587:../Library/sdfat/fat16.c ****             checksum = ((checksum >> 1) | (checksum << 7)) + buffer[i];
 909              		.loc 1 1587 0
 910 0674 A710A0E1 		mov	r1, r7, lsr #1
 911 0678 877381E1 		orr	r7, r1, r7, asl #7
 912 067c 0110F3E5 		ldrb	r1, [r3, #1]!	@ zero_extendqisi2
 913 0680 017087E0 		add	r7, r7, r1
1586:../Library/sdfat/fat16.c ****         for(i = 1; i < 11; ++i)
 914              		.loc 1 1586 0
 915 0684 020053E1 		cmp	r3, r2
1587:../Library/sdfat/fat16.c ****             checksum = ((checksum >> 1) | (checksum << 7)) + buffer[i];
 916              		.loc 1 1587 0
 917 0688 FF7007E2 		and	r7, r7, #255
 918              	.LVL85:
1586:../Library/sdfat/fat16.c ****         for(i = 1; i < 11; ++i)
 919              		.loc 1 1586 0
 920 068c F8FFFF1A 		bne	.L72
1476:../Library/sdfat/fat16.c ****         uint8_t lfn_entry_count = (name_len + 12) / 13;
 921              		.loc 1 1476 0
 922 0690 0850A0E1 		mov	r5, r8
 923              	.LVL86:
 924              	.LBB57:
1594:../Library/sdfat/fat16.c ****             memset(&buffer[0x01], 0xff, 10);
 925              		.loc 1 1594 0
 926 0694 01908DE2 		add	r9, sp, #1
1595:../Library/sdfat/fat16.c ****             memset(&buffer[0x0e], 0xff, 12);
 927              		.loc 1 1595 0
 928 0698 0EB08DE2 		add	fp, sp, #14
 929 069c 350000EA 		b	.L73
 930              	.LVL87:
 931              	.L80:
1593:../Library/sdfat/fat16.c ****             memset(buffer, 0, sizeof(buffer));
 932              		.loc 1 1593 0
 933 06a0 0010A0E3 		mov	r1, #0
 934 06a4 2020A0E3 		mov	r2, #32
 935 06a8 0D00A0E1 		mov	r0, sp
 936 06ac FEFFFFEB 		bl	memset
1594:../Library/sdfat/fat16.c ****             memset(&buffer[0x01], 0xff, 10);
 937              		.loc 1 1594 0
 938 06b0 FF10A0E3 		mov	r1, #255
 939 06b4 0A20A0E3 		mov	r2, #10
 940 06b8 0900A0E1 		mov	r0, r9
 941 06bc FEFFFFEB 		bl	memset
1595:../Library/sdfat/fat16.c ****             memset(&buffer[0x0e], 0xff, 12);
 942              		.loc 1 1595 0
 943 06c0 FF10A0E3 		mov	r1, #255
 944 06c4 0C20A0E3 		mov	r2, #12
 945 06c8 0B00A0E1 		mov	r0, fp
 946 06cc FEFFFFEB 		bl	memset
1596:../Library/sdfat/fat16.c ****             memset(&buffer[0x1c], 0xff, 4);
 947              		.loc 1 1596 0
 948 06d0 0030E0E3 		mvn	r3, #0
1599:../Library/sdfat/fat16.c ****             if(lfn_entry == lfn_entry_count)
 949              		.loc 1 1599 0
 950 06d4 080055E1 		cmp	r5, r8
1596:../Library/sdfat/fat16.c ****             memset(&buffer[0x1c], 0xff, 4);
 951              		.loc 1 1596 0
 952 06d8 1C308DE5 		str	r3, [sp, #28]
1600:../Library/sdfat/fat16.c ****                 buffer[0x00] |= FAT16_DIRENTRY_LFNLAST;
 953              		.loc 1 1600 0
 954 06dc 40308503 		orreq	r3, r5, #64
1598:../Library/sdfat/fat16.c ****             buffer[0x00] = lfn_entry;
 955              		.loc 1 1598 0
 956 06e0 0050CDE5 		strb	r5, [sp, #0]
1603:../Library/sdfat/fat16.c ****             const char* long_name_curr = dir_entry->long_name + (lfn_entry - 1) * 13;
 957              		.loc 1 1603 0
 958 06e4 0D20A0E3 		mov	r2, #13
1600:../Library/sdfat/fat16.c ****                 buffer[0x00] |= FAT16_DIRENTRY_LFNLAST;
 959              		.loc 1 1600 0
 960 06e8 0030CD05 		streqb	r3, [sp, #0]
 961              	.LVL88:
1603:../Library/sdfat/fat16.c ****             const char* long_name_curr = dir_entry->long_name + (lfn_entry - 1) * 13;
 962              		.loc 1 1603 0
 963 06ec 013045E2 		sub	r3, r5, #1
 964 06f0 934222E0 		mla	r2, r3, r2, r4
1608:../Library/sdfat/fat16.c ****                 buffer[i++] = 0;
 965              		.loc 1 1608 0
 966 06f4 0010A0E3 		mov	r1, #0
1604:../Library/sdfat/fat16.c ****             i = 1;
 967              		.loc 1 1604 0
 968 06f8 0130A0E3 		mov	r3, #1
 969              	.LVL89:
 970              	.L79:
1607:../Library/sdfat/fat16.c ****                 buffer[i++] = *long_name_curr;
 971              		.loc 1 1607 0
 972 06fc 01C0D2E4 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 973 0700 20E08DE2 		add	lr, sp, #32
 974 0704 03008EE0 		add	r0, lr, r3
 975 0708 20C040E5 		strb	ip, [r0, #-32]
 976              	.LVL90:
 977 070c 010083E2 		add	r0, r3, #1
1608:../Library/sdfat/fat16.c ****                 buffer[i++] = 0;
 978              		.loc 1 1608 0
 979 0710 023083E2 		add	r3, r3, #2
 980              	.LVL91:
 981 0714 FF3003E2 		and	r3, r3, #255
 982              	.LVL92:
 983 0718 FF0000E2 		and	r0, r0, #255
 984 071c 00008EE0 		add	r0, lr, r0
1610:../Library/sdfat/fat16.c ****                 switch(i)
 985              		.loc 1 1610 0
 986 0720 0B0053E3 		cmp	r3, #11
1608:../Library/sdfat/fat16.c ****                 buffer[i++] = 0;
 987              		.loc 1 1608 0
 988 0724 201040E5 		strb	r1, [r0, #-32]
1613:../Library/sdfat/fat16.c ****                         i = 0x0e;
 989              		.loc 1 1613 0
 990 0728 0E30A003 		moveq	r3, #14
 991              	.LVL93:
1610:../Library/sdfat/fat16.c ****                 switch(i)
 992              		.loc 1 1610 0
 993 072c 0100000A 		beq	.L75
1616:../Library/sdfat/fat16.c ****                         i = 0x1c;
 994              		.loc 1 1616 0
 995 0730 1A0053E3 		cmp	r3, #26
 996 0734 1C30A003 		moveq	r3, #28
 997              	.L75:
 998              	.LVL94:
1620:../Library/sdfat/fat16.c ****                 if(!*long_name_curr++)
 999              		.loc 1 1620 0
 1000 0738 010052E5 		ldrb	r0, [r2, #-1]	@ zero_extendqisi2
 1001 073c 000050E3 		cmp	r0, #0
 1002 0740 0100000A 		beq	.L78
1605:../Library/sdfat/fat16.c ****             while(i < 0x1f)
 1003              		.loc 1 1605 0
 1004 0744 1E0053E3 		cmp	r3, #30
 1005 0748 EBFFFF9A 		bls	.L79
 1006              	.L78:
1625:../Library/sdfat/fat16.c ****             buffer[0x0b] = 0x0f;
 1007              		.loc 1 1625 0
 1008 074c 0F30A0E3 		mov	r3, #15
 1009              	.LVL95:
1631:../Library/sdfat/fat16.c ****             device_write(offset, buffer, sizeof(buffer));
 1010              		.loc 1 1631 0
 1011 0750 0600A0E1 		mov	r0, r6
1625:../Library/sdfat/fat16.c ****             buffer[0x0b] = 0x0f;
 1012              		.loc 1 1625 0
 1013 0754 0B30CDE5 		strb	r3, [sp, #11]
1628:../Library/sdfat/fat16.c ****             buffer[0x0d] = checksum;
 1014              		.loc 1 1628 0
 1015 0758 0D70CDE5 		strb	r7, [sp, #13]
1631:../Library/sdfat/fat16.c ****             device_write(offset, buffer, sizeof(buffer));
 1016              		.loc 1 1631 0
 1017 075c 0D10A0E1 		mov	r1, sp
 1018 0760 2020A0E3 		mov	r2, #32
 1019 0764 0FE0A0E1 		mov	lr, pc
 1020 0768 1AFF2FE1 		bx	sl
 1021              	.LBE57:
1591:../Library/sdfat/fat16.c ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 1022              		.loc 1 1591 0
 1023 076c 015045E2 		sub	r5, r5, #1
 1024              	.LVL96:
 1025              	.LBB58:
1633:../Library/sdfat/fat16.c ****             offset += sizeof(buffer);
 1026              		.loc 1 1633 0
 1027 0770 206086E2 		add	r6, r6, #32
 1028              	.LVL97:
 1029              	.LBE58:
1591:../Library/sdfat/fat16.c ****         for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 1030              		.loc 1 1591 0
 1031 0774 FF5005E2 		and	r5, r5, #255
 1032              	.LVL98:
 1033              	.L73:
 1034 0778 000055E3 		cmp	r5, #0
 1035 077c C7FFFF1A 		bne	.L80
1636:../Library/sdfat/fat16.c ****         return 1;
 1036              		.loc 1 1636 0
 1037 0780 0100A0E3 		mov	r0, #1
 1038              	.LVL99:
 1039              	.L63:
 1040              	.LBE54:
 1041              	.LBE53:
1641:../Library/sdfat/fat16.c **** }
 1042              		.loc 1 1641 0
 1043 0784 20D08DE2 		add	sp, sp, #32
 1044 0788 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1045 078c 1EFF2FE1 		bx	lr
 1046              		.cfi_endproc
 1047              	.LFE24:
 1049              		.global	__udivsi3
 1050              		.align	2
 1051              		.global	fat16_open
 1053              	fat16_open:
 1054              	.LFB0:
 203:../Library/sdfat/fat16.c **** {
 1055              		.loc 1 203 0
 1056              		.cfi_startproc
 1057              		@ Function supports interworking.
 1058              		@ args = 0, pretend = 0, frame = 48
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 1060              	.LVL100:
 1061 0790 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1062              	.LCFI8:
 1063              		.cfi_def_cfa_offset 36
 1064              		.cfi_offset 14, -4
 1065              		.cfi_offset 11, -8
 1066              		.cfi_offset 10, -12
 1067              		.cfi_offset 9, -16
 1068              		.cfi_offset 8, -20
 1069              		.cfi_offset 7, -24
 1070              		.cfi_offset 6, -28
 1071              		.cfi_offset 5, -32
 1072              		.cfi_offset 4, -36
 204:../Library/sdfat/fat16.c ****     if(!partition ||
 1073              		.loc 1 204 0
 1074 0794 006050E2 		subs	r6, r0, #0
 203:../Library/sdfat/fat16.c **** {
 1075              		.loc 1 203 0
 1076 0798 30D04DE2 		sub	sp, sp, #48
 1077              	.LCFI9:
 1078              		.cfi_def_cfa_offset 84
 211:../Library/sdfat/fat16.c ****     return 0;
 1079              		.loc 1 211 0
 1080 079c 0640A001 		moveq	r4, r6
 204:../Library/sdfat/fat16.c ****     if(!partition ||
 1081              		.loc 1 204 0
 1082 07a0 6E00000A 		beq	.L86
 204:../Library/sdfat/fat16.c ****     if(!partition ||
 1083              		.loc 1 204 0 is_stmt 0 discriminator 1
 1084 07a4 084096E5 		ldr	r4, [r6, #8]
 1085 07a8 000054E3 		cmp	r4, #0
 1086 07ac 6B00000A 		beq	.L86
 213:../Library/sdfat/fat16.c ****     struct fat16_fs_struct* fs = malloc(sizeof(*fs));
 1087              		.loc 1 213 0 is_stmt 1
 1088 07b0 1C00A0E3 		mov	r0, #28
 1089              	.LVL101:
 1090 07b4 FEFFFFEB 		bl	malloc
 1091              	.LVL102:
 214:../Library/sdfat/fat16.c ****     if(!fs)
 1092              		.loc 1 214 0
 1093 07b8 004050E2 		subs	r4, r0, #0
 1094 07bc 0200001A 		bne	.L87
 216:../Library/sdfat/fat16.c ****         rprintf("MALLOC FAILS\n\r");
 1095              		.loc 1 216 0
 1096 07c0 A8019FE5 		ldr	r0, .L92
 1097              	.LVL103:
 1098 07c4 FEFFFFEB 		bl	rprintf
 217:../Library/sdfat/fat16.c ****         return 0;
 1099              		.loc 1 217 0
 1100 07c8 640000EA 		b	.L86
 1101              	.L87:
 219:../Library/sdfat/fat16.c ****     memset(fs, 0, sizeof(*fs));
 1102              		.loc 1 219 0
 1103 07cc 0010A0E3 		mov	r1, #0
 1104 07d0 1C20A0E3 		mov	r2, #28
 1105 07d4 FEFFFFEB 		bl	memset
 1106              	.LBB61:
 1107              	.LBB62:
 271:../Library/sdfat/fat16.c ****     uint32_t partition_offset = partition->offset * 512;
 1108              		.loc 1 271 0
 1109 07d8 108096E5 		ldr	r8, [r6, #16]
 1110 07dc 8884A0E1 		mov	r8, r8, asl #9
 1111              	.LBE62:
 1112              	.LBE61:
 221:../Library/sdfat/fat16.c ****     fs->partition = partition;
 1113              		.loc 1 221 0
 1114 07e0 006084E5 		str	r6, [r4, #0]
 1115              	.LVL104:
 1116              	.LBB64:
 1117              	.LBB63:
 273:../Library/sdfat/fat16.c ****     if(!partition->device_read(partition_offset + 0x0b, buffer, sizeof(buffer)))
 1118              		.loc 1 273 0
 1119 07e4 0B0088E2 		add	r0, r8, #11
 1120 07e8 14108DE2 		add	r1, sp, #20
 1121 07ec 1920A0E3 		mov	r2, #25
 1122 07f0 00C096E5 		ldr	ip, [r6, #0]
 1123 07f4 0FE0A0E1 		mov	lr, pc
 1124 07f8 1CFF2FE1 		bx	ip
 1125 07fc 000050E3 		cmp	r0, #0
 1126 0800 5100000A 		beq	.L88
 279:../Library/sdfat/fat16.c ****     uint16_t reserved_sectors = ((uint16_t) buffer[0x03]) |
 1127              		.loc 1 279 0
 1128 0804 1720DDE5 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 280:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x04] << 8);
 1129              		.loc 1 280 0
 1130 0808 1830DDE5 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 279:../Library/sdfat/fat16.c ****     uint16_t reserved_sectors = ((uint16_t) buffer[0x03]) |
 1131              		.loc 1 279 0
 1132 080c 04208DE5 		str	r2, [sp, #4]
 281:../Library/sdfat/fat16.c ****     uint8_t fat_copies = buffer[0x05];
 1133              		.loc 1 281 0
 1134 0810 1920DDE5 		ldrb	r2, [sp, #25]	@ zero_extendqisi2
 287:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x0c] << 8);
 1135              		.loc 1 287 0
 1136 0814 20C0DDE5 		ldrb	ip, [sp, #32]	@ zero_extendqisi2
 286:../Library/sdfat/fat16.c ****     uint16_t sectors_per_fat = ((uint16_t) buffer[0x0b]) |
 1137              		.loc 1 286 0
 1138 0818 1F00DDE5 		ldrb	r0, [sp, #31]	@ zero_extendqisi2
 280:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x04] << 8);
 1139              		.loc 1 280 0
 1140 081c 08308DE5 		str	r3, [sp, #8]
 281:../Library/sdfat/fat16.c ****     uint8_t fat_copies = buffer[0x05];
 1141              		.loc 1 281 0
 1142 0820 0C208DE5 		str	r2, [sp, #12]
 282:../Library/sdfat/fat16.c ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 1143              		.loc 1 282 0
 1144 0824 1A30DDE5 		ldrb	r3, [sp, #26]	@ zero_extendqisi2
 283:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x07] << 8);
 1145              		.loc 1 283 0
 1146 0828 1B20DDE5 		ldrb	r2, [sp, #27]	@ zero_extendqisi2
 293:../Library/sdfat/fat16.c ****     if(sectors_per_fat == 0)
 1147              		.loc 1 293 0
 1148 082c 0C0490E1 		orrs	r0, r0, ip, asl #8
 282:../Library/sdfat/fat16.c ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 1149              		.loc 1 282 0
 1150 0830 00308DE5 		str	r3, [sp, #0]
 283:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x07] << 8);
 1151              		.loc 1 283 0
 1152 0834 10208DE5 		str	r2, [sp, #16]
 276:../Library/sdfat/fat16.c ****     uint16_t bytes_per_sector = ((uint16_t) buffer[0x00]) |
 1153              		.loc 1 276 0
 1154 0838 14E0DDE5 		ldrb	lr, [sp, #20]	@ zero_extendqisi2
 277:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x01] << 8);
 1155              		.loc 1 277 0
 1156 083c 1550DDE5 		ldrb	r5, [sp, #21]	@ zero_extendqisi2
 1157              	.LVL105:
 278:../Library/sdfat/fat16.c ****     uint8_t sectors_per_cluster = buffer[0x02];
 1158              		.loc 1 278 0
 1159 0840 16B0DDE5 		ldrb	fp, [sp, #22]	@ zero_extendqisi2
 1160              	.LVL106:
 284:../Library/sdfat/fat16.c ****     uint16_t sector_count_16 = ((uint16_t) buffer[0x08]) |
 1161              		.loc 1 284 0
 1162 0844 1C30DDE5 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 285:../Library/sdfat/fat16.c ****     ((uint16_t) buffer[0x09] << 8);
 1163              		.loc 1 285 0
 1164 0848 1D20DDE5 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 1165              	.LVL107:
 288:../Library/sdfat/fat16.c ****     uint32_t sector_count = ((uint32_t) buffer[0x15]) |
 1166              		.loc 1 288 0
 1167 084c 29A0DDE5 		ldrb	sl, [sp, #41]	@ zero_extendqisi2
 289:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x16] << 8) |
 1168              		.loc 1 289 0
 1169 0850 2A90DDE5 		ldrb	r9, [sp, #42]	@ zero_extendqisi2
 290:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x17] << 16) |
 1170              		.loc 1 290 0
 1171 0854 2B70DDE5 		ldrb	r7, [sp, #43]	@ zero_extendqisi2
 291:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x18] << 24);
 1172              		.loc 1 291 0
 1173 0858 2C10DDE5 		ldrb	r1, [sp, #44]	@ zero_extendqisi2
 1174              	.LVL108:
 293:../Library/sdfat/fat16.c ****     if(sectors_per_fat == 0)
 1175              		.loc 1 293 0
 1176 085c 3A00000A 		beq	.L88
 290:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x17] << 16) |
 1177              		.loc 1 290 0
 1178 0860 0778A0E1 		mov	r7, r7, asl #16
 1179              	.LVL109:
 288:../Library/sdfat/fat16.c ****     uint32_t sector_count = ((uint32_t) buffer[0x15]) |
 1180              		.loc 1 288 0
 1181 0864 097487E1 		orr	r7, r7, r9, asl #8
 289:../Library/sdfat/fat16.c ****     ((uint32_t) buffer[0x16] << 8) |
 1182              		.loc 1 289 0
 1183 0868 0A7087E1 		orr	r7, r7, sl
 297:../Library/sdfat/fat16.c ****     if(sector_count == 0)
 1184              		.loc 1 297 0
 1185 086c 017C97E1 		orrs	r7, r7, r1, asl #24
 1186 0870 0100001A 		bne	.L89
 299:../Library/sdfat/fat16.c ****         if(sector_count_16 == 0)
 1187              		.loc 1 299 0
 1188 0874 027493E1 		orrs	r7, r3, r2, asl #8
 1189 0878 3300000A 		beq	.L88
 1190              	.L89:
 282:../Library/sdfat/fat16.c ****     uint16_t max_root_entries = ((uint16_t) buffer[0x06]) |
 1191              		.loc 1 282 0
 1192 087c 00309DE5 		ldr	r3, [sp, #0]
 1193              	.LVL110:
 1194 0880 10209DE5 		ldr	r2, [sp, #16]
 1195 0884 023483E1 		orr	r3, r3, r2, asl #8
 1196 0888 00308DE5 		str	r3, [sp, #0]
 1197              	.LVL111:
 308:../Library/sdfat/fat16.c ****     - reserved_sectors
 1198              		.loc 1 308 0
 1199 088c 08209DE5 		ldr	r2, [sp, #8]
 1200 0890 04309DE5 		ldr	r3, [sp, #4]
 1201 0894 02A483E1 		orr	sl, r3, r2, asl #8
 309:../Library/sdfat/fat16.c ****     - (uint32_t) sectors_per_fat * fat_copies
 1202              		.loc 1 309 0
 1203 0898 0C209DE5 		ldr	r2, [sp, #12]
 1204 089c 920003E0 		mul	r3, r2, r0
 1205 08a0 04308DE5 		str	r3, [sp, #4]
 310:../Library/sdfat/fat16.c ****     - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sector);
 1206              		.loc 1 310 0
 1207 08a4 00309DE5 		ldr	r3, [sp, #0]
 1208 08a8 1F00E0E3 		mvn	r0, #31
 1209 08ac 930000E0 		mul	r0, r3, r0
 276:../Library/sdfat/fat16.c ****     uint16_t bytes_per_sector = ((uint16_t) buffer[0x00]) |
 1210              		.loc 1 276 0
 1211 08b0 05548EE1 		orr	r5, lr, r5, asl #8
 1212              	.LVL112:
 310:../Library/sdfat/fat16.c ****     - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sector);
 1213              		.loc 1 310 0
 1214 08b4 000065E0 		rsb	r0, r5, r0
 1215 08b8 0510A0E1 		mov	r1, r5
 1216 08bc 010080E2 		add	r0, r0, #1
 1217 08c0 FEFFFFEB 		bl	__divsi3
 202:../Library/sdfat/fat16.c **** struct fat16_fs_struct* fat16_open(struct partition_struct* partition)
 1218              		.loc 1 202 0
 1219 08c4 04209DE5 		ldr	r2, [sp, #4]
 1220 08c8 02308AE0 		add	r3, sl, r2
 308:../Library/sdfat/fat16.c ****     - reserved_sectors
 1221              		.loc 1 308 0
 1222 08cc 000063E0 		rsb	r0, r3, r0
 311:../Library/sdfat/fat16.c ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 1223              		.loc 1 311 0
 1224 08d0 070080E0 		add	r0, r0, r7
 1225 08d4 0B10A0E1 		mov	r1, fp
 1226 08d8 FEFFFFEB 		bl	__udivsi3
 312:../Library/sdfat/fat16.c ****     if(data_cluster_count < 4085 || data_cluster_count >= 65525)
 1227              		.loc 1 312 0
 1228 08dc FF3E40E2 		sub	r3, r0, #4080
 1229 08e0 053043E2 		sub	r3, r3, #5
 1230 08e4 0F0A53E3 		cmp	r3, #61440
 311:../Library/sdfat/fat16.c ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 1231              		.loc 1 311 0
 1232 08e8 0090A0E1 		mov	r9, r0
 1233              	.LVL113:
 312:../Library/sdfat/fat16.c ****     if(data_cluster_count < 4085 || data_cluster_count >= 65525)
 1234              		.loc 1 312 0
 1235 08ec 1600002A 		bcs	.L88
 325:../Library/sdfat/fat16.c ****     partition_offset +
 1236              		.loc 1 325 0
 1237 08f0 9A8528E0 		mla	r8, sl, r5, r8
 1238              	.LVL114:
 316:../Library/sdfat/fat16.c ****     partition->type = PARTITION_TYPE_FAT16;
 1239              		.loc 1 316 0
 1240 08f4 0630A0E3 		mov	r3, #6
 1241 08f8 0C30C6E5 		strb	r3, [r6, #12]
 1242              	.LVL115:
 320:../Library/sdfat/fat16.c ****     memset(header, 0, sizeof(*header));
 1243              		.loc 1 320 0
 1244 08fc 040084E2 		add	r0, r4, #4
 1245              	.LVL116:
 1246 0900 0010A0E3 		mov	r1, #0
 1247 0904 1820A0E3 		mov	r2, #24
 1248 0908 FEFFFFEB 		bl	memset
 334:../Library/sdfat/fat16.c ****     header->fat_offset +
 1249              		.loc 1 334 0
 1250 090c 04309DE5 		ldr	r3, [sp, #4]
 322:../Library/sdfat/fat16.c ****     header->size = sector_count * bytes_per_sector;
 1251              		.loc 1 322 0
 1252 0910 950707E0 		mul	r7, r5, r7
 1253              	.LVL117:
 331:../Library/sdfat/fat16.c ****     header->cluster_size = (uint32_t) bytes_per_sector * sectors_per_cluster;
 1254              		.loc 1 331 0
 1255 0914 950B0BE0 		mul	fp, r5, fp
 1256              	.LVL118:
 330:../Library/sdfat/fat16.c ****     header->sector_size = bytes_per_sector;
 1257              		.loc 1 330 0
 1258 0918 B051C4E1 		strh	r5, [r4, #16]	@ movhi
 334:../Library/sdfat/fat16.c ****     header->fat_offset +
 1259              		.loc 1 334 0
 1260 091c 938525E0 		mla	r5, r3, r5, r8
 339:../Library/sdfat/fat16.c ****     header->root_dir_offset +
 1261              		.loc 1 339 0
 1262 0920 00309DE5 		ldr	r3, [sp, #0]
 328:../Library/sdfat/fat16.c ****     header->fat_size = (data_cluster_count + 2) * 2;
 1263              		.loc 1 328 0
 1264 0924 029089E2 		add	r9, r9, #2
 1265              	.LVL119:
 1266 0928 8990A0E1 		mov	r9, r9, asl #1
 1267              	.LVL120:
 333:../Library/sdfat/fat16.c ****     header->root_dir_offset = /* jump to fats */
 1268              		.loc 1 333 0
 1269 092c 145084E5 		str	r5, [r4, #20]
 339:../Library/sdfat/fat16.c ****     header->root_dir_offset +
 1270              		.loc 1 339 0
 1271 0930 835285E0 		add	r5, r5, r3, asl #5
 322:../Library/sdfat/fat16.c ****     header->size = sector_count * bytes_per_sector;
 1272              		.loc 1 322 0
 1273 0934 047084E5 		str	r7, [r4, #4]
 324:../Library/sdfat/fat16.c ****     header->fat_offset = /* jump to partition */
 1274              		.loc 1 324 0
 1275 0938 088084E5 		str	r8, [r4, #8]
 328:../Library/sdfat/fat16.c ****     header->fat_size = (data_cluster_count + 2) * 2;
 1276              		.loc 1 328 0
 1277 093c 0C9084E5 		str	r9, [r4, #12]
 331:../Library/sdfat/fat16.c ****     header->cluster_size = (uint32_t) bytes_per_sector * sectors_per_cluster;
 1278              		.loc 1 331 0
 1279 0940 B2B1C4E1 		strh	fp, [r4, #18]	@ movhi
 338:../Library/sdfat/fat16.c ****     header->cluster_zero_offset = /* jump to root directory entries */
 1280              		.loc 1 338 0
 1281 0944 185084E5 		str	r5, [r4, #24]
 1282 0948 040000EA 		b	.L86
 1283              	.LVL121:
 1284              	.L88:
 1285              	.LBE63:
 1286              	.LBE64:
 224:../Library/sdfat/fat16.c ****         rprintf("Failed Reading Header\n\r");
 1287              		.loc 1 224 0
 1288 094c 20009FE5 		ldr	r0, .L92+4
 1289 0950 FEFFFFEB 		bl	rprintf
 225:../Library/sdfat/fat16.c ****         free(fs);
 1290              		.loc 1 225 0
 1291 0954 0400A0E1 		mov	r0, r4
 1292 0958 FEFFFFEB 		bl	free
 226:../Library/sdfat/fat16.c ****         return 0;
 1293              		.loc 1 226 0
 1294 095c 0040A0E3 		mov	r4, #0
 1295              	.LVL122:
 1296              	.L86:
 230:../Library/sdfat/fat16.c **** }
 1297              		.loc 1 230 0
 1298 0960 0400A0E1 		mov	r0, r4
 1299 0964 30D08DE2 		add	sp, sp, #48
 1300 0968 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1301 096c 1EFF2FE1 		bx	lr
 1302              	.L93:
 1303              		.align	2
 1304              	.L92:
 1305 0970 00000000 		.word	.LC0
 1306 0974 0F000000 		.word	.LC1
 1307              		.cfi_endproc
 1308              	.LFE0:
 1310              		.align	2
 1311              		.global	fat16_close
 1313              	fat16_close:
 1314              	.LFB1:
 243:../Library/sdfat/fat16.c **** {
 1315              		.loc 1 243 0
 1316              		.cfi_startproc
 1317              		@ Function supports interworking.
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320              	.LVL123:
 244:../Library/sdfat/fat16.c ****     if(!fs)
 1321              		.loc 1 244 0
 1322 0978 000050E3 		cmp	r0, #0
 243:../Library/sdfat/fat16.c **** {
 1323              		.loc 1 243 0
 1324 097c 04E02DE5 		str	lr, [sp, #-4]!
 1325              	.LCFI10:
 1326              		.cfi_def_cfa_offset 4
 1327              		.cfi_offset 14, -4
 244:../Library/sdfat/fat16.c ****     if(!fs)
 1328              		.loc 1 244 0
 247:../Library/sdfat/fat16.c ****     free(fs);
 1329              		.loc 1 247 0
 1330 0980 FEFFFF1B 		blne	free
 1331              	.LVL124:
 1332              	.L94:
 248:../Library/sdfat/fat16.c **** }
 1333              		.loc 1 248 0
 1334 0984 04E09DE4 		ldr	lr, [sp], #4
 1335 0988 1EFF2FE1 		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE1:
 1339              		.align	2
 1340              		.global	fat16_open_file
 1342              	fat16_open_file:
 1343              	.LFB13:
 920:../Library/sdfat/fat16.c **** {
 1344              		.loc 1 920 0
 1345              		.cfi_startproc
 1346              		@ Function supports interworking.
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              	.LVL125:
 921:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 1350              		.loc 1 921 0
 1351 098c 000050E3 		cmp	r0, #0
 1352 0990 00005113 		cmpne	r1, #0
 920:../Library/sdfat/fat16.c **** {
 1353              		.loc 1 920 0
 1354 0994 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 1355              	.LCFI11:
 1356              		.cfi_def_cfa_offset 20
 1357              		.cfi_offset 14, -4
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 6, -12
 1360              		.cfi_offset 5, -16
 1361              		.cfi_offset 4, -20
 921:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 1362              		.loc 1 921 0
 1363 0998 0040A013 		movne	r4, #0
 1364 099c 0140A003 		moveq	r4, #1
 1365 09a0 0150A0E1 		mov	r5, r1
 1366 09a4 0060A0E1 		mov	r6, r0
 922:../Library/sdfat/fat16.c ****         return 0;
 1367              		.loc 1 922 0
 1368 09a8 0040A003 		moveq	r4, #0
 921:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 1369              		.loc 1 921 0
 1370 09ac 0E00000A 		beq	.L97
 921:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT16_ATTRIB_DIR))
 1371              		.loc 1 921 0 is_stmt 0 discriminator 1
 1372 09b0 2070D1E5 		ldrb	r7, [r1, #32]	@ zero_extendqisi2
 1373 09b4 107017E2 		ands	r7, r7, #16
 1374 09b8 0B00001A 		bne	.L97
 924:../Library/sdfat/fat16.c ****     struct fat16_file_struct* fd = malloc(sizeof(*fd));
 1375              		.loc 1 924 0 is_stmt 1
 1376 09bc 3800A0E3 		mov	r0, #56
 1377              	.LVL126:
 1378 09c0 FEFFFFEB 		bl	malloc
 1379              	.LVL127:
 925:../Library/sdfat/fat16.c ****     if(!fd)
 1380              		.loc 1 925 0
 1381 09c4 004050E2 		subs	r4, r0, #0
 1382 09c8 0700000A 		beq	.L97
 928:../Library/sdfat/fat16.c ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 1383              		.loc 1 928 0
 1384 09cc 040084E2 		add	r0, r4, #4
 1385              	.LVL128:
 1386 09d0 0510A0E1 		mov	r1, r5
 1387 09d4 2C20A0E3 		mov	r2, #44
 1388 09d8 FEFFFFEB 		bl	memcpy
 931:../Library/sdfat/fat16.c ****     fd->pos_cluster = dir_entry->cluster;
 1389              		.loc 1 931 0
 1390 09dc B232D5E1 		ldrh	r3, [r5, #34]
 929:../Library/sdfat/fat16.c ****     fd->fs = fs;
 1391              		.loc 1 929 0
 1392 09e0 006084E5 		str	r6, [r4, #0]
 930:../Library/sdfat/fat16.c ****     fd->pos = 0;
 1393              		.loc 1 930 0
 1394 09e4 307084E5 		str	r7, [r4, #48]
 931:../Library/sdfat/fat16.c ****     fd->pos_cluster = dir_entry->cluster;
 1395              		.loc 1 931 0
 1396 09e8 B433C4E1 		strh	r3, [r4, #52]	@ movhi
 1397              	.LVL129:
 1398              	.L97:
 934:../Library/sdfat/fat16.c **** }
 1399              		.loc 1 934 0
 1400 09ec 0400A0E1 		mov	r0, r4
 1401 09f0 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 1402 09f4 1EFF2FE1 		bx	lr
 1403              		.cfi_endproc
 1404              	.LFE13:
 1406              		.align	2
 1407              		.global	fat16_close_file
 1409              	fat16_close_file:
 1410              	.LFB14:
 944:../Library/sdfat/fat16.c **** {
 1411              		.loc 1 944 0
 1412              		.cfi_startproc
 1413              		@ Function supports interworking.
 1414              		@ args = 0, pretend = 0, frame = 0
 1415              		@ frame_needed = 0, uses_anonymous_args = 0
 1416              	.LVL130:
 945:../Library/sdfat/fat16.c ****     if(fd)
 1417              		.loc 1 945 0
 1418 09f8 000050E3 		cmp	r0, #0
 944:../Library/sdfat/fat16.c **** {
 1419              		.loc 1 944 0
 1420 09fc 04E02DE5 		str	lr, [sp, #-4]!
 1421              	.LCFI12:
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 14, -4
 945:../Library/sdfat/fat16.c ****     if(fd)
 1424              		.loc 1 945 0
 946:../Library/sdfat/fat16.c ****         free(fd);
 1425              		.loc 1 946 0
 1426 0a00 FEFFFF1B 		blne	free
 1427              	.LVL131:
 1428              	.L100:
 947:../Library/sdfat/fat16.c **** }
 1429              		.loc 1 947 0
 1430 0a04 04E09DE4 		ldr	lr, [sp], #4
 1431 0a08 1EFF2FE1 		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE14:
 1435              		.global	__umodsi3
 1436              		.align	2
 1437              		.global	fat16_read_file
 1439              	fat16_read_file:
 1440              	.LFB15:
 962:../Library/sdfat/fat16.c **** {
 1441              		.loc 1 962 0
 1442              		.cfi_startproc
 1443              		@ Function supports interworking.
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              	.LVL132:
 1447 0a0c 0228A0E1 		mov	r2, r2, asl #16
 1448              	.LVL133:
 964:../Library/sdfat/fat16.c ****     if(!fd || !buffer || buffer_len < 1)
 1449              		.loc 1 964 0
 1450 0a10 000050E3 		cmp	r0, #0
 1451 0a14 00005113 		cmpne	r1, #0
 962:../Library/sdfat/fat16.c **** {
 1452              		.loc 1 962 0
 1453 0a18 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1454              	.LCFI13:
 1455              		.cfi_def_cfa_offset 36
 1456              		.cfi_offset 14, -4
 1457              		.cfi_offset 11, -8
 1458              		.cfi_offset 10, -12
 1459              		.cfi_offset 9, -16
 1460              		.cfi_offset 8, -20
 1461              		.cfi_offset 7, -24
 1462              		.cfi_offset 6, -28
 1463              		.cfi_offset 5, -32
 1464              		.cfi_offset 4, -36
 962:../Library/sdfat/fat16.c **** {
 1465              		.loc 1 962 0
 1466 0a1c 2268A0E1 		mov	r6, r2, lsr #16
 964:../Library/sdfat/fat16.c ****     if(!fd || !buffer || buffer_len < 1)
 1467              		.loc 1 964 0
 1468 0a20 0190A0E1 		mov	r9, r1
 1469 0a24 0040A0E1 		mov	r4, r0
 1470 0a28 5500000A 		beq	.L117
 964:../Library/sdfat/fat16.c ****     if(!fd || !buffer || buffer_len < 1)
 1471              		.loc 1 964 0 is_stmt 0 discriminator 1
 1472 0a2c 000056E3 		cmp	r6, #0
 1473 0a30 5300000A 		beq	.L117
 968:../Library/sdfat/fat16.c ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
 1474              		.loc 1 968 0 is_stmt 1
 1475 0a34 307090E5 		ldr	r7, [r0, #48]
 1476 0a38 283090E5 		ldr	r3, [r0, #40]
 1477 0a3c 072086E0 		add	r2, r6, r7
 1478 0a40 030052E1 		cmp	r2, r3
 1479 0a44 0300009A 		bls	.L104
 969:../Library/sdfat/fat16.c ****         buffer_len = fd->dir_entry.file_size - fd->pos;
 1480              		.loc 1 969 0
 1481 0a48 036067E0 		rsb	r6, r7, r3
 1482 0a4c 0668A0E1 		mov	r6, r6, asl #16
 1483              	.LVL134:
 970:../Library/sdfat/fat16.c ****     if(buffer_len == 0)
 1484              		.loc 1 970 0
 1485 0a50 2668B0E1 		movs	r6, r6, lsr #16
 1486              	.LVL135:
 1487 0a54 4B00000A 		beq	.L103
 1488              	.L104:
 974:../Library/sdfat/fat16.c ****     uint16_t cluster_num = fd->pos_cluster;
 1489              		.loc 1 974 0
 1490 0a58 B453D4E1 		ldrh	r5, [r4, #52]
 973:../Library/sdfat/fat16.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 1491              		.loc 1 973 0
 1492 0a5c 003094E5 		ldr	r3, [r4, #0]
 979:../Library/sdfat/fat16.c ****     if(!cluster_num)
 1493              		.loc 1 979 0
 1494 0a60 000055E3 		cmp	r5, #0
 973:../Library/sdfat/fat16.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 1495              		.loc 1 973 0
 1496 0a64 B281D3E1 		ldrh	r8, [r3, #18]
 1497              	.LVL136:
 979:../Library/sdfat/fat16.c ****     if(!cluster_num)
 1498              		.loc 1 979 0
 1499 0a68 1200001A 		bne	.L105
 981:../Library/sdfat/fat16.c ****         cluster_num = fd->dir_entry.cluster;
 1500              		.loc 1 981 0
 1501 0a6c B652D4E1 		ldrh	r5, [r4, #38]
 1502              	.LVL137:
 983:../Library/sdfat/fat16.c ****         if(!cluster_num)
 1503              		.loc 1 983 0
 1504 0a70 000055E3 		cmp	r5, #0
 1505 0a74 0300001A 		bne	.L106
 986:../Library/sdfat/fat16.c ****                 return 0;
 1506              		.loc 1 986 0
 1507 0a78 000057E3 		cmp	r7, #0
 1508 0a7c 14619FE5 		ldr	r6, .L121
 1509              	.LVL138:
 1510 0a80 0060A003 		moveq	r6, #0
 1511 0a84 3F0000EA 		b	.L103
 1512              	.LVL139:
 1513              	.L106:
 991:../Library/sdfat/fat16.c ****         if(fd->pos)
 1514              		.loc 1 991 0
 1515 0a88 000057E3 		cmp	r7, #0
 1516 0a8c 07A0A011 		movne	sl, r7
 1517 0a90 0600001A 		bne	.L108
 1518 0a94 070000EA 		b	.L105
 1519              	.LVL140:
 1520              	.L109:
 1521              	.LBB65:
 997:../Library/sdfat/fat16.c ****                 cluster_num = fat16_get_next_cluster(fd->fs, cluster_num);
 1522              		.loc 1 997 0
 1523 0a98 0510A0E1 		mov	r1, r5
 1524 0a9c 000094E5 		ldr	r0, [r4, #0]
 1525 0aa0 EFFDFFEB 		bl	fat16_get_next_cluster
 998:../Library/sdfat/fat16.c ****                 if(!cluster_num)
 1526              		.loc 1 998 0
 1527 0aa4 005050E2 		subs	r5, r0, #0
 1528              	.LVL141:
 1529              	.LBE65:
 961:../Library/sdfat/fat16.c **** int16_t fat16_read_file(struct fat16_file_struct* fd, uint8_t* buffer, uint16_t buffer_len)
 1530              		.loc 1 961 0
 1531 0aa8 0AA068E0 		rsb	sl, r8, sl
 1532              	.LVL142:
 1533              	.LBB66:
 998:../Library/sdfat/fat16.c ****                 if(!cluster_num)
 1534              		.loc 1 998 0
 1535 0aac 3400000A 		beq	.L117
 1536              	.LVL143:
 1537              	.L108:
 994:../Library/sdfat/fat16.c ****             while(pos >= cluster_size)
 1538              		.loc 1 994 0 discriminator 1
 1539 0ab0 08005AE1 		cmp	sl, r8
 1540 0ab4 F7FFFF2A 		bcs	.L109
 1541              	.LVL144:
 1542              	.L105:
 1543              	.LBE66:
 976:../Library/sdfat/fat16.c ****     uint16_t first_cluster_offset = fd->pos % cluster_size;
 1544              		.loc 1 976 0
 1545 0ab8 0700A0E1 		mov	r0, r7
 1546 0abc 0810A0E1 		mov	r1, r8
 1547 0ac0 FEFFFFEB 		bl	__umodsi3
 1548 0ac4 0008A0E1 		mov	r0, r0, asl #16
 1549 0ac8 20B8A0E1 		mov	fp, r0, lsr #16
 1550 0acc 0670A0E1 		mov	r7, r6
 1551              	.LVL145:
 1552              	.L112:
 1553              	.LBB67:
1010:../Library/sdfat/fat16.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 1554              		.loc 1 1010 0
 1555 0ad0 08A06BE0 		rsb	sl, fp, r8
1008:../Library/sdfat/fat16.c ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1556              		.loc 1 1008 0
 1557 0ad4 002094E5 		ldr	r2, [r4, #0]
 1558              	.LVL146:
1010:../Library/sdfat/fat16.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 1559              		.loc 1 1010 0
 1560 0ad8 0AA8A0E1 		mov	sl, sl, asl #16
 1561 0adc 2AA8A0E1 		mov	sl, sl, lsr #16
 1562              	.LVL147:
 1563 0ae0 07005AE1 		cmp	sl, r7
 1564 0ae4 07A0A021 		movcs	sl, r7
 1565              	.LVL148:
1015:../Library/sdfat/fat16.c ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
 1566              		.loc 1 1015 0
 1567 0ae8 003092E5 		ldr	r3, [r2, #0]
1008:../Library/sdfat/fat16.c ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1568              		.loc 1 1008 0
 1569 0aec 182092E5 		ldr	r2, [r2, #24]
1010:../Library/sdfat/fat16.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 1570              		.loc 1 1010 0
 1571 0af0 0AA8A0E1 		mov	sl, sl, asl #16
1008:../Library/sdfat/fat16.c ****         uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1572              		.loc 1 1008 0
 1573 0af4 02208BE0 		add	r2, fp, r2
1010:../Library/sdfat/fat16.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 1574              		.loc 1 1010 0
 1575 0af8 2AA8A0E1 		mov	sl, sl, lsr #16
 1576              	.LVL149:
1009:../Library/sdfat/fat16.c ****         (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 1577              		.loc 1 1009 0
 1578 0afc 020045E2 		sub	r0, r5, #2
1015:../Library/sdfat/fat16.c ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
 1579              		.loc 1 1015 0
 1580 0b00 982020E0 		mla	r0, r8, r0, r2
 1581 0b04 0910A0E1 		mov	r1, r9
 1582 0b08 0A20A0E1 		mov	r2, sl
 1583 0b0c 00C093E5 		ldr	ip, [r3, #0]
 1584 0b10 0FE0A0E1 		mov	lr, pc
 1585 0b14 1CFF2FE1 		bx	ip
 1586              	.LVL150:
 1587 0b18 000050E3 		cmp	r0, #0
 1588 0b1c 0F00000A 		beq	.L120
 1589              	.L110:
1021:../Library/sdfat/fat16.c ****         fd->pos += copy_length;
 1590              		.loc 1 1021 0
 1591 0b20 303094E5 		ldr	r3, [r4, #48]
1020:../Library/sdfat/fat16.c ****         buffer_left -= copy_length;
 1592              		.loc 1 1020 0
 1593 0b24 07706AE0 		rsb	r7, sl, r7
 1594              	.LVL151:
1021:../Library/sdfat/fat16.c ****         fd->pos += copy_length;
 1595              		.loc 1 1021 0
 1596 0b28 0A3083E0 		add	r3, r3, sl
1019:../Library/sdfat/fat16.c ****         buffer += copy_length;
 1597              		.loc 1 1019 0
 1598 0b2c 0A9089E0 		add	r9, r9, sl
 1599              	.LVL152:
1023:../Library/sdfat/fat16.c ****         if(first_cluster_offset + copy_length >= cluster_size)
 1600              		.loc 1 1023 0
 1601 0b30 0AA08BE0 		add	sl, fp, sl
 1602              	.LVL153:
1020:../Library/sdfat/fat16.c ****         buffer_left -= copy_length;
 1603              		.loc 1 1020 0
 1604 0b34 0778A0E1 		mov	r7, r7, asl #16
1023:../Library/sdfat/fat16.c ****         if(first_cluster_offset + copy_length >= cluster_size)
 1605              		.loc 1 1023 0
 1606 0b38 08005AE1 		cmp	sl, r8
1020:../Library/sdfat/fat16.c ****         buffer_left -= copy_length;
 1607              		.loc 1 1020 0
 1608 0b3c 2778A0E1 		mov	r7, r7, lsr #16
 1609              	.LVL154:
1021:../Library/sdfat/fat16.c ****         fd->pos += copy_length;
 1610              		.loc 1 1021 0
 1611 0b40 303084E5 		str	r3, [r4, #48]
1023:../Library/sdfat/fat16.c ****         if(first_cluster_offset + copy_length >= cluster_size)
 1612              		.loc 1 1023 0
 1613 0b44 0A0000BA 		blt	.L111
1026:../Library/sdfat/fat16.c ****             if((cluster_num = fat16_get_next_cluster(fd->fs, cluster_num)))
 1614              		.loc 1 1026 0
 1615 0b48 0510A0E1 		mov	r1, r5
 1616 0b4c 000094E5 		ldr	r0, [r4, #0]
 1617 0b50 C3FDFFEB 		bl	fat16_get_next_cluster
 1618              	.LVL155:
 1619 0b54 005050E2 		subs	r5, r0, #0
 1620 0b58 0400001A 		bne	.L118
1032:../Library/sdfat/fat16.c ****                 fd->pos_cluster = 0;
 1621              		.loc 1 1032 0
 1622 0b5c B453C4E1 		strh	r5, [r4, #52]	@ movhi
 1623              	.LVL156:
 1624              	.L120:
1033:../Library/sdfat/fat16.c ****                 return buffer_len - buffer_left;
 1625              		.loc 1 1033 0
 1626 0b60 066067E0 		rsb	r6, r7, r6
 1627 0b64 0668A0E1 		mov	r6, r6, asl #16
 1628 0b68 2668A0E1 		mov	r6, r6, lsr #16
 1629 0b6c 050000EA 		b	.L103
 1630              	.LVL157:
 1631              	.L118:
1028:../Library/sdfat/fat16.c ****                 first_cluster_offset = 0;
 1632              		.loc 1 1028 0
 1633 0b70 00B0A0E3 		mov	fp, #0
 1634              	.LVL158:
 1635              	.L111:
 1636              	.LBE67:
1040:../Library/sdfat/fat16.c ****     while(buffer_left > 0); /* check if we are done */
 1637              		.loc 1 1040 0
 1638 0b74 000057E3 		cmp	r7, #0
 1639              	.LBB68:
1037:../Library/sdfat/fat16.c ****         fd->pos_cluster = cluster_num;
 1640              		.loc 1 1037 0
 1641 0b78 B453C4E1 		strh	r5, [r4, #52]	@ movhi
 1642              	.LBE68:
1040:../Library/sdfat/fat16.c ****     while(buffer_left > 0); /* check if we are done */
 1643              		.loc 1 1040 0
 1644 0b7c D3FFFF1A 		bne	.L112
 1645 0b80 000000EA 		b	.L103
 1646              	.LVL159:
 1647              	.L117:
 1648              	.LBB69:
 999:../Library/sdfat/fat16.c ****                     return -1;
 1649              		.loc 1 999 0
 1650 0b84 0C609FE5 		ldr	r6, .L121
 1651              	.L103:
 1652              	.LBE69:
1042:../Library/sdfat/fat16.c ****     return buffer_len;
 1653              		.loc 1 1042 0
 1654 0b88 0668A0E1 		mov	r6, r6, asl #16
1043:../Library/sdfat/fat16.c **** }
 1655              		.loc 1 1043 0
 1656 0b8c 4608A0E1 		mov	r0, r6, asr #16
 1657 0b90 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1658 0b94 1EFF2FE1 		bx	lr
 1659              	.L122:
 1660              		.align	2
 1661              	.L121:
 1662 0b98 FFFF0000 		.word	65535
 1663              		.cfi_endproc
 1664              	.LFE15:
 1666              		.align	2
 1667              		.global	fat16_write_file
 1669              	fat16_write_file:
 1670              	.LFB16:
1058:../Library/sdfat/fat16.c **** {
 1671              		.loc 1 1058 0
 1672              		.cfi_startproc
 1673              		@ Function supports interworking.
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
 1676              	.LVL160:
 1677 0b9c 0228A0E1 		mov	r2, r2, asl #16
 1678              	.LVL161:
1061:../Library/sdfat/fat16.c ****         if(!fd || !buffer || buffer_len < 1)
 1679              		.loc 1 1061 0
 1680 0ba0 000050E3 		cmp	r0, #0
 1681 0ba4 00005113 		cmpne	r1, #0
1058:../Library/sdfat/fat16.c **** {
 1682              		.loc 1 1058 0
 1683 0ba8 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1684              	.LCFI14:
 1685              		.cfi_def_cfa_offset 36
 1686              		.cfi_offset 14, -4
 1687              		.cfi_offset 11, -8
 1688              		.cfi_offset 10, -12
 1689              		.cfi_offset 9, -16
 1690              		.cfi_offset 8, -20
 1691              		.cfi_offset 7, -24
 1692              		.cfi_offset 6, -28
 1693              		.cfi_offset 5, -32
 1694              		.cfi_offset 4, -36
1058:../Library/sdfat/fat16.c **** {
 1695              		.loc 1 1058 0
 1696 0bac 22B8A0E1 		mov	fp, r2, lsr #16
1061:../Library/sdfat/fat16.c ****         if(!fd || !buffer || buffer_len < 1)
 1697              		.loc 1 1061 0
 1698 0bb0 01A0A0E1 		mov	sl, r1
 1699 0bb4 0040A0E1 		mov	r4, r0
 1700 0bb8 7200000A 		beq	.L140
1061:../Library/sdfat/fat16.c ****         if(!fd || !buffer || buffer_len < 1)
 1701              		.loc 1 1061 0 is_stmt 0 discriminator 1
 1702 0bbc 00005BE3 		cmp	fp, #0
 1703 0bc0 7000000A 		beq	.L140
1063:../Library/sdfat/fat16.c ****         if(fd->pos > fd->dir_entry.file_size)
 1704              		.loc 1 1063 0 is_stmt 1
 1705 0bc4 308090E5 		ldr	r8, [r0, #48]
 1706 0bc8 283090E5 		ldr	r3, [r0, #40]
 1707 0bcc 030058E1 		cmp	r8, r3
 1708 0bd0 6C00008A 		bhi	.L140
1067:../Library/sdfat/fat16.c ****         uint16_t cluster_num = fd->pos_cluster;
 1709              		.loc 1 1067 0
 1710 0bd4 B453D4E1 		ldrh	r5, [r4, #52]
1066:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 1711              		.loc 1 1066 0
 1712 0bd8 000090E5 		ldr	r0, [r0, #0]
 1713              	.LVL162:
1072:../Library/sdfat/fat16.c ****         if(!cluster_num)
 1714              		.loc 1 1072 0
 1715 0bdc 000055E3 		cmp	r5, #0
1066:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 1716              		.loc 1 1066 0
 1717 0be0 B271D0E1 		ldrh	r7, [r0, #18]
 1718              	.LVL163:
1072:../Library/sdfat/fat16.c ****         if(!cluster_num)
 1719              		.loc 1 1072 0
 1720 0be4 1F00001A 		bne	.L125
1074:../Library/sdfat/fat16.c ****             cluster_num = fd->dir_entry.cluster;
 1721              		.loc 1 1074 0
 1722 0be8 B652D4E1 		ldrh	r5, [r4, #38]
 1723              	.LVL164:
1076:../Library/sdfat/fat16.c ****             if(!cluster_num)
 1724              		.loc 1 1076 0
 1725 0bec 000055E3 		cmp	r5, #0
 1726 0bf0 0900001A 		bne	.L126
1078:../Library/sdfat/fat16.c ****                 if(!fd->pos)
 1727              		.loc 1 1078 0
 1728 0bf4 000058E3 		cmp	r8, #0
1087:../Library/sdfat/fat16.c ****                     return -2;
 1729              		.loc 1 1087 0
 1730 0bf8 A4619F15 		ldrne	r6, .L145
1078:../Library/sdfat/fat16.c ****                 if(!fd->pos)
 1731              		.loc 1 1078 0
 1732 0bfc 6400001A 		bne	.L124
1081:../Library/sdfat/fat16.c ****                     fd->dir_entry.cluster = cluster_num = fat16_append_clusters(fd->fs, 0, 1);
 1733              		.loc 1 1081 0
 1734 0c00 0810A0E1 		mov	r1, r8
 1735              	.LVL165:
 1736 0c04 0120A0E3 		mov	r2, #1
 1737 0c08 E9FDFFEB 		bl	fat16_append_clusters
 1738              	.LVL166:
1082:../Library/sdfat/fat16.c ****                     if(!cluster_num)
 1739              		.loc 1 1082 0
 1740 0c0c 000050E3 		cmp	r0, #0
1081:../Library/sdfat/fat16.c ****                     fd->dir_entry.cluster = cluster_num = fat16_append_clusters(fd->fs, 0, 1);
 1741              		.loc 1 1081 0
 1742 0c10 0050A0E1 		mov	r5, r0
 1743              	.LVL167:
 1744 0c14 B602C4E1 		strh	r0, [r4, #38]	@ movhi
1082:../Library/sdfat/fat16.c ****                     if(!cluster_num)
 1745              		.loc 1 1082 0
 1746 0c18 5A00000A 		beq	.L140
 1747              	.LVL168:
 1748              	.L126:
1091:../Library/sdfat/fat16.c ****             if(fd->pos)
 1749              		.loc 1 1091 0
 1750 0c1c 306094E5 		ldr	r6, [r4, #48]
 1751 0c20 000056E3 		cmp	r6, #0
 1752 0c24 0D00001A 		bne	.L144
 1753 0c28 0E0000EA 		b	.L125
 1754              	.LVL169:
 1755              	.L130:
 1756              	.LBB70:
1098:../Library/sdfat/fat16.c ****                     cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 1757              		.loc 1 1098 0
 1758 0c2c 000094E5 		ldr	r0, [r4, #0]
 1759 0c30 0510A0E1 		mov	r1, r5
 1760 0c34 8AFDFFEB 		bl	fat16_get_next_cluster
 1761              	.LBE70:
1057:../Library/sdfat/fat16.c **** int16_t fat16_write_file(struct fat16_file_struct* fd, const uint8_t* buffer, uint16_t buffer_len)
 1762              		.loc 1 1057 0
 1763 0c38 066067E0 		rsb	r6, r7, r6
 1764              	.LVL170:
 1765              	.LBB71:
1099:../Library/sdfat/fat16.c ****                     if(!cluster_num_next && pos == 0)
 1766              		.loc 1 1099 0
 1767 0c3c 000050E3 		cmp	r0, #0
 1768 0c40 00005603 		cmpeq	r6, #0
1101:../Library/sdfat/fat16.c ****                         cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 1769              		.loc 1 1101 0
 1770 0c44 00009405 		ldreq	r0, [r4, #0]
 1771              	.LVL171:
 1772 0c48 0510A001 		moveq	r1, r5
 1773 0c4c 0120A003 		moveq	r2, #1
 1774 0c50 D7FDFF0B 		bleq	fat16_append_clusters
 1775              	.LVL172:
 1776              	.L128:
1102:../Library/sdfat/fat16.c ****                     if(!cluster_num_next)
 1777              		.loc 1 1102 0
 1778 0c54 000050E3 		cmp	r0, #0
 1779 0c58 4C00000A 		beq	.L141
1105:../Library/sdfat/fat16.c ****                     cluster_num = cluster_num_next;
 1780              		.loc 1 1105 0
 1781 0c5c 0050A0E1 		mov	r5, r0
 1782              	.LVL173:
 1783              	.L144:
1095:../Library/sdfat/fat16.c ****                 while(pos >= cluster_size)
 1784              		.loc 1 1095 0 discriminator 1
 1785 0c60 070056E1 		cmp	r6, r7
 1786 0c64 F0FFFF2A 		bcs	.L130
 1787              	.LVL174:
 1788              	.L125:
 1789              	.LBE71:
1069:../Library/sdfat/fat16.c ****         uint16_t first_cluster_offset = fd->pos % cluster_size;
 1790              		.loc 1 1069 0
 1791 0c68 0800A0E1 		mov	r0, r8
 1792 0c6c 0710A0E1 		mov	r1, r7
 1793 0c70 FEFFFFEB 		bl	__umodsi3
 1794 0c74 0008A0E1 		mov	r0, r0, asl #16
 1795 0c78 2098A0E1 		mov	r9, r0, lsr #16
 1796 0c7c 0B60A0E1 		mov	r6, fp
 1797              	.LVL175:
 1798              	.L134:
 1799              	.LBB72:
1114:../Library/sdfat/fat16.c ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1800              		.loc 1 1114 0
 1801 0c80 002094E5 		ldr	r2, [r4, #0]
 1802              	.LVL176:
1116:../Library/sdfat/fat16.c ****             uint16_t write_length = cluster_size - first_cluster_offset;
 1803              		.loc 1 1116 0
 1804 0c84 078069E0 		rsb	r8, r9, r7
1121:../Library/sdfat/fat16.c ****             if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
 1805              		.loc 1 1121 0
 1806 0c88 003092E5 		ldr	r3, [r2, #0]
1116:../Library/sdfat/fat16.c ****             uint16_t write_length = cluster_size - first_cluster_offset;
 1807              		.loc 1 1116 0
 1808 0c8c 0888A0E1 		mov	r8, r8, asl #16
1114:../Library/sdfat/fat16.c ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1809              		.loc 1 1114 0
 1810 0c90 182092E5 		ldr	r2, [r2, #24]
1116:../Library/sdfat/fat16.c ****             uint16_t write_length = cluster_size - first_cluster_offset;
 1811              		.loc 1 1116 0
 1812 0c94 2888A0E1 		mov	r8, r8, lsr #16
 1813              	.LVL177:
 1814 0c98 060058E1 		cmp	r8, r6
 1815 0c9c 0680A021 		movcs	r8, r6
 1816              	.LVL178:
1114:../Library/sdfat/fat16.c ****             uint32_t cluster_offset = fd->fs->header.cluster_zero_offset +
 1817              		.loc 1 1114 0
 1818 0ca0 022089E0 		add	r2, r9, r2
1115:../Library/sdfat/fat16.c ****             (uint32_t) (cluster_num - 2) * cluster_size + first_cluster_offset;
 1819              		.loc 1 1115 0
 1820 0ca4 020045E2 		sub	r0, r5, #2
1121:../Library/sdfat/fat16.c ****             if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
 1821              		.loc 1 1121 0
 1822 0ca8 972020E0 		mla	r0, r7, r0, r2
 1823 0cac 0A10A0E1 		mov	r1, sl
 1824 0cb0 0820A0E1 		mov	r2, r8
 1825 0cb4 08C093E5 		ldr	ip, [r3, #8]
 1826 0cb8 0FE0A0E1 		mov	lr, pc
 1827 0cbc 1CFF2FE1 		bx	ip
 1828              	.LVL179:
 1829 0cc0 000050E3 		cmp	r0, #0
 1830 0cc4 1D00000A 		beq	.L131
1127:../Library/sdfat/fat16.c ****             fd->pos += write_length;
 1831              		.loc 1 1127 0
 1832 0cc8 303094E5 		ldr	r3, [r4, #48]
1126:../Library/sdfat/fat16.c ****             buffer_left -= write_length;
 1833              		.loc 1 1126 0
 1834 0ccc 066068E0 		rsb	r6, r8, r6
 1835              	.LVL180:
1127:../Library/sdfat/fat16.c ****             fd->pos += write_length;
 1836              		.loc 1 1127 0
 1837 0cd0 083083E0 		add	r3, r3, r8
1125:../Library/sdfat/fat16.c ****             buffer += write_length;
 1838              		.loc 1 1125 0
 1839 0cd4 08A08AE0 		add	sl, sl, r8
 1840              	.LVL181:
1129:../Library/sdfat/fat16.c ****             if(first_cluster_offset + write_length >= cluster_size)
 1841              		.loc 1 1129 0
 1842 0cd8 088089E0 		add	r8, r9, r8
 1843              	.LVL182:
1126:../Library/sdfat/fat16.c ****             buffer_left -= write_length;
 1844              		.loc 1 1126 0
 1845 0cdc 0668A0E1 		mov	r6, r6, asl #16
1129:../Library/sdfat/fat16.c ****             if(first_cluster_offset + write_length >= cluster_size)
 1846              		.loc 1 1129 0
 1847 0ce0 070058E1 		cmp	r8, r7
1126:../Library/sdfat/fat16.c ****             buffer_left -= write_length;
 1848              		.loc 1 1126 0
 1849 0ce4 2668A0E1 		mov	r6, r6, lsr #16
 1850              	.LVL183:
1127:../Library/sdfat/fat16.c ****             fd->pos += write_length;
 1851              		.loc 1 1127 0
 1852 0ce8 303084E5 		str	r3, [r4, #48]
1129:../Library/sdfat/fat16.c ****             if(first_cluster_offset + write_length >= cluster_size)
 1853              		.loc 1 1129 0
 1854 0cec 100000BA 		blt	.L132
 1855              	.LBB73:
1132:../Library/sdfat/fat16.c ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 1856              		.loc 1 1132 0
 1857 0cf0 000094E5 		ldr	r0, [r4, #0]
 1858 0cf4 0510A0E1 		mov	r1, r5
 1859 0cf8 59FDFFEB 		bl	fat16_get_next_cluster
 1860              	.LVL184:
1133:../Library/sdfat/fat16.c ****                 if(!cluster_num_next && buffer_left > 0)
 1861              		.loc 1 1133 0
 1862 0cfc 013070E2 		rsbs	r3, r0, #1
 1863 0d00 0030A033 		movcc	r3, #0
 1864 0d04 000056E3 		cmp	r6, #0
 1865 0d08 0030A003 		moveq	r3, #0
 1866 0d0c 000053E3 		cmp	r3, #0
1135:../Library/sdfat/fat16.c ****                     cluster_num_next = fat16_append_clusters(fd->fs, cluster_num, 1);
 1867              		.loc 1 1135 0
 1868 0d10 00009415 		ldrne	r0, [r4, #0]
 1869              	.LVL185:
 1870 0d14 0510A011 		movne	r1, r5
 1871 0d18 0120A013 		movne	r2, #1
 1872 0d1c A4FDFF1B 		blne	fat16_append_clusters
 1873              	.LVL186:
 1874              	.L133:
1136:../Library/sdfat/fat16.c ****                 if(!cluster_num_next)
 1875              		.loc 1 1136 0
 1876 0d20 000050E3 		cmp	r0, #0
1138:../Library/sdfat/fat16.c ****                     fd->pos_cluster = 0;
 1877              		.loc 1 1138 0
 1878 0d24 B403C401 		streqh	r0, [r4, #52]	@ movhi
1139:../Library/sdfat/fat16.c ****                     break;
 1879              		.loc 1 1139 0
 1880 0d28 0400000A 		beq	.L131
 1881              	.L142:
1136:../Library/sdfat/fat16.c ****                 if(!cluster_num_next)
 1882              		.loc 1 1136 0
 1883 0d2c 0050A0E1 		mov	r5, r0
 1884              	.LVL187:
1143:../Library/sdfat/fat16.c ****                 first_cluster_offset = 0;
 1885              		.loc 1 1143 0
 1886 0d30 0090A0E3 		mov	r9, #0
 1887              	.LVL188:
 1888              	.L132:
 1889              	.LBE73:
 1890              	.LBE72:
1149:../Library/sdfat/fat16.c ****         while(buffer_left > 0); /* check if we are done */
 1891              		.loc 1 1149 0
 1892 0d34 000056E3 		cmp	r6, #0
 1893              	.LBB74:
1146:../Library/sdfat/fat16.c ****             fd->pos_cluster = cluster_num;
 1894              		.loc 1 1146 0
 1895 0d38 B453C4E1 		strh	r5, [r4, #52]	@ movhi
 1896              	.LBE74:
1149:../Library/sdfat/fat16.c ****         while(buffer_left > 0); /* check if we are done */
 1897              		.loc 1 1149 0
 1898 0d3c CFFFFF1A 		bne	.L134
 1899              	.LVL189:
 1900              	.L131:
1152:../Library/sdfat/fat16.c ****         if(fd->pos > fd->dir_entry.file_size)
 1901              		.loc 1 1152 0
 1902 0d40 303094E5 		ldr	r3, [r4, #48]
 1903 0d44 285094E5 		ldr	r5, [r4, #40]
 1904 0d48 050053E1 		cmp	r3, r5
 1905 0d4c 0900009A 		bls	.L135
 1906              	.LVL190:
 1907              	.LBB75:
1157:../Library/sdfat/fat16.c ****             fd->dir_entry.file_size = fd->pos;
 1908              		.loc 1 1157 0
 1909 0d50 283084E5 		str	r3, [r4, #40]
1159:../Library/sdfat/fat16.c ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 1910              		.loc 1 1159 0
 1911 0d54 000094E5 		ldr	r0, [r4, #0]
 1912 0d58 041084E2 		add	r1, r4, #4
 1913 0d5c EEFDFFEB 		bl	fat16_write_dir_entry
 1914              	.LVL191:
 1915 0d60 000050E3 		cmp	r0, #0
1165:../Library/sdfat/fat16.c ****                 buffer_left = fd->pos - size_old;
 1916              		.loc 1 1165 0
 1917 0d64 30609405 		ldreq	r6, [r4, #48]
 1918              	.LVL192:
 1919 0d68 06606500 		rsbeq	r6, r5, r6
 1920 0d6c 0668A001 		moveq	r6, r6, asl #16
1166:../Library/sdfat/fat16.c ****                 fd->pos = size_old;
 1921              		.loc 1 1166 0
 1922 0d70 30508405 		streq	r5, [r4, #48]
1165:../Library/sdfat/fat16.c ****                 buffer_left = fd->pos - size_old;
 1923              		.loc 1 1165 0
 1924 0d74 2668A001 		moveq	r6, r6, lsr #16
 1925              	.LVL193:
 1926              	.L135:
 1927              	.LBE75:
1170:../Library/sdfat/fat16.c ****         return buffer_len - buffer_left;
 1928              		.loc 1 1170 0
 1929 0d78 0B6066E0 		rsb	r6, r6, fp
 1930              	.LVL194:
 1931 0d7c 0668A0E1 		mov	r6, r6, asl #16
 1932 0d80 2668A0E1 		mov	r6, r6, lsr #16
 1933 0d84 020000EA 		b	.L124
 1934              	.LVL195:
 1935              	.L140:
1083:../Library/sdfat/fat16.c ****                         return -1;
 1936              		.loc 1 1083 0
 1937 0d88 18609FE5 		ldr	r6, .L145+4
 1938 0d8c 000000EA 		b	.L124
 1939              	.LVL196:
 1940              	.L141:
 1941              	.LBB76:
1103:../Library/sdfat/fat16.c ****                         return -3;
 1942              		.loc 1 1103 0
 1943 0d90 14609FE5 		ldr	r6, .L145+8
 1944              	.LVL197:
 1945              	.L124:
 1946              	.LBE76:
1170:../Library/sdfat/fat16.c ****         return buffer_len - buffer_left;
 1947              		.loc 1 1170 0
 1948 0d94 0668A0E1 		mov	r6, r6, asl #16
1175:../Library/sdfat/fat16.c **** }
 1949              		.loc 1 1175 0
 1950 0d98 4608A0E1 		mov	r0, r6, asr #16
 1951 0d9c F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1952 0da0 1EFF2FE1 		bx	lr
 1953              	.L146:
 1954              		.align	2
 1955              	.L145:
 1956 0da4 FEFF0000 		.word	65534
 1957 0da8 FFFF0000 		.word	65535
 1958 0dac FDFF0000 		.word	65533
 1959              		.cfi_endproc
 1960              	.LFE16:
 1962              		.align	2
 1963              		.global	fat16_resize_file
 1965              	fat16_resize_file:
 1966              	.LFB18:
1254:../Library/sdfat/fat16.c **** {
 1967              		.loc 1 1254 0
 1968              		.cfi_startproc
 1969              		@ Function supports interworking.
 1970              		@ args = 0, pretend = 0, frame = 4
 1971              		@ frame_needed = 0, uses_anonymous_args = 0
 1972              	.LVL198:
 1973 0db0 F1472DE9 		stmfd	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, lr}
 1974              	.LCFI15:
 1975              		.cfi_def_cfa_offset 36
 1976              		.cfi_offset 14, -4
 1977              		.cfi_offset 10, -8
 1978              		.cfi_offset 9, -12
 1979              		.cfi_offset 8, -16
 1980              		.cfi_offset 7, -20
 1981              		.cfi_offset 6, -24
 1982              		.cfi_offset 5, -28
 1983              		.cfi_offset 4, -32
 1984              		.cfi_offset 0, -36
1256:../Library/sdfat/fat16.c ****         if(!fd)
 1985              		.loc 1 1256 0
 1986 0db4 004050E2 		subs	r4, r0, #0
1254:../Library/sdfat/fat16.c **** {
 1987              		.loc 1 1254 0
 1988 0db8 0170A0E1 		mov	r7, r1
1257:../Library/sdfat/fat16.c ****             return 0;
 1989              		.loc 1 1257 0
 1990 0dbc 0400A001 		moveq	r0, r4
 1991              	.LVL199:
1256:../Library/sdfat/fat16.c ****         if(!fd)
 1992              		.loc 1 1256 0
 1993 0dc0 5A00000A 		beq	.L148
1259:../Library/sdfat/fat16.c ****         uint16_t cluster_num = fd->dir_entry.cluster;
 1994              		.loc 1 1259 0
 1995 0dc4 B652D4E1 		ldrh	r5, [r4, #38]
 1996              	.LVL200:
1265:../Library/sdfat/fat16.c ****             if(cluster_num == 0 && size_new == 0)
 1997              		.loc 1 1265 0
 1998 0dc8 019071E2 		rsbs	r9, r1, #1
1260:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 1999              		.loc 1 1260 0
 2000 0dcc 003094E5 		ldr	r3, [r4, #0]
1265:../Library/sdfat/fat16.c ****             if(cluster_num == 0 && size_new == 0)
 2001              		.loc 1 1265 0
 2002 0dd0 0090A033 		movcc	r9, #0
 2003 0dd4 000055E3 		cmp	r5, #0
 2004 0dd8 00005103 		cmpeq	r1, #0
1260:../Library/sdfat/fat16.c ****         uint16_t cluster_size = fd->fs->header.cluster_size;
 2005              		.loc 1 1260 0
 2006 0ddc B281D3E1 		ldrh	r8, [r3, #18]
 2007              	.LVL201:
1265:../Library/sdfat/fat16.c ****             if(cluster_num == 0 && size_new == 0)
 2008              		.loc 1 1265 0
 2009 0de0 0160A011 		movne	r6, r1
 2010 0de4 0700001A 		bne	.L150
 2011 0de8 4A0000EA 		b	.L149
 2012              	.LVL202:
 2013              	.L152:
 2014              	.LBB77:
1273:../Library/sdfat/fat16.c ****                 uint16_t cluster_num_next = fat16_get_next_cluster(fd->fs, cluster_num);
 2015              		.loc 1 1273 0
 2016 0dec 000094E5 		ldr	r0, [r4, #0]
 2017 0df0 0510A0E1 		mov	r1, r5
 2018 0df4 1AFDFFEB 		bl	fat16_get_next_cluster
 2019              	.LVL203:
1274:../Library/sdfat/fat16.c ****                 if(cluster_num_next)
 2020              		.loc 1 1274 0
 2021 0df8 000050E3 		cmp	r0, #0
 2022              	.LVL204:
 2023 0dfc 0300000A 		beq	.L151
 2024              	.LVL205:
1253:../Library/sdfat/fat16.c **** uint8_t fat16_resize_file(struct fat16_file_struct* fd, uint32_t size)
 2025              		.loc 1 1253 0
 2026 0e00 066068E0 		rsb	r6, r8, r6
 2027              	.LVL206:
1276:../Library/sdfat/fat16.c ****                     cluster_num = cluster_num_next;
 2028              		.loc 1 1276 0
 2029 0e04 0050A0E1 		mov	r5, r0
 2030              	.LVL207:
 2031              	.L150:
 2032              	.LBE77:
1270:../Library/sdfat/fat16.c ****             while(size_new > cluster_size)
 2033              		.loc 1 1270 0 discriminator 1
 2034 0e08 080056E1 		cmp	r6, r8
 2035 0e0c F6FFFF8A 		bhi	.L152
 2036              	.L151:
1285:../Library/sdfat/fat16.c ****             if(size_new > cluster_size || cluster_num == 0)
 2037              		.loc 1 1285 0
 2038 0e10 01A075E2 		rsbs	sl, r5, #1
 2039 0e14 00A0A033 		movcc	sl, #0
 2040 0e18 080056E1 		cmp	r6, r8
 2041 0e1c 0A30A091 		movls	r3, sl
 2042 0e20 01308A83 		orrhi	r3, sl, #1
 2043 0e24 000053E3 		cmp	r3, #0
 2044 0e28 1100000A 		beq	.L153
 2045              	.LBB78:
1290:../Library/sdfat/fat16.c ****                 uint16_t cluster_count = size_new / cluster_size;
 2046              		.loc 1 1290 0
 2047 0e2c 0810A0E1 		mov	r1, r8
 2048 0e30 0600A0E1 		mov	r0, r6
 2049 0e34 FEFFFFEB 		bl	__udivsi3
 2050 0e38 0028A0E1 		mov	r2, r0, asl #16
 2051 0e3c 2228A0E1 		mov	r2, r2, lsr #16
 2052              	.LVL208:
1291:../Library/sdfat/fat16.c ****                 if((uint32_t) cluster_count * cluster_size < size_new)
 2053              		.loc 1 1291 0
 2054 0e40 980203E0 		mul	r3, r8, r2
 2055 0e44 060053E1 		cmp	r3, r6
1292:../Library/sdfat/fat16.c ****                     ++cluster_count;
 2056              		.loc 1 1292 0
 2057 0e48 01208232 		addcc	r2, r2, #1
 2058              	.LVL209:
 2059 0e4c 0228A031 		movcc	r2, r2, asl #16
 2060 0e50 2228A031 		movcc	r2, r2, lsr #16
 2061              	.LVL210:
1293:../Library/sdfat/fat16.c ****                 uint16_t cluster_new_chain = fat16_append_clusters(fd->fs, cluster_num, cluster_cou
 2062              		.loc 1 1293 0
 2063 0e54 000094E5 		ldr	r0, [r4, #0]
 2064 0e58 0510A0E1 		mov	r1, r5
 2065 0e5c 54FDFFEB 		bl	fat16_append_clusters
 2066              	.LVL211:
1294:../Library/sdfat/fat16.c ****                 if(!cluster_new_chain)
 2067              		.loc 1 1294 0
 2068 0e60 000050E3 		cmp	r0, #0
 2069              	.LVL212:
 2070 0e64 3100000A 		beq	.L148
1297:../Library/sdfat/fat16.c ****                 if(!cluster_num)
 2071              		.loc 1 1297 0
 2072 0e68 00005AE3 		cmp	sl, #0
 2073              	.LVL213:
1300:../Library/sdfat/fat16.c ****                     fd->dir_entry.cluster = cluster_num;
 2074              		.loc 1 1300 0
 2075 0e6c B602C411 		strneh	r0, [r4, #38]	@ movhi
 2076 0e70 0050A011 		movne	r5, r0
 2077              	.LVL214:
 2078              	.L153:
 2079              	.LBE78:
1306:../Library/sdfat/fat16.c ****             if(size == 0)
 2080              		.loc 1 1306 0
 2081 0e74 000059E3 		cmp	r9, #0
1307:../Library/sdfat/fat16.c ****                 fd->dir_entry.cluster = 0;
 2082              		.loc 1 1307 0
 2083 0e78 0030A013 		movne	r3, #0
 2084 0e7c B632C411 		strneh	r3, [r4, #38]	@ movhi
1305:../Library/sdfat/fat16.c ****             fd->dir_entry.file_size = size;
 2085              		.loc 1 1305 0
 2086 0e80 287084E5 		str	r7, [r4, #40]
1308:../Library/sdfat/fat16.c ****             if(!fat16_write_dir_entry(fd->fs, &fd->dir_entry))
 2087              		.loc 1 1308 0
 2088 0e84 000094E5 		ldr	r0, [r4, #0]
 2089 0e88 041084E2 		add	r1, r4, #4
 2090 0e8c A2FDFFEB 		bl	fat16_write_dir_entry
 2091 0e90 000050E3 		cmp	r0, #0
 2092 0e94 2500000A 		beq	.L148
1311:../Library/sdfat/fat16.c ****             if(size == 0)
 2093              		.loc 1 1311 0
 2094 0e98 000059E3 		cmp	r9, #0
1314:../Library/sdfat/fat16.c ****                 fat16_free_clusters(fd->fs, cluster_num);
 2095              		.loc 1 1314 0
 2096 0e9c 00009415 		ldrne	r0, [r4, #0]
 2097 0ea0 0510A011 		movne	r1, r5
1311:../Library/sdfat/fat16.c ****             if(size == 0)
 2098              		.loc 1 1311 0
 2099 0ea4 1A00001A 		bne	.L162
1316:../Library/sdfat/fat16.c ****             else if(size_new <= cluster_size)
 2100              		.loc 1 1316 0
 2101 0ea8 080056E1 		cmp	r6, r8
 2102 0eac 1900008A 		bhi	.L149
1319:../Library/sdfat/fat16.c ****                 fat16_terminate_clusters(fd->fs, cluster_num);
 2103              		.loc 1 1319 0
 2104 0eb0 006094E5 		ldr	r6, [r4, #0]
 2105              	.LVL215:
 2106              	.LBB79:
 2107              	.LBB80:
 887:../Library/sdfat/fat16.c ****         if(!fs || cluster_num < 2)
 2108              		.loc 1 887 0
 2109 0eb4 000056E3 		cmp	r6, #0
 2110 0eb8 01005513 		cmpne	r5, #1
 2111 0ebc 1500009A 		bls	.L149
 891:../Library/sdfat/fat16.c ****         uint16_t cluster_num_next = fat16_get_next_cluster(fs, cluster_num);
 2112              		.loc 1 891 0
 2113 0ec0 0510A0E1 		mov	r1, r5
 2114 0ec4 0600A0E1 		mov	r0, r6
 2115 0ec8 E5FCFFEB 		bl	fat16_get_next_cluster
 2116              	.LVL216:
 895:../Library/sdfat/fat16.c ****         buffer[0] = FAT16_CLUSTER_LAST_MAX & 0xff;
 2117              		.loc 1 895 0
 2118 0ecc 0030E0E3 		mvn	r3, #0
 2119 0ed0 0030CDE5 		strb	r3, [sp, #0]
 896:../Library/sdfat/fat16.c ****         buffer[1] = (FAT16_CLUSTER_LAST_MAX >> 8) & 0xff;
 2120              		.loc 1 896 0
 2121 0ed4 0130CDE5 		strb	r3, [sp, #1]
 891:../Library/sdfat/fat16.c ****         uint16_t cluster_num_next = fat16_get_next_cluster(fs, cluster_num);
 2122              		.loc 1 891 0
 2123 0ed8 0080A0E1 		mov	r8, r0
 2124              	.LVL217:
 897:../Library/sdfat/fat16.c ****         if(!fs->partition->device_write(fs->header.fat_offset + 2 * cluster_num, buffer, 2))
 2125              		.loc 1 897 0
 2126 0edc 080096E5 		ldr	r0, [r6, #8]
 2127              	.LVL218:
 2128 0ee0 003096E5 		ldr	r3, [r6, #0]
 2129 0ee4 850080E0 		add	r0, r0, r5, asl #1
 2130 0ee8 0D10A0E1 		mov	r1, sp
 2131 0eec 0220A0E3 		mov	r2, #2
 2132 0ef0 08C093E5 		ldr	ip, [r3, #8]
 2133 0ef4 0FE0A0E1 		mov	lr, pc
 2134 0ef8 1CFF2FE1 		bx	ip
 2135 0efc 000050E3 		cmp	r0, #0
 2136 0f00 0400000A 		beq	.L149
 901:../Library/sdfat/fat16.c ****         if(cluster_num_next)
 2137              		.loc 1 901 0
 2138 0f04 000058E3 		cmp	r8, #0
 2139 0f08 0200000A 		beq	.L149
 902:../Library/sdfat/fat16.c ****             return fat16_free_clusters(fs, cluster_num_next);
 2140              		.loc 1 902 0
 2141 0f0c 0600A0E1 		mov	r0, r6
 2142 0f10 0810A0E1 		mov	r1, r8
 2143              	.LVL219:
 2144              	.L162:
 2145 0f14 F7FCFFEB 		bl	fat16_free_clusters
 2146              	.LVL220:
 2147              	.L149:
 2148              	.LBE80:
 2149              	.LBE79:
1326:../Library/sdfat/fat16.c ****         if(size < fd->pos)
 2150              		.loc 1 1326 0
 2151 0f18 303094E5 		ldr	r3, [r4, #48]
 2152 0f1c 030057E1 		cmp	r7, r3
1329:../Library/sdfat/fat16.c ****             fd->pos_cluster = 0;
 2153              		.loc 1 1329 0
 2154 0f20 0030A033 		movcc	r3, #0
1328:../Library/sdfat/fat16.c ****             fd->pos = size;
 2155              		.loc 1 1328 0
 2156 0f24 30708435 		strcc	r7, [r4, #48]
1329:../Library/sdfat/fat16.c ****             fd->pos_cluster = 0;
 2157              		.loc 1 1329 0
 2158 0f28 B433C431 		strcch	r3, [r4, #52]	@ movhi
1332:../Library/sdfat/fat16.c ****         return 1;
 2159              		.loc 1 1332 0
 2160 0f2c 0100A0E3 		mov	r0, #1
 2161              	.L148:
1336:../Library/sdfat/fat16.c **** }
 2162              		.loc 1 1336 0
 2163 0f30 F847BDE8 		ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, lr}
 2164 0f34 1EFF2FE1 		bx	lr
 2165              		.cfi_endproc
 2166              	.LFE18:
 2168              		.align	2
 2169              		.global	fat16_seek_file
 2171              	fat16_seek_file:
 2172              	.LFB17:
1204:../Library/sdfat/fat16.c **** {
 2173              		.loc 1 1204 0
 2174              		.cfi_startproc
 2175              		@ Function supports interworking.
 2176              		@ args = 0, pretend = 0, frame = 0
 2177              		@ frame_needed = 0, uses_anonymous_args = 0
 2178              	.LVL221:
1205:../Library/sdfat/fat16.c ****     if(!fd || !offset)
 2179              		.loc 1 1205 0
 2180 0f38 000050E3 		cmp	r0, #0
 2181 0f3c 00005113 		cmpne	r1, #0
1204:../Library/sdfat/fat16.c **** {
 2182              		.loc 1 1204 0
 2183 0f40 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 2184              	.LCFI16:
 2185              		.cfi_def_cfa_offset 16
 2186              		.cfi_offset 14, -4
 2187              		.cfi_offset 6, -8
 2188              		.cfi_offset 5, -12
 2189              		.cfi_offset 4, -16
1204:../Library/sdfat/fat16.c **** {
 2190              		.loc 1 1204 0
 2191 0f44 FF2002E2 		and	r2, r2, #255
 2192              	.LVL222:
1205:../Library/sdfat/fat16.c ****     if(!fd || !offset)
 2193              		.loc 1 1205 0
 2194 0f48 0040A0E1 		mov	r4, r0
 2195 0f4c 0150A0E1 		mov	r5, r1
 2196 0f50 0000A013 		movne	r0, #0
 2197 0f54 0100A003 		moveq	r0, #1
 2198              	.LVL223:
1206:../Library/sdfat/fat16.c ****         return 0;
 2199              		.loc 1 1206 0
 2200 0f58 0000A003 		moveq	r0, #0
1205:../Library/sdfat/fat16.c ****     if(!fd || !offset)
 2201              		.loc 1 1205 0
 2202 0f5c 1900000A 		beq	.L164
1209:../Library/sdfat/fat16.c ****     switch(whence)
 2203              		.loc 1 1209 0
 2204 0f60 010052E3 		cmp	r2, #1
1208:../Library/sdfat/fat16.c ****     uint32_t new_pos = fd->pos;
 2205              		.loc 1 1208 0
 2206 0f64 306094E5 		ldr	r6, [r4, #48]
 2207              	.LVL224:
1209:../Library/sdfat/fat16.c ****     switch(whence)
 2208              		.loc 1 1209 0
 2209 0f68 0400000A 		beq	.L166
1212:../Library/sdfat/fat16.c ****             new_pos = *offset;
 2210              		.loc 1 1212 0
 2211 0f6c 00609135 		ldrcc	r6, [r1, #0]
1209:../Library/sdfat/fat16.c ****     switch(whence)
 2212              		.loc 1 1209 0
 2213 0f70 0700003A 		bcc	.L168
 2214 0f74 020052E3 		cmp	r2, #2
 2215 0f78 1200001A 		bne	.L164
 2216 0f7c 010000EA 		b	.L175
 2217              	.L166:
1215:../Library/sdfat/fat16.c ****             new_pos += *offset;
 2218              		.loc 1 1215 0
 2219 0f80 003091E5 		ldr	r3, [r1, #0]
 2220 0f84 010000EA 		b	.L174
 2221              	.L175:
1218:../Library/sdfat/fat16.c ****             new_pos = fd->dir_entry.file_size + *offset;
 2222              		.loc 1 1218 0
 2223 0f88 006091E5 		ldr	r6, [r1, #0]
 2224 0f8c 283094E5 		ldr	r3, [r4, #40]
 2225              	.L174:
 2226 0f90 036086E0 		add	r6, r6, r3
 2227              	.LVL225:
 2228              	.L168:
1224:../Library/sdfat/fat16.c ****     if(new_pos > fd->dir_entry.file_size && !fat16_resize_file(fd, new_pos))
 2229              		.loc 1 1224 0
 2230 0f94 283094E5 		ldr	r3, [r4, #40]
 2231 0f98 030056E1 		cmp	r6, r3
 2232 0f9c 0400009A 		bls	.L169
1224:../Library/sdfat/fat16.c ****     if(new_pos > fd->dir_entry.file_size && !fat16_resize_file(fd, new_pos))
 2233              		.loc 1 1224 0 is_stmt 0 discriminator 1
 2234 0fa0 0400A0E1 		mov	r0, r4
 2235 0fa4 0610A0E1 		mov	r1, r6
 2236              	.LVL226:
 2237 0fa8 FEFFFFEB 		bl	fat16_resize_file
 2238 0fac 000050E3 		cmp	r0, #0
 2239 0fb0 0400000A 		beq	.L164
 2240              	.L169:
1228:../Library/sdfat/fat16.c ****     fd->pos_cluster = 0;
 2241              		.loc 1 1228 0 is_stmt 1
 2242 0fb4 0030A0E3 		mov	r3, #0
1227:../Library/sdfat/fat16.c ****     fd->pos = new_pos;
 2243              		.loc 1 1227 0
 2244 0fb8 306084E5 		str	r6, [r4, #48]
1228:../Library/sdfat/fat16.c ****     fd->pos_cluster = 0;
 2245              		.loc 1 1228 0
 2246 0fbc B433C4E1 		strh	r3, [r4, #52]	@ movhi
1230:../Library/sdfat/fat16.c ****     *offset = new_pos;
 2247              		.loc 1 1230 0
 2248 0fc0 006085E5 		str	r6, [r5, #0]
1231:../Library/sdfat/fat16.c ****     return 1;
 2249              		.loc 1 1231 0
 2250 0fc4 0100A0E3 		mov	r0, #1
 2251              	.LVL227:
 2252              	.L164:
1232:../Library/sdfat/fat16.c **** }
 2253              		.loc 1 1232 0
 2254 0fc8 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 2255 0fcc 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE17:
 2259              		.align	2
 2260              		.global	fat16_open_dir
 2262              	fat16_open_dir:
 2263              	.LFB19:
1348:../Library/sdfat/fat16.c **** {
 2264              		.loc 1 1348 0
 2265              		.cfi_startproc
 2266              		@ Function supports interworking.
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              	.LVL228:
1349:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 2270              		.loc 1 1349 0
 2271 0fd0 000050E3 		cmp	r0, #0
 2272 0fd4 00005113 		cmpne	r1, #0
1348:../Library/sdfat/fat16.c **** {
 2273              		.loc 1 1348 0
 2274 0fd8 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 2275              	.LCFI17:
 2276              		.cfi_def_cfa_offset 20
 2277              		.cfi_offset 14, -4
 2278              		.cfi_offset 7, -8
 2279              		.cfi_offset 6, -12
 2280              		.cfi_offset 5, -16
 2281              		.cfi_offset 4, -20
1349:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 2282              		.loc 1 1349 0
 2283 0fdc 0170A0E1 		mov	r7, r1
 2284 0fe0 0050A0E1 		mov	r5, r0
 2285 0fe4 0060A013 		movne	r6, #0
 2286 0fe8 0160A003 		moveq	r6, #1
1350:../Library/sdfat/fat16.c ****         return 0;
 2287              		.loc 1 1350 0
 2288 0fec 0040A003 		moveq	r4, #0
1349:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 2289              		.loc 1 1349 0
 2290 0ff0 0C00000A 		beq	.L177
1349:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT16_ATTRIB_DIR))
 2291              		.loc 1 1349 0 is_stmt 0 discriminator 1
 2292 0ff4 2040D1E5 		ldrb	r4, [r1, #32]	@ zero_extendqisi2
 2293 0ff8 104014E2 		ands	r4, r4, #16
 2294 0ffc 0900000A 		beq	.L177
1352:../Library/sdfat/fat16.c ****     struct fat16_dir_struct* dd = malloc(sizeof(*dd));
 2295              		.loc 1 1352 0 is_stmt 1
 2296 1000 3400A0E3 		mov	r0, #52
 2297              	.LVL229:
 2298 1004 FEFFFFEB 		bl	malloc
 2299              	.LVL230:
1353:../Library/sdfat/fat16.c ****     if(!dd)
 2300              		.loc 1 1353 0
 2301 1008 004050E2 		subs	r4, r0, #0
 2302 100c 0500000A 		beq	.L177
1356:../Library/sdfat/fat16.c ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
 2303              		.loc 1 1356 0
 2304 1010 040084E2 		add	r0, r4, #4
 2305              	.LVL231:
 2306 1014 0710A0E1 		mov	r1, r7
 2307 1018 2C20A0E3 		mov	r2, #44
 2308 101c FEFFFFEB 		bl	memcpy
1357:../Library/sdfat/fat16.c ****     dd->fs = fs;
 2309              		.loc 1 1357 0
 2310 1020 005084E5 		str	r5, [r4, #0]
1358:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
 2311              		.loc 1 1358 0
 2312 1024 B063C4E1 		strh	r6, [r4, #48]	@ movhi
 2313              	.LVL232:
 2314              	.L177:
1361:../Library/sdfat/fat16.c **** }
 2315              		.loc 1 1361 0
 2316 1028 0400A0E1 		mov	r0, r4
 2317 102c F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 2318 1030 1EFF2FE1 		bx	lr
 2319              		.cfi_endproc
 2320              	.LFE19:
 2322              		.align	2
 2323              		.global	fat16_close_dir
 2325              	fat16_close_dir:
 2326              	.LFB20:
1375:../Library/sdfat/fat16.c **** {
 2327              		.loc 1 1375 0
 2328              		.cfi_startproc
 2329              		@ Function supports interworking.
 2330              		@ args = 0, pretend = 0, frame = 0
 2331              		@ frame_needed = 0, uses_anonymous_args = 0
 2332              	.LVL233:
1376:../Library/sdfat/fat16.c ****     if(dd)
 2333              		.loc 1 1376 0
 2334 1034 000050E3 		cmp	r0, #0
1375:../Library/sdfat/fat16.c **** {
 2335              		.loc 1 1375 0
 2336 1038 04E02DE5 		str	lr, [sp, #-4]!
 2337              	.LCFI18:
 2338              		.cfi_def_cfa_offset 4
 2339              		.cfi_offset 14, -4
1376:../Library/sdfat/fat16.c ****     if(dd)
 2340              		.loc 1 1376 0
1377:../Library/sdfat/fat16.c ****         free(dd);
 2341              		.loc 1 1377 0
 2342 103c FEFFFF1B 		blne	free
 2343              	.LVL234:
 2344              	.L180:
1378:../Library/sdfat/fat16.c **** }
 2345              		.loc 1 1378 0
 2346 1040 04E09DE4 		ldr	lr, [sp], #4
 2347 1044 1EFF2FE1 		bx	lr
 2348              		.cfi_endproc
 2349              	.LFE20:
 2351              		.align	2
 2352              		.global	fat16_read_dir
 2354              	fat16_read_dir:
 2355              	.LFB21:
1390:../Library/sdfat/fat16.c **** {
 2356              		.loc 1 1390 0
 2357              		.cfi_startproc
 2358              		@ Function supports interworking.
 2359              		@ args = 0, pretend = 0, frame = 44
 2360              		@ frame_needed = 0, uses_anonymous_args = 0
 2361              	.LVL235:
 2362 1048 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2363              	.LCFI19:
 2364              		.cfi_def_cfa_offset 36
 2365              		.cfi_offset 14, -4
 2366              		.cfi_offset 11, -8
 2367              		.cfi_offset 10, -12
 2368              		.cfi_offset 9, -16
 2369              		.cfi_offset 8, -20
 2370              		.cfi_offset 7, -24
 2371              		.cfi_offset 6, -28
 2372              		.cfi_offset 5, -32
 2373              		.cfi_offset 4, -36
1391:../Library/sdfat/fat16.c ****     if(!dd || !dir_entry)
 2374              		.loc 1 1391 0
 2375 104c 000050E3 		cmp	r0, #0
 2376 1050 00005113 		cmpne	r1, #0
 2377 1054 0040A0E1 		mov	r4, r0
1390:../Library/sdfat/fat16.c **** {
 2378              		.loc 1 1390 0
 2379 1058 34D04DE2 		sub	sp, sp, #52
 2380              	.LCFI20:
 2381              		.cfi_def_cfa_offset 88
1391:../Library/sdfat/fat16.c ****     if(!dd || !dir_entry)
 2382              		.loc 1 1391 0
 2383 105c 0160A0E1 		mov	r6, r1
1392:../Library/sdfat/fat16.c ****         return 0;
 2384              		.loc 1 1392 0
 2385 1060 0000A003 		moveq	r0, #0
 2386              	.LVL236:
1391:../Library/sdfat/fat16.c ****     if(!dd || !dir_entry)
 2387              		.loc 1 1391 0
 2388 1064 6800000A 		beq	.L183
 2389              	.LVL237:
 2390              	.LBB87:
 2391              	.LBB88:
1394:../Library/sdfat/fat16.c ****     if(dd->dir_entry.cluster == 0)
 2392              		.loc 1 1394 0
 2393 1068 B672D4E1 		ldrh	r7, [r4, #38]
 2394 106c 000057E3 		cmp	r7, #0
 2395 1070 005094E5 		ldr	r5, [r4, #0]
 2396 1074 B0B3D4E1 		ldrh	fp, [r4, #48]
 2397 1078 2600001A 		bne	.L184
 2398              	.LVL238:
 2399              	.LBB89:
 2400              	.LBB90:
 358:../Library/sdfat/fat16.c ****     if(!fs || !dir_entry)
 2401              		.loc 1 358 0
 2402 107c 000055E3 		cmp	r5, #0
 2403 1080 5F00000A 		beq	.L186
 2404              	.LVL239:
 363:../Library/sdfat/fat16.c ****     device_read_interval_t device_read_interval = fs->partition->device_read_interval;
 2405              		.loc 1 363 0
 2406 1084 003095E5 		ldr	r3, [r5, #0]
 368:../Library/sdfat/fat16.c ****     memset(&arg, 0, sizeof(arg));
 2407              		.loc 1 368 0
 2408 1088 28A08DE2 		add	sl, sp, #40
 2409 108c 0710A0E1 		mov	r1, r7
 2410              	.LVL240:
 2411 1090 0C20A0E3 		mov	r2, #12
 2412 1094 0A00A0E1 		mov	r0, sl
 363:../Library/sdfat/fat16.c ****     device_read_interval_t device_read_interval = fs->partition->device_read_interval;
 2413              		.loc 1 363 0
 2414 1098 048093E5 		ldr	r8, [r3, #4]
 2415              	.LVL241:
 368:../Library/sdfat/fat16.c ****     memset(&arg, 0, sizeof(arg));
 2416              		.loc 1 368 0
 2417 109c FEFFFFEB 		bl	memset
 2418              	.LVL242:
 370:../Library/sdfat/fat16.c ****     if(!device_read_interval(header->root_dir_offset,
 2419              		.loc 1 370 0
 2420 10a0 140085E2 		add	r0, r5, #20
 2421 10a4 090090E8 		ldmia	r0, {r0, r3}
 2422 10a8 68219FE5 		ldr	r2, .L197
 2423 10ac 033060E0 		rsb	r3, r0, r3
 2424 10b0 0338A0E1 		mov	r3, r3, asl #16
 2425 10b4 04048DE8 		stmia	sp, {r2, sl}
 369:../Library/sdfat/fat16.c ****     arg.entry_num = entry_num;
 2426              		.loc 1 369 0
 2427 10b8 BAB2CDE1 		strh	fp, [sp, #42]	@ movhi
 370:../Library/sdfat/fat16.c ****     if(!device_read_interval(header->root_dir_offset,
 2428              		.loc 1 370 0
 2429 10bc 08108DE2 		add	r1, sp, #8
 2430 10c0 2020A0E3 		mov	r2, #32
 2431 10c4 2338A0E1 		mov	r3, r3, lsr #16
 2432 10c8 0FE0A0E1 		mov	lr, pc
 2433 10cc 18FF2FE1 		bx	r8
 2434 10d0 000050E3 		cmp	r0, #0
 2435 10d4 4A00000A 		beq	.L186
 376:../Library/sdfat/fat16.c ****        arg.entry_offset == 0
 2436              		.loc 1 376 0
 2437 10d8 2C509DE5 		ldr	r5, [sp, #44]
 2438              	.LVL243:
 375:../Library/sdfat/fat16.c ****        &arg) ||
 2439              		.loc 1 375 0
 2440 10dc 000055E3 		cmp	r5, #0
 2441 10e0 4700000A 		beq	.L186
 381:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 2442              		.loc 1 381 0
 2443 10e4 0710A0E1 		mov	r1, r7
 2444 10e8 0600A0E1 		mov	r0, r6
 2445 10ec 2C20A0E3 		mov	r2, #44
 2446 10f0 FEFFFFEB 		bl	memset
 382:../Library/sdfat/fat16.c ****     if(!device_read_interval(arg.entry_offset,
 2447              		.loc 1 382 0
 2448 10f4 20219FE5 		ldr	r2, .L197+4
 2449 10f8 3030DDE5 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 2450 10fc 44008DE8 		stmia	sp, {r2, r6}
 2451 1100 0500A0E1 		mov	r0, r5
 2452 1104 08108DE2 		add	r1, sp, #8
 2453 1108 2020A0E3 		mov	r2, #32
 2454 110c 0FE0A0E1 		mov	lr, pc
 2455 1110 18FF2FE1 		bx	r8
 2456 1114 310000EA 		b	.L196
 2457              	.LVL244:
 2458              	.L184:
 2459              	.LBE90:
 2460              	.LBE89:
 2461              	.LBB91:
 2462              	.LBB92:
 406:../Library/sdfat/fat16.c ****     if(!fs || !parent || !dir_entry)
 2463              		.loc 1 406 0
 2464 1118 000055E3 		cmp	r5, #0
 2465 111c 3800000A 		beq	.L186
 410:../Library/sdfat/fat16.c ****     if(!(parent->attributes & FAT16_ATTRIB_DIR))
 2466              		.loc 1 410 0
 2467 1120 2430D4E5 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 2468 1124 100013E3 		tst	r3, #16
 2469 1128 3500000A 		beq	.L186
 416:../Library/sdfat/fat16.c ****     uint16_t cluster_size = fs->header.cluster_size;
 2470              		.loc 1 416 0
 2471 112c B291D5E1 		ldrh	r9, [r5, #18]
 2472              	.LVL245:
 426:../Library/sdfat/fat16.c ****         memset(&arg, 0, sizeof(arg));
 2473              		.loc 1 426 0
 2474 1130 28A08DE2 		add	sl, sp, #40
 2475              	.LVL246:
 2476              	.L190:
 423:../Library/sdfat/fat16.c ****         cluster_offset = fs->header.cluster_zero_offset + (uint32_t) (cluster_num - 2) * cluster_si
 2477              		.loc 1 423 0
 2478 1134 183095E5 		ldr	r3, [r5, #24]
 2479 1138 028047E2 		sub	r8, r7, #2
 2480 113c 993828E0 		mla	r8, r9, r8, r3
 2481              	.LVL247:
 426:../Library/sdfat/fat16.c ****         memset(&arg, 0, sizeof(arg));
 2482              		.loc 1 426 0
 2483 1140 0010A0E3 		mov	r1, #0
 2484 1144 0C20A0E3 		mov	r2, #12
 2485 1148 0A00A0E1 		mov	r0, sl
 2486 114c FEFFFFEB 		bl	memset
 428:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(cluster_offset,
 2487              		.loc 1 428 0
 2488 1150 C0309FE5 		ldr	r3, .L197
 2489 1154 00C095E5 		ldr	ip, [r5, #0]
 427:../Library/sdfat/fat16.c ****         arg.entry_num = entry_num;
 2490              		.loc 1 427 0
 2491 1158 BAB2CDE1 		strh	fp, [sp, #42]	@ movhi
 428:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(cluster_offset,
 2492              		.loc 1 428 0
 2493 115c 08048DE8 		stmia	sp, {r3, sl}
 2494 1160 0800A0E1 		mov	r0, r8
 2495 1164 08108DE2 		add	r1, sp, #8
 2496 1168 2020A0E3 		mov	r2, #32
 2497 116c 0930A0E1 		mov	r3, r9
 2498 1170 04C09CE5 		ldr	ip, [ip, #4]
 2499 1174 0FE0A0E1 		mov	lr, pc
 2500 1178 1CFF2FE1 		bx	ip
 2501 117c 000050E3 		cmp	r0, #0
 2502 1180 1F00000A 		beq	.L186
 438:../Library/sdfat/fat16.c ****         if(arg.entry_offset)
 2503              		.loc 1 438 0
 2504 1184 2C809DE5 		ldr	r8, [sp, #44]
 2505              	.LVL248:
 2506 1188 000058E3 		cmp	r8, #0
 2507 118c 0500001A 		bne	.L189
 442:../Library/sdfat/fat16.c ****         if(!(cluster_num = fat16_get_next_cluster(fs, cluster_num)))
 2508              		.loc 1 442 0
 2509 1190 0710A0E1 		mov	r1, r7
 2510 1194 0500A0E1 		mov	r0, r5
 2511 1198 31FCFFEB 		bl	fat16_get_next_cluster
 2512              	.LVL249:
 2513 119c 007050E2 		subs	r7, r0, #0
 2514 11a0 E3FFFF1A 		bne	.L190
 2515 11a4 160000EA 		b	.L186
 2516              	.LVL250:
 2517              	.L189:
 446:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 2518              		.loc 1 446 0
 2519 11a8 0010A0E3 		mov	r1, #0
 2520 11ac 2C20A0E3 		mov	r2, #44
 2521 11b0 0600A0E1 		mov	r0, r6
 2522 11b4 FEFFFFEB 		bl	memset
 449:../Library/sdfat/fat16.c ****     if(!fs->partition->device_read_interval(arg.entry_offset,
 2523              		.loc 1 449 0
 2524 11b8 5C209FE5 		ldr	r2, .L197+4
 2525 11bc 00C095E5 		ldr	ip, [r5, #0]
 2526 11c0 3030DDE5 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 2527 11c4 44008DE8 		stmia	sp, {r2, r6}
 2528 11c8 0800A0E1 		mov	r0, r8
 2529 11cc 08108DE2 		add	r1, sp, #8
 2530 11d0 2020A0E3 		mov	r2, #32
 2531 11d4 04C09CE5 		ldr	ip, [ip, #4]
 2532 11d8 0FE0A0E1 		mov	lr, pc
 2533 11dc 1CFF2FE1 		bx	ip
 2534              	.LVL251:
 2535              	.L196:
 2536 11e0 000050E3 		cmp	r0, #0
 2537 11e4 0600000A 		beq	.L186
 2538              	.LBE92:
 2539              	.LBE91:
1406:../Library/sdfat/fat16.c ****         if(fat16_read_sub_dir_entry(dd->fs, dd->entry_next, &dd->dir_entry, dir_entry))
 2540              		.loc 1 1406 0
 2541 11e8 0030D6E5 		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2542 11ec 000053E3 		cmp	r3, #0
1408:../Library/sdfat/fat16.c ****             ++dd->entry_next;
 2543              		.loc 1 1408 0
 2544 11f0 B033D411 		ldrneh	r3, [r4, #48]
 2545 11f4 01308312 		addne	r3, r3, #1
 2546 11f8 B033C411 		strneh	r3, [r4, #48]	@ movhi
1409:../Library/sdfat/fat16.c ****             return 1;
 2547              		.loc 1 1409 0
 2548 11fc 0100A013 		movne	r0, #1
 2549 1200 0100001A 		bne	.L183
 2550              	.L186:
1414:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
 2551              		.loc 1 1414 0
 2552 1204 0000A0E3 		mov	r0, #0
 2553 1208 B003C4E1 		strh	r0, [r4, #48]	@ movhi
 2554              	.LVL252:
 2555              	.L183:
 2556              	.LBE88:
 2557              	.LBE87:
1417:../Library/sdfat/fat16.c **** }
 2558              		.loc 1 1417 0
 2559 120c 34D08DE2 		add	sp, sp, #52
 2560 1210 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2561 1214 1EFF2FE1 		bx	lr
 2562              	.L198:
 2563              		.align	2
 2564              	.L197:
 2565 1218 00000000 		.word	fat16_dir_entry_seek_callback
 2566 121c 00000000 		.word	fat16_dir_entry_read_callback
 2567              		.cfi_endproc
 2568              	.LFE21:
 2570              		.align	2
 2571              		.global	fat16_get_dir_entry_of_path
 2573              	fat16_get_dir_entry_of_path:
 2574              	.LFB8:
 624:../Library/sdfat/fat16.c **** {
 2575              		.loc 1 624 0
 2576              		.cfi_startproc
 2577              		@ Function supports interworking.
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580              	.LVL253:
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 2581              		.loc 1 625 0
 2582 1220 000050E3 		cmp	r0, #0
 2583 1224 00005113 		cmpne	r1, #0
 624:../Library/sdfat/fat16.c **** {
 2584              		.loc 1 624 0
 2585 1228 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 2586              	.LCFI21:
 2587              		.cfi_def_cfa_offset 32
 2588              		.cfi_offset 14, -4
 2589              		.cfi_offset 10, -8
 2590              		.cfi_offset 9, -12
 2591              		.cfi_offset 8, -16
 2592              		.cfi_offset 7, -20
 2593              		.cfi_offset 6, -24
 2594              		.cfi_offset 5, -28
 2595              		.cfi_offset 4, -32
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 2596              		.loc 1 625 0
 2597 122c 0070A0E1 		mov	r7, r0
 624:../Library/sdfat/fat16.c **** {
 2598              		.loc 1 624 0
 2599 1230 0250A0E1 		mov	r5, r2
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 2600              		.loc 1 625 0
 2601 1234 0000A013 		movne	r0, #0
 2602 1238 0100A003 		moveq	r0, #1
 2603              	.LVL254:
 2604 123c 0140A0E1 		mov	r4, r1
 626:../Library/sdfat/fat16.c ****         return 0;
 2605              		.loc 1 626 0
 2606 1240 0000A003 		moveq	r0, #0
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 2607              		.loc 1 625 0
 2608 1244 3E00000A 		beq	.L200
 625:../Library/sdfat/fat16.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 2609              		.loc 1 625 0 is_stmt 0 discriminator 1
 2610 1248 0030D1E5 		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 2611 124c 000053E3 		cmp	r3, #0
 2612 1250 00005213 		cmpne	r2, #0
 2613 1254 3A00000A 		beq	.L200
 628:../Library/sdfat/fat16.c ****     if(path[0] == '/')
 2614              		.loc 1 628 0 is_stmt 1
 2615 1258 2F0053E3 		cmp	r3, #47
 629:../Library/sdfat/fat16.c ****         ++path;
 2616              		.loc 1 629 0
 2617 125c 01408102 		addeq	r4, r1, #1
 2618              	.LVL255:
 632:../Library/sdfat/fat16.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 2619              		.loc 1 632 0
 2620 1260 0200A0E1 		mov	r0, r2
 2621 1264 0010A0E3 		mov	r1, #0
 2622 1268 2C20A0E3 		mov	r2, #44
 2623              	.LVL256:
 2624 126c FEFFFFEB 		bl	memset
 2625              	.LVL257:
 633:../Library/sdfat/fat16.c ****     dir_entry->attributes = FAT16_ATTRIB_DIR;
 2626              		.loc 1 633 0
 2627 1270 1030A0E3 		mov	r3, #16
 2628 1274 2030C5E5 		strb	r3, [r5, #32]
 635:../Library/sdfat/fat16.c ****     if(path[0] == '\0')
 2629              		.loc 1 635 0
 2630 1278 0030D4E5 		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 2631 127c 000053E3 		cmp	r3, #0
 2632 1280 2E00000A 		beq	.L211
 2633              	.L216:
 2634              	.LBB93:
 640:../Library/sdfat/fat16.c ****         struct fat16_dir_struct* dd = fat16_open_dir(fs, dir_entry);
 2635              		.loc 1 640 0
 2636 1284 0700A0E1 		mov	r0, r7
 2637 1288 0510A0E1 		mov	r1, r5
 2638 128c FEFFFFEB 		bl	fat16_open_dir
 2639              	.LVL258:
 641:../Library/sdfat/fat16.c ****         if(!dd)
 2640              		.loc 1 641 0
 2641 1290 006050E2 		subs	r6, r0, #0
 2642 1294 2700000A 		beq	.L210
 645:../Library/sdfat/fat16.c ****         const char* sep_pos = strchr(path, '/');
 2643              		.loc 1 645 0
 2644 1298 0400A0E1 		mov	r0, r4
 2645              	.LVL259:
 2646 129c 2F10A0E3 		mov	r1, #47
 2647 12a0 FEFFFFEB 		bl	strchr
 2648              	.LVL260:
 646:../Library/sdfat/fat16.c ****         if(!sep_pos)
 2649              		.loc 1 646 0
 2650 12a4 008050E2 		subs	r8, r0, #0
 2651 12a8 0200001A 		bne	.L202
 647:../Library/sdfat/fat16.c ****             sep_pos = path + strlen(path);
 2652              		.loc 1 647 0
 2653 12ac 0400A0E1 		mov	r0, r4
 2654              	.LVL261:
 2655 12b0 FEFFFFEB 		bl	strlen
 2656 12b4 008084E0 		add	r8, r4, r0
 2657              	.LVL262:
 2658              	.L202:
 648:../Library/sdfat/fat16.c ****         uint8_t length_to_sep = sep_pos - path;
 2659              		.loc 1 648 0
 2660 12b8 08A064E0 		rsb	sl, r4, r8
 2661 12bc FFA00AE2 		and	sl, sl, #255
 2662              	.LVL263:
 651:../Library/sdfat/fat16.c ****         while(fat16_read_dir(dd, dir_entry))
 2663              		.loc 1 651 0
 2664 12c0 140000EA 		b	.L215
 2665              	.L205:
 654:../Library/sdfat/fat16.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 2666              		.loc 1 654 0
 2667 12c4 0500A0E1 		mov	r0, r5
 2668 12c8 FEFFFFEB 		bl	strlen
 2669 12cc 0A0050E1 		cmp	r0, sl
 2670 12d0 1000001A 		bne	.L215
 655:../Library/sdfat/fat16.c ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 2671              		.loc 1 655 0 discriminator 1
 2672 12d4 0400A0E1 		mov	r0, r4
 2673 12d8 0510A0E1 		mov	r1, r5
 2674 12dc 0A20A0E1 		mov	r2, sl
 2675 12e0 FEFFFFEB 		bl	strncmp
 654:../Library/sdfat/fat16.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 2676              		.loc 1 654 0 discriminator 1
 2677 12e4 009050E2 		subs	r9, r0, #0
 2678 12e8 0A00001A 		bne	.L215
 658:../Library/sdfat/fat16.c ****             fat16_close_dir(dd);
 2679              		.loc 1 658 0
 2680 12ec 0600A0E1 		mov	r0, r6
 2681 12f0 FEFFFFEB 		bl	fat16_close_dir
 2682              	.LVL264:
 661:../Library/sdfat/fat16.c ****             if(path[length_to_sep] == '\0')
 2683              		.loc 1 661 0
 2684 12f4 0A30D4E7 		ldrb	r3, [r4, sl]	@ zero_extendqisi2
 2685 12f8 000053E3 		cmp	r3, #0
 2686 12fc 0F00000A 		beq	.L211
 665:../Library/sdfat/fat16.c ****             if(dir_entry->attributes & FAT16_ATTRIB_DIR)
 2687              		.loc 1 665 0
 2688 1300 2000D5E5 		ldrb	r0, [r5, #32]	@ zero_extendqisi2
 2689 1304 100010E2 		ands	r0, r0, #16
 2690 1308 0D00000A 		beq	.L200
 668:../Library/sdfat/fat16.c ****                 path = sep_pos + 1;
 2691              		.loc 1 668 0
 2692 130c 014088E2 		add	r4, r8, #1
 2693              	.LVL265:
 659:../Library/sdfat/fat16.c ****             dd = 0;
 2694              		.loc 1 659 0
 2695 1310 0960A0E1 		mov	r6, r9
 669:../Library/sdfat/fat16.c ****                 break;
 2696              		.loc 1 669 0
 2697 1314 040000EA 		b	.L204
 2698              	.LVL266:
 2699              	.L215:
 651:../Library/sdfat/fat16.c ****         while(fat16_read_dir(dd, dir_entry))
 2700              		.loc 1 651 0 discriminator 1
 2701 1318 0600A0E1 		mov	r0, r6
 2702 131c 0510A0E1 		mov	r1, r5
 2703 1320 FEFFFFEB 		bl	fat16_read_dir
 2704 1324 000050E3 		cmp	r0, #0
 2705 1328 E5FFFF1A 		bne	.L205
 2706              	.LVL267:
 2707              	.L204:
 676:../Library/sdfat/fat16.c ****         fat16_close_dir(dd);
 2708              		.loc 1 676 0
 2709 132c 0600A0E1 		mov	r0, r6
 2710 1330 FEFFFFEB 		bl	fat16_close_dir
 2711              	.LBE93:
 677:../Library/sdfat/fat16.c ****     }
 2712              		.loc 1 677 0
 2713 1334 D2FFFFEA 		b	.L216
 2714              	.LVL268:
 2715              	.L210:
 2716              	.LBB94:
 679:../Library/sdfat/fat16.c ****     return 0;
 2717              		.loc 1 679 0
 2718 1338 0600A0E1 		mov	r0, r6
 2719              	.LVL269:
 2720 133c 000000EA 		b	.L200
 2721              	.LVL270:
 2722              	.L211:
 663:../Library/sdfat/fat16.c ****                 return 1;
 2723              		.loc 1 663 0
 2724 1340 0100A0E3 		mov	r0, #1
 2725              	.L200:
 2726              	.LBE94:
 680:../Library/sdfat/fat16.c **** }
 2727              		.loc 1 680 0
 2728 1344 F047BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 2729 1348 1EFF2FE1 		bx	lr
 2730              		.cfi_endproc
 2731              	.LFE8:
 2733              		.align	2
 2734              		.global	fat16_reset_dir
 2736              	fat16_reset_dir:
 2737              	.LFB22:
1431:../Library/sdfat/fat16.c **** {
 2738              		.loc 1 1431 0
 2739              		.cfi_startproc
 2740              		@ Function supports interworking.
 2741              		@ args = 0, pretend = 0, frame = 0
 2742              		@ frame_needed = 0, uses_anonymous_args = 0
 2743              		@ link register save eliminated.
 2744              	.LVL271:
1432:../Library/sdfat/fat16.c ****     if(!dd)
 2745              		.loc 1 1432 0
 2746 134c 000050E3 		cmp	r0, #0
1435:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
 2747              		.loc 1 1435 0
 2748 1350 0030A013 		movne	r3, #0
 2749 1354 B033C011 		strneh	r3, [r0, #48]	@ movhi
1436:../Library/sdfat/fat16.c ****     return 1;
 2750              		.loc 1 1436 0
 2751 1358 0100A013 		movne	r0, #1
 2752              	.LVL272:
1437:../Library/sdfat/fat16.c **** }
 2753              		.loc 1 1437 0
 2754 135c 1EFF2FE1 		bx	lr
 2755              		.cfi_endproc
 2756              	.LFE22:
 2758              		.align	2
 2759              		.global	fat16_set_dir
 2761              	fat16_set_dir:
 2762              	.LFB23:
1440:../Library/sdfat/fat16.c **** {
 2763              		.loc 1 1440 0
 2764              		.cfi_startproc
 2765              		@ Function supports interworking.
 2766              		@ args = 0, pretend = 0, frame = 0
 2767              		@ frame_needed = 0, uses_anonymous_args = 0
 2768              		@ link register save eliminated.
 2769              	.LVL273:
1440:../Library/sdfat/fat16.c **** {
 2770              		.loc 1 1440 0
 2771 1360 0118A0E1 		mov	r1, r1, asl #16
 2772              	.LVL274:
1441:../Library/sdfat/fat16.c ****     if(!dd)
 2773              		.loc 1 1441 0
 2774 1364 000050E3 		cmp	r0, #0
1440:../Library/sdfat/fat16.c **** {
 2775              		.loc 1 1440 0
 2776 1368 2118A0E1 		mov	r1, r1, lsr #16
1444:../Library/sdfat/fat16.c ****     dd->entry_next = offset;
 2777              		.loc 1 1444 0
 2778 136c B013C011 		strneh	r1, [r0, #48]	@ movhi
1445:../Library/sdfat/fat16.c ****     return 1;
 2779              		.loc 1 1445 0
 2780 1370 0100A013 		movne	r0, #1
 2781              	.LVL275:
1446:../Library/sdfat/fat16.c **** }
 2782              		.loc 1 1446 0
 2783 1374 1EFF2FE1 		bx	lr
 2784              		.cfi_endproc
 2785              	.LFE23:
 2787              		.align	2
 2788              		.global	fat16_create_file
 2790              	fat16_create_file:
 2791              	.LFB25:
1670:../Library/sdfat/fat16.c **** {
 2792              		.loc 1 1670 0
 2793              		.cfi_startproc
 2794              		@ Function supports interworking.
 2795              		@ args = 0, pretend = 0, frame = 4
 2796              		@ frame_needed = 0, uses_anonymous_args = 0
 2797              	.LVL276:
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
 2798              		.loc 1 1672 0
 2799 1378 000050E3 		cmp	r0, #0
 2800 137c 00005113 		cmpne	r1, #0
1670:../Library/sdfat/fat16.c **** {
 2801              		.loc 1 1670 0
 2802 1380 F14F2DE9 		stmfd	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2803              	.LCFI22:
 2804              		.cfi_def_cfa_offset 40
 2805              		.cfi_offset 14, -4
 2806              		.cfi_offset 11, -8
 2807              		.cfi_offset 10, -12
 2808              		.cfi_offset 9, -16
 2809              		.cfi_offset 8, -20
 2810              		.cfi_offset 7, -24
 2811              		.cfi_offset 6, -28
 2812              		.cfi_offset 5, -32
 2813              		.cfi_offset 4, -36
 2814              		.cfi_offset 0, -40
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
 2815              		.loc 1 1672 0
 2816 1384 0040A0E1 		mov	r4, r0
1670:../Library/sdfat/fat16.c **** {
 2817              		.loc 1 1670 0
 2818 1388 0270A0E1 		mov	r7, r2
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
 2819              		.loc 1 1672 0
 2820 138c 0150A0E1 		mov	r5, r1
1673:../Library/sdfat/fat16.c ****             return 0;
 2821              		.loc 1 1673 0
 2822 1390 0000A003 		moveq	r0, #0
 2823              	.LVL277:
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
 2824              		.loc 1 1672 0
 2825 1394 6200000A 		beq	.L224
1672:../Library/sdfat/fat16.c ****         if(!parent || !file || !file[0])
 2826              		.loc 1 1672 0 is_stmt 0 discriminator 1
 2827 1398 0000D1E5 		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 2828 139c 000050E3 		cmp	r0, #0
 2829 13a0 5F00000A 		beq	.L224
 2830              	.LVL278:
 2831              	.L241:
1678:../Library/sdfat/fat16.c ****             if(!fat16_read_dir(parent, dir_entry))
 2832              		.loc 1 1678 0 is_stmt 1
 2833 13a4 0400A0E1 		mov	r0, r4
 2834 13a8 0710A0E1 		mov	r1, r7
 2835 13ac FEFFFFEB 		bl	fat16_read_dir
 2836 13b0 009050E2 		subs	r9, r0, #0
 2837 13b4 0700000A 		beq	.L225
1681:../Library/sdfat/fat16.c ****             if(strcmp(file, dir_entry->long_name) == 0)
 2838              		.loc 1 1681 0
 2839 13b8 0500A0E1 		mov	r0, r5
 2840 13bc 0710A0E1 		mov	r1, r7
 2841 13c0 FEFFFFEB 		bl	strcmp
 2842 13c4 000050E3 		cmp	r0, #0
 2843 13c8 F5FFFF1A 		bne	.L241
 2844              	.LVL279:
 2845              	.LBB95:
 2846              	.LBB96:
1435:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
 2847              		.loc 1 1435 0
 2848 13cc B003C4E1 		strh	r0, [r4, #48]	@ movhi
1684:../Library/sdfat/fat16.c ****                 return 1;
 2849              		.loc 1 1684 0
 2850 13d0 0100A0E3 		mov	r0, #1
 2851 13d4 520000EA 		b	.L224
 2852              	.LVL280:
 2853              	.L225:
 2854              	.LBE96:
 2855              	.LBE95:
1688:../Library/sdfat/fat16.c ****         memset(dir_entry, 0, sizeof(*dir_entry));
 2856              		.loc 1 1688 0
 2857 13d8 0910A0E1 		mov	r1, r9
 2858 13dc 2C20A0E3 		mov	r2, #44
 2859 13e0 0700A0E1 		mov	r0, r7
 2860 13e4 FEFFFFEB 		bl	memset
1689:../Library/sdfat/fat16.c ****         strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
 2861              		.loc 1 1689 0
 2862 13e8 0510A0E1 		mov	r1, r5
 2863 13ec 1F20A0E3 		mov	r2, #31
 2864 13f0 0700A0E1 		mov	r0, r7
 2865 13f4 FEFFFFEB 		bl	strncpy
1692:../Library/sdfat/fat16.c ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
 2866              		.loc 1 1692 0
 2867 13f8 0500A0E1 		mov	r0, r5
 2868 13fc FEFFFFEB 		bl	strlen
 2869 1400 0D10A0E3 		mov	r1, #13
 2870 1404 FEFFFFEB 		bl	__udivsi3
1695:../Library/sdfat/fat16.c ****         uint16_t cluster_num = parent->dir_entry.cluster;
 2871              		.loc 1 1695 0
 2872 1408 B662D4E1 		ldrh	r6, [r4, #38]
1694:../Library/sdfat/fat16.c ****         struct fat16_fs_struct* fs = parent->fs;
 2873              		.loc 1 1694 0
 2874 140c 005094E5 		ldr	r5, [r4, #0]
 2875              	.LVL281:
1700:../Library/sdfat/fat16.c ****         if(cluster_num == 0)
 2876              		.loc 1 1700 0
 2877 1410 000056E3 		cmp	r6, #0
1705:../Library/sdfat/fat16.c ****             dir_entry_offset = offset;
 2878              		.loc 1 1705 0
 2879 1414 14808502 		addeq	r8, r5, #20
 2880 1418 00039808 		ldmeqia	r8, {r8, r9}
1692:../Library/sdfat/fat16.c ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
 2881              		.loc 1 1692 0
 2882 141c 020080E2 		add	r0, r0, #2
1696:../Library/sdfat/fat16.c ****         uint32_t dir_entry_offset = 0;
 2883              		.loc 1 1696 0
 2884 1420 0980A011 		movne	r8, r9
1692:../Library/sdfat/fat16.c ****         uint8_t free_dir_entries_needed = strlen(file) / 13 + 1 + 1;
 2885              		.loc 1 1692 0
 2886 1424 FFB000E2 		and	fp, r0, #255
 2887              	.LVL282:
 2888              	.LBB97:
1769:../Library/sdfat/fat16.c ****                 free_dir_entries_found = 0;
 2889              		.loc 1 1769 0
 2890 1428 0840A0E1 		mov	r4, r8
 2891              	.LVL283:
 2892 142c 00A0A0E3 		mov	sl, #0
 2893              	.LVL284:
 2894              	.L243:
1710:../Library/sdfat/fat16.c ****             if(offset == offset_to)
 2895              		.loc 1 1710 0
 2896 1430 090054E1 		cmp	r4, r9
 2897 1434 1B00001A 		bne	.L229
1712:../Library/sdfat/fat16.c ****                 if(cluster_num == 0)
 2898              		.loc 1 1712 0
 2899 1438 000056E3 		cmp	r6, #0
 2900 143c 3700000A 		beq	.L237
1718:../Library/sdfat/fat16.c ****                 if(offset)
 2901              		.loc 1 1718 0
 2902 1440 000054E3 		cmp	r4, #0
 2903 1444 1000000A 		beq	.L230
 2904              	.LBB98:
1724:../Library/sdfat/fat16.c ****                     uint16_t cluster_next = fat16_get_next_cluster(fs, cluster_num);
 2905              		.loc 1 1724 0
 2906 1448 0500A0E1 		mov	r0, r5
 2907 144c 0610A0E1 		mov	r1, r6
 2908 1450 83FBFFEB 		bl	fat16_get_next_cluster
 2909              	.LVL285:
1725:../Library/sdfat/fat16.c ****                     if(!cluster_next)
 2910              		.loc 1 1725 0
 2911 1454 000050E3 		cmp	r0, #0
 2912              	.LVL286:
 2913 1458 0A00001A 		bne	.L238
1727:../Library/sdfat/fat16.c ****                         cluster_next = fat16_append_clusters(fs, cluster_num, 1);
 2914              		.loc 1 1727 0
 2915 145c 0500A0E1 		mov	r0, r5
 2916 1460 0610A0E1 		mov	r1, r6
 2917 1464 0120A0E3 		mov	r2, #1
 2918 1468 D1FBFFEB 		bl	fat16_append_clusters
 2919              	.LVL287:
1728:../Library/sdfat/fat16.c ****                         if(!cluster_next)
 2920              		.loc 1 1728 0
 2921 146c 000050E3 		cmp	r0, #0
 2922              	.LVL288:
 2923 1470 2B00000A 		beq	.L224
1733:../Library/sdfat/fat16.c ****                         (uint32_t) (cluster_next - 2) * fs->header.cluster_size;
 2924              		.loc 1 1733 0
 2925 1474 B281D5E1 		ldrh	r8, [r5, #18]
 2926              	.LVL289:
1732:../Library/sdfat/fat16.c ****                         dir_entry_offset = fs->header.cluster_zero_offset +
 2927              		.loc 1 1732 0
 2928 1478 183095E5 		ldr	r3, [r5, #24]
1733:../Library/sdfat/fat16.c ****                         (uint32_t) (cluster_next - 2) * fs->header.cluster_size;
 2929              		.loc 1 1733 0
 2930 147c 020040E2 		sub	r0, r0, #2
1732:../Library/sdfat/fat16.c ****                         dir_entry_offset = fs->header.cluster_zero_offset +
 2931              		.loc 1 1732 0
 2932 1480 903828E0 		mla	r8, r0, r8, r3
 2933              	.LVL290:
1738:../Library/sdfat/fat16.c ****                         break;
 2934              		.loc 1 1738 0
 2935 1484 1E0000EA 		b	.L231
 2936              	.L238:
1725:../Library/sdfat/fat16.c ****                     if(!cluster_next)
 2937              		.loc 1 1725 0
 2938 1488 0060A0E1 		mov	r6, r0
 2939              	.LVL291:
 2940              	.L230:
 2941              	.LBE98:
1744:../Library/sdfat/fat16.c ****                 (uint32_t) (cluster_num - 2) * fs->header.cluster_size;
 2942              		.loc 1 1744 0
 2943 148c B291D5E1 		ldrh	r9, [r5, #18]
 2944              	.LVL292:
1743:../Library/sdfat/fat16.c ****                 offset = fs->header.cluster_zero_offset +
 2945              		.loc 1 1743 0
 2946 1490 183095E5 		ldr	r3, [r5, #24]
1744:../Library/sdfat/fat16.c ****                 (uint32_t) (cluster_num - 2) * fs->header.cluster_size;
 2947              		.loc 1 1744 0
 2948 1494 024046E2 		sub	r4, r6, #2
 2949              	.LVL293:
1743:../Library/sdfat/fat16.c ****                 offset = fs->header.cluster_zero_offset +
 2950              		.loc 1 1743 0
 2951 1498 993424E0 		mla	r4, r9, r4, r3
 2952              	.LVL294:
1747:../Library/sdfat/fat16.c ****                 free_dir_entries_found = 0;
 2953              		.loc 1 1747 0
 2954 149c 00A0A0E3 		mov	sl, #0
 2955              	.LVL295:
1745:../Library/sdfat/fat16.c ****                 offset_to = offset + fs->header.cluster_size;
 2956              		.loc 1 1745 0
 2957 14a0 099084E0 		add	r9, r4, r9
 2958              	.LVL296:
1746:../Library/sdfat/fat16.c ****                 dir_entry_offset = offset;
 2959              		.loc 1 1746 0
 2960 14a4 0480A0E1 		mov	r8, r4
 2961              	.LVL297:
 2962              	.L229:
1752:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
 2963              		.loc 1 1752 0
 2964 14a8 003095E5 		ldr	r3, [r5, #0]
 2965 14ac 0400A0E1 		mov	r0, r4
 2966 14b0 03108DE2 		add	r1, sp, #3
 2967 14b4 0120A0E3 		mov	r2, #1
 2968 14b8 00C093E5 		ldr	ip, [r3, #0]
 2969 14bc 0FE0A0E1 		mov	lr, pc
 2970 14c0 1CFF2FE1 		bx	ip
 2971 14c4 000050E3 		cmp	r0, #0
 2972 14c8 1500000A 		beq	.L224
1756:../Library/sdfat/fat16.c ****             if(first_char == FAT16_DIRENTRY_DELETED || !first_char)
 2973              		.loc 1 1756 0
 2974 14cc 0330DDE5 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 2975 14d0 E50053E3 		cmp	r3, #229
 2976 14d4 00005313 		cmpne	r3, #0
 2977 14d8 0030A013 		movne	r3, #0
 2978 14dc 0130A003 		moveq	r3, #1
1767:../Library/sdfat/fat16.c ****                 offset += 32;
 2979              		.loc 1 1767 0
 2980 14e0 20408412 		addne	r4, r4, #32
 2981              	.LVL298:
1768:../Library/sdfat/fat16.c ****                 dir_entry_offset = offset;
 2982              		.loc 1 1768 0
 2983 14e4 0480A011 		movne	r8, r4
1769:../Library/sdfat/fat16.c ****                 free_dir_entries_found = 0;
 2984              		.loc 1 1769 0
 2985 14e8 03A0A011 		movne	sl, r3
1756:../Library/sdfat/fat16.c ****             if(first_char == FAT16_DIRENTRY_DELETED || !first_char)
 2986              		.loc 1 1756 0
 2987 14ec CFFFFF1A 		bne	.L243
1759:../Library/sdfat/fat16.c ****                 ++free_dir_entries_found;
 2988              		.loc 1 1759 0
 2989 14f0 01A08AE2 		add	sl, sl, #1
 2990 14f4 FFA00AE2 		and	sl, sl, #255
 2991              	.LVL299:
1760:../Library/sdfat/fat16.c ****                 if(free_dir_entries_found >= free_dir_entries_needed)
 2992              		.loc 1 1760 0
 2993 14f8 0B005AE1 		cmp	sl, fp
1763:../Library/sdfat/fat16.c ****                 offset += 32;
 2994              		.loc 1 1763 0
 2995 14fc 20408432 		addcc	r4, r4, #32
 2996              	.LVL300:
 2997 1500 CAFFFF3A 		bcc	.L243
 2998              	.LVL301:
 2999              	.L231:
 3000              	.LBE97:
1774:../Library/sdfat/fat16.c ****         dir_entry->entry_offset = dir_entry_offset;
 3001              		.loc 1 1774 0
 3002 1504 288087E5 		str	r8, [r7, #40]
1775:../Library/sdfat/fat16.c ****         if(!fat16_write_dir_entry(fs, dir_entry))
 3003              		.loc 1 1775 0
 3004 1508 0500A0E1 		mov	r0, r5
 3005 150c 0710A0E1 		mov	r1, r7
 3006 1510 01FCFFEB 		bl	fat16_write_dir_entry
1673:../Library/sdfat/fat16.c ****             return 0;
 3007              		.loc 1 1673 0
 3008 1514 000090E2 		adds	r0, r0, #0
 3009 1518 0100A013 		movne	r0, #1
 3010 151c 000000EA 		b	.L224
 3011              	.LVL302:
 3012              	.L237:
 3013              	.LBB99:
1716:../Library/sdfat/fat16.c ****                 return 0;
 3014              		.loc 1 1716 0
 3015 1520 0600A0E1 		mov	r0, r6
 3016              	.LVL303:
 3017              	.L224:
 3018              	.LBE99:
1783:../Library/sdfat/fat16.c **** }
 3019              		.loc 1 1783 0
 3020 1524 F84FBDE8 		ldmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 3021 1528 1EFF2FE1 		bx	lr
 3022              		.cfi_endproc
 3023              	.LFE25:
 3025              		.align	2
 3026              		.global	fat16_delete_file
 3028              	fat16_delete_file:
 3029              	.LFB26:
1801:../Library/sdfat/fat16.c **** {
 3030              		.loc 1 1801 0
 3031              		.cfi_startproc
 3032              		@ Function supports interworking.
 3033              		@ args = 0, pretend = 0, frame = 12
 3034              		@ frame_needed = 0, uses_anonymous_args = 0
 3035              	.LVL304:
1803:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 3036              		.loc 1 1803 0
 3037 152c 000050E3 		cmp	r0, #0
 3038 1530 00005113 		cmpne	r1, #0
1801:../Library/sdfat/fat16.c **** {
 3039              		.loc 1 1801 0
 3040 1534 F7402DE9 		stmfd	sp!, {r0, r1, r2, r4, r5, r6, r7, lr}
 3041              	.LCFI23:
 3042              		.cfi_def_cfa_offset 32
 3043              		.cfi_offset 14, -4
 3044              		.cfi_offset 7, -8
 3045              		.cfi_offset 6, -12
 3046              		.cfi_offset 5, -16
 3047              		.cfi_offset 4, -20
 3048              		.cfi_offset 2, -24
 3049              		.cfi_offset 1, -28
 3050              		.cfi_offset 0, -32
1803:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 3051              		.loc 1 1803 0
 3052 1538 0050A0E1 		mov	r5, r0
 3053 153c 0160A0E1 		mov	r6, r1
1804:../Library/sdfat/fat16.c ****             return 0;
 3054              		.loc 1 1804 0
 3055 1540 0000A003 		moveq	r0, #0
 3056              	.LVL305:
1803:../Library/sdfat/fat16.c ****         if(!fs || !dir_entry)
 3057              		.loc 1 1803 0
 3058 1544 1E00000A 		beq	.L245
1807:../Library/sdfat/fat16.c ****         uint32_t dir_entry_offset = dir_entry->entry_offset;
 3059              		.loc 1 1807 0
 3060 1548 284091E5 		ldr	r4, [r1, #40]
 3061              	.LVL306:
1808:../Library/sdfat/fat16.c ****         if(!dir_entry_offset)
 3062              		.loc 1 1808 0
 3063 154c 000054E3 		cmp	r4, #0
1809:../Library/sdfat/fat16.c ****             return 0;
 3064              		.loc 1 1809 0
 3065 1550 0400A001 		moveq	r0, r4
1808:../Library/sdfat/fat16.c ****         if(!dir_entry_offset)
 3066              		.loc 1 1808 0
 3067 1554 1A00000A 		beq	.L245
1819:../Library/sdfat/fat16.c ****             buffer[0] = FAT16_DIRENTRY_DELETED;
 3068              		.loc 1 1819 0
 3069 1558 1A70E0E3 		mvn	r7, #26
 3070              	.LVL307:
 3071              	.L252:
1815:../Library/sdfat/fat16.c ****             if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
 3072              		.loc 1 1815 0
 3073 155c 003095E5 		ldr	r3, [r5, #0]
 3074 1560 0400A0E1 		mov	r0, r4
 3075 1564 0D10A0E1 		mov	r1, sp
 3076 1568 0C20A0E3 		mov	r2, #12
 3077 156c 00C093E5 		ldr	ip, [r3, #0]
 3078 1570 0FE0A0E1 		mov	lr, pc
 3079 1574 1CFF2FE1 		bx	ip
 3080 1578 000050E3 		cmp	r0, #0
 3081 157c 1000000A 		beq	.L245
1819:../Library/sdfat/fat16.c ****             buffer[0] = FAT16_DIRENTRY_DELETED;
 3082              		.loc 1 1819 0
 3083 1580 0070CDE5 		strb	r7, [sp, #0]
1822:../Library/sdfat/fat16.c ****             if(!fs->partition->device_write(dir_entry_offset, buffer, sizeof(buffer)))
 3084              		.loc 1 1822 0
 3085 1584 003095E5 		ldr	r3, [r5, #0]
 3086 1588 0400A0E1 		mov	r0, r4
 3087 158c 0D10A0E1 		mov	r1, sp
 3088 1590 0C20A0E3 		mov	r2, #12
 3089 1594 08C093E5 		ldr	ip, [r3, #8]
 3090 1598 0FE0A0E1 		mov	lr, pc
 3091 159c 1CFF2FE1 		bx	ip
 3092 15a0 000050E3 		cmp	r0, #0
 3093 15a4 0600000A 		beq	.L245
1826:../Library/sdfat/fat16.c ****             if(buffer[11] != 0x0f)
 3094              		.loc 1 1826 0
 3095 15a8 0B30DDE5 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 3096 15ac 0F0053E3 		cmp	r3, #15
1829:../Library/sdfat/fat16.c ****             dir_entry_offset += 32;
 3097              		.loc 1 1829 0
 3098 15b0 20408402 		addeq	r4, r4, #32
 3099              	.LVL308:
1830:../Library/sdfat/fat16.c ****         }
 3100              		.loc 1 1830 0
 3101 15b4 E8FFFF0A 		beq	.L252
 3102              	.L246:
1835:../Library/sdfat/fat16.c ****         return fat16_free_clusters(fs, dir_entry->cluster);
 3103              		.loc 1 1835 0
 3104 15b8 0500A0E1 		mov	r0, r5
 3105 15bc B212D6E1 		ldrh	r1, [r6, #34]
 3106 15c0 4CFBFFEB 		bl	fat16_free_clusters
 3107              	.LVL309:
 3108              	.L245:
1839:../Library/sdfat/fat16.c **** }
 3109              		.loc 1 1839 0
 3110 15c4 FE40BDE8 		ldmfd	sp!, {r1, r2, r3, r4, r5, r6, r7, lr}
 3111 15c8 1EFF2FE1 		bx	lr
 3112              		.cfi_endproc
 3113              	.LFE26:
 3115              		.align	2
 3116              		.global	fat16_get_fs_size
 3118              	fat16_get_fs_size:
 3119              	.LFB27:
1849:../Library/sdfat/fat16.c **** {
 3120              		.loc 1 1849 0
 3121              		.cfi_startproc
 3122              		@ Function supports interworking.
 3123              		@ args = 0, pretend = 0, frame = 0
 3124              		@ frame_needed = 0, uses_anonymous_args = 0
 3125              		@ link register save eliminated.
 3126              	.LVL310:
1850:../Library/sdfat/fat16.c ****     if(!fs)
 3127              		.loc 1 1850 0
 3128 15cc 000050E3 		cmp	r0, #0
 3129 15d0 1EFF2F01 		bxeq	lr
1853:../Library/sdfat/fat16.c ****     return (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
 3130              		.loc 1 1853 0
 3131 15d4 0C3090E5 		ldr	r3, [r0, #12]
 3132 15d8 B201D0E1 		ldrh	r0, [r0, #18]
 3133              	.LVL311:
 3134 15dc A330A0E1 		mov	r3, r3, lsr #1
 3135 15e0 023043E2 		sub	r3, r3, #2
 3136 15e4 930000E0 		mul	r0, r3, r0
1854:../Library/sdfat/fat16.c **** }
 3137              		.loc 1 1854 0
 3138 15e8 1EFF2FE1 		bx	lr
 3139              		.cfi_endproc
 3140              	.LFE27:
 3142              		.align	2
 3143              		.global	fat16_get_fs_free
 3145              	fat16_get_fs_free:
 3146              	.LFB28:
1867:../Library/sdfat/fat16.c **** {
 3147              		.loc 1 1867 0
 3148              		.cfi_startproc
 3149              		@ Function supports interworking.
 3150              		@ args = 0, pretend = 0, frame = 36
 3151              		@ frame_needed = 0, uses_anonymous_args = 0
 3152              	.LVL312:
 3153 15ec F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
 3154              	.LCFI24:
 3155              		.cfi_def_cfa_offset 24
 3156              		.cfi_offset 14, -4
 3157              		.cfi_offset 8, -8
 3158              		.cfi_offset 7, -12
 3159              		.cfi_offset 6, -16
 3160              		.cfi_offset 5, -20
 3161              		.cfi_offset 4, -24
1868:../Library/sdfat/fat16.c ****     if(!fs)
 3162              		.loc 1 1868 0
 3163 15f0 004050E2 		subs	r4, r0, #0
1867:../Library/sdfat/fat16.c **** {
 3164              		.loc 1 1867 0
 3165 15f4 2CD04DE2 		sub	sp, sp, #44
 3166              	.LCFI25:
 3167              		.cfi_def_cfa_offset 68
1869:../Library/sdfat/fat16.c ****         return 0;
 3168              		.loc 1 1869 0
 3169 15f8 0400A001 		moveq	r0, r4
 3170              	.LVL313:
1868:../Library/sdfat/fat16.c ****     if(!fs)
 3171              		.loc 1 1868 0
 3172 15fc 2000000A 		beq	.L257
1873:../Library/sdfat/fat16.c ****     count_arg.cluster_count = 0;
 3173              		.loc 1 1873 0
 3174 1600 0030A0E3 		mov	r3, #0
 3175 1604 B832CDE1 		strh	r3, [sp, #40]	@ movhi
1874:../Library/sdfat/fat16.c ****     count_arg.buffer_size = sizeof(fat);
 3176              		.loc 1 1874 0
 3177 1608 2030A0E3 		mov	r3, #32
 3178 160c 2A30CDE5 		strb	r3, [sp, #42]
1876:../Library/sdfat/fat16.c ****     uint32_t fat_offset = fs->header.fat_offset;
 3179              		.loc 1 1876 0
 3180 1610 087094E5 		ldr	r7, [r4, #8]
 3181              	.LVL314:
1877:../Library/sdfat/fat16.c ****     uint32_t fat_size = fs->header.fat_size;
 3182              		.loc 1 1877 0
 3183 1614 0C5094E5 		ldr	r5, [r4, #12]
 3184              	.LVL315:
 3185              	.LBB100:
1881:../Library/sdfat/fat16.c ****         if(fat_size < length)
 3186              		.loc 1 1881 0
 3187 1618 70809FE5 		ldr	r8, .L264
 3188              	.LBE100:
1878:../Library/sdfat/fat16.c ****     while(fat_size > 0)
 3189              		.loc 1 1878 0
 3190 161c 130000EA 		b	.L258
 3191              	.LVL316:
 3192              	.L260:
 3193              	.LBB101:
1881:../Library/sdfat/fat16.c ****         if(fat_size < length)
 3194              		.loc 1 1881 0
 3195 1620 080055E1 		cmp	r5, r8
1884:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(fat_offset,
 3196              		.loc 1 1884 0
 3197 1624 68309FE5 		ldr	r3, .L264+4
1882:../Library/sdfat/fat16.c ****             length = fat_size;
 3198              		.loc 1 1882 0
 3199 1628 0568A091 		movls	r6, r5, asl #16
1880:../Library/sdfat/fat16.c ****         uint16_t length = UINT16_MAX - 1;
 3200              		.loc 1 1880 0
 3201 162c 64609F85 		ldrhi	r6, .L264+8
1882:../Library/sdfat/fat16.c ****             length = fat_size;
 3202              		.loc 1 1882 0
 3203 1630 2668A091 		movls	r6, r6, lsr #16
 3204              	.LVL317:
1884:../Library/sdfat/fat16.c ****         if(!fs->partition->device_read_interval(fat_offset,
 3205              		.loc 1 1884 0
 3206 1634 00C094E5 		ldr	ip, [r4, #0]
 3207 1638 00308DE5 		str	r3, [sp, #0]
 3208 163c 28308DE2 		add	r3, sp, #40
 3209 1640 04308DE5 		str	r3, [sp, #4]
 3210 1644 0700A0E1 		mov	r0, r7
 3211 1648 08108DE2 		add	r1, sp, #8
 3212 164c 2020A0E3 		mov	r2, #32
 3213 1650 0630A0E1 		mov	r3, r6
 3214 1654 04C09CE5 		ldr	ip, [ip, #4]
 3215 1658 0FE0A0E1 		mov	lr, pc
 3216 165c 1CFF2FE1 		bx	ip
 3217 1660 000050E3 		cmp	r0, #0
 3218 1664 0600000A 		beq	.L257
1894:../Library/sdfat/fat16.c ****         fat_offset += length;
 3219              		.loc 1 1894 0
 3220 1668 067087E0 		add	r7, r7, r6
 3221              	.LVL318:
1895:../Library/sdfat/fat16.c ****         fat_size -= length;
 3222              		.loc 1 1895 0
 3223 166c 055066E0 		rsb	r5, r6, r5
 3224              	.LVL319:
 3225              	.L258:
 3226              	.LBE101:
1878:../Library/sdfat/fat16.c ****     while(fat_size > 0)
 3227              		.loc 1 1878 0 discriminator 1
 3228 1670 000055E3 		cmp	r5, #0
 3229 1674 E9FFFF1A 		bne	.L260
1898:../Library/sdfat/fat16.c ****     return (uint32_t) count_arg.cluster_count * fs->header.cluster_size;
 3230              		.loc 1 1898 0
 3231 1678 B231D4E1 		ldrh	r3, [r4, #18]
 3232 167c B802DDE1 		ldrh	r0, [sp, #40]
 3233 1680 930000E0 		mul	r0, r3, r0
 3234              	.LVL320:
 3235              	.L257:
1899:../Library/sdfat/fat16.c **** }
 3236              		.loc 1 1899 0
 3237 1684 2CD08DE2 		add	sp, sp, #44
 3238 1688 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 3239 168c 1EFF2FE1 		bx	lr
 3240              	.L265:
 3241              		.align	2
 3242              	.L264:
 3243 1690 FDFF0000 		.word	65533
 3244 1694 00000000 		.word	fat16_get_fs_free_callback
 3245 1698 FEFF0000 		.word	65534
 3246              		.cfi_endproc
 3247              	.LFE28:
 3249              		.align	2
 3250              		.global	find_file_in_dir
 3252              	find_file_in_dir:
 3253              	.LFB30:
1920:../Library/sdfat/fat16.c **** 
1921:../Library/sdfat/fat16.c **** uint8_t find_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_struct* dd, const char* name,
1922:../Library/sdfat/fat16.c **** {
 3254              		.loc 1 1922 0
 3255              		.cfi_startproc
 3256              		@ Function supports interworking.
 3257              		@ args = 0, pretend = 0, frame = 0
 3258              		@ frame_needed = 0, uses_anonymous_args = 0
 3259              	.LVL321:
 3260 169c 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 3261              	.LCFI26:
 3262              		.cfi_def_cfa_offset 16
 3263              		.cfi_offset 14, -4
 3264              		.cfi_offset 6, -8
 3265              		.cfi_offset 5, -12
 3266              		.cfi_offset 4, -16
 3267              		.loc 1 1922 0
 3268 16a0 0140A0E1 		mov	r4, r1
 3269 16a4 0250A0E1 		mov	r5, r2
 3270 16a8 0360A0E1 		mov	r6, r3
1923:../Library/sdfat/fat16.c ****     while(fat16_read_dir(dd, dir_entry))
 3271              		.loc 1 1923 0
 3272 16ac 080000EA 		b	.L267
 3273              	.LVL322:
 3274              	.L269:
1924:../Library/sdfat/fat16.c ****     {
1925:../Library/sdfat/fat16.c ****         if(strcmp(dir_entry->long_name, name) == 0)
 3275              		.loc 1 1925 0
 3276 16b0 0600A0E1 		mov	r0, r6
 3277 16b4 0510A0E1 		mov	r1, r5
 3278 16b8 FEFFFFEB 		bl	strcmp
 3279 16bc 000050E3 		cmp	r0, #0
 3280 16c0 0300001A 		bne	.L267
 3281              	.LVL323:
 3282              	.LBB102:
 3283              	.LBB103:
1432:../Library/sdfat/fat16.c ****     if(!dd)
 3284              		.loc 1 1432 0
 3285 16c4 000054E3 		cmp	r4, #0
1435:../Library/sdfat/fat16.c ****     dd->entry_next = 0;
 3286              		.loc 1 1435 0
 3287 16c8 B003C411 		strneh	r0, [r4, #48]	@ movhi
1926:../Library/sdfat/fat16.c ****         {
1927:../Library/sdfat/fat16.c ****             fat16_reset_dir(dd);
1928:../Library/sdfat/fat16.c ****             return 1;
 3288              		.loc 1 1928 0
 3289 16cc 0100A0E3 		mov	r0, #1
 3290 16d0 040000EA 		b	.L268
 3291              	.LVL324:
 3292              	.L267:
 3293              	.LBE103:
 3294              	.LBE102:
1923:../Library/sdfat/fat16.c ****     while(fat16_read_dir(dd, dir_entry))
 3295              		.loc 1 1923 0 discriminator 1
 3296 16d4 0400A0E1 		mov	r0, r4
 3297 16d8 0610A0E1 		mov	r1, r6
 3298 16dc FEFFFFEB 		bl	fat16_read_dir
 3299 16e0 000050E3 		cmp	r0, #0
 3300 16e4 F1FFFF1A 		bne	.L269
 3301              	.L268:
1929:../Library/sdfat/fat16.c ****         }
1930:../Library/sdfat/fat16.c ****     }
1931:../Library/sdfat/fat16.c **** 
1932:../Library/sdfat/fat16.c ****     return 0;
1933:../Library/sdfat/fat16.c **** }
 3302              		.loc 1 1933 0
 3303 16e8 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 3304 16ec 1EFF2FE1 		bx	lr
 3305              		.cfi_endproc
 3306              	.LFE30:
 3308              		.align	2
 3309              		.global	open_file_in_dir
 3311              	open_file_in_dir:
 3312              	.LFB31:
1934:../Library/sdfat/fat16.c **** 
1935:../Library/sdfat/fat16.c **** struct fat16_file_struct* open_file_in_dir(struct fat16_fs_struct* fs, struct fat16_dir_struct* dd,
1936:../Library/sdfat/fat16.c **** {
 3313              		.loc 1 1936 0
 3314              		.cfi_startproc
 3315              		@ Function supports interworking.
 3316              		@ args = 0, pretend = 0, frame = 44
 3317              		@ frame_needed = 0, uses_anonymous_args = 0
 3318              	.LVL325:
 3319 16f0 10402DE9 		stmfd	sp!, {r4, lr}
 3320              	.LCFI27:
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 14, -4
 3323              		.cfi_offset 4, -8
 3324 16f4 2CD04DE2 		sub	sp, sp, #44
 3325              	.LCFI28:
 3326              		.cfi_def_cfa_offset 52
1937:../Library/sdfat/fat16.c ****     struct fat16_dir_entry_struct file_entry;
1938:../Library/sdfat/fat16.c ****     if(!find_file_in_dir(fs, dd, name, &file_entry))
 3327              		.loc 1 1938 0
 3328 16f8 0D30A0E1 		mov	r3, sp
1936:../Library/sdfat/fat16.c **** {
 3329              		.loc 1 1936 0
 3330 16fc 0040A0E1 		mov	r4, r0
 3331              		.loc 1 1938 0
 3332 1700 FEFFFFEB 		bl	find_file_in_dir
 3333              	.LVL326:
 3334 1704 000050E3 		cmp	r0, #0
1939:../Library/sdfat/fat16.c ****         return 0;
1940:../Library/sdfat/fat16.c **** 
1941:../Library/sdfat/fat16.c ****     return fat16_open_file(fs, &file_entry);
 3335              		.loc 1 1941 0
 3336 1708 0400A011 		movne	r0, r4
 3337 170c 0D10A011 		movne	r1, sp
 3338 1710 FEFFFF1B 		blne	fat16_open_file
 3339              	.L273:
1942:../Library/sdfat/fat16.c **** }
 3340              		.loc 1 1942 0
 3341 1714 2CD08DE2 		add	sp, sp, #44
 3342 1718 1040BDE8 		ldmfd	sp!, {r4, lr}
 3343 171c 1EFF2FE1 		bx	lr
 3344              		.cfi_endproc
 3345              	.LFE31:
 3347              		.align	2
 3348              		.global	fat16_file_size
 3350              	fat16_file_size:
 3351              	.LFB32:
1943:../Library/sdfat/fat16.c **** 
1944:../Library/sdfat/fat16.c **** int fat16_file_size(struct fat16_file_struct * file)
1945:../Library/sdfat/fat16.c **** {
 3352              		.loc 1 1945 0
 3353              		.cfi_startproc
 3354              		@ Function supports interworking.
 3355              		@ args = 0, pretend = 0, frame = 0
 3356              		@ frame_needed = 0, uses_anonymous_args = 0
 3357              		@ link register save eliminated.
 3358              	.LVL327:
1946:../Library/sdfat/fat16.c ****     return(file->dir_entry.file_size);
1947:../Library/sdfat/fat16.c **** }
 3359              		.loc 1 1947 0
 3360 1720 280090E5 		ldr	r0, [r0, #40]
 3361              	.LVL328:
 3362 1724 1EFF2FE1 		bx	lr
 3363              		.cfi_endproc
 3364              	.LFE32:
 3366              		.section	.rodata.str1.1,"aMS",%progbits,1
 3367              	.LC0:
 3368 0000 4D414C4C 		.ascii	"MALLOC FAILS\012\015\000"
 3368      4F432046 
 3368      41494C53 
 3368      0A0D00
 3369              	.LC1:
 3370 000f 4661696C 		.ascii	"Failed Reading Header\012\015\000"
 3370      65642052 
 3370      65616469 
 3370      6E672048 
 3370      65616465 
 3371              		.text
 3372              	.Letext0:
 3373              		.file 2 "/opt/local/lib/gcc/arm-elf/4.6.1/../../../../arm-elf/include/stdint.h"
 3374              		.file 3 "../Library/sdfat/partition.h"
 3375              		.file 4 "../Library/sdfat/fat16.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 fat16.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:7      .text:0000000000000000 fat16_get_fs_free_callback
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:54     .text:0000000000000048 fat16_dir_entry_seek_callback
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:122    .text:00000000000000bc fat16_dir_entry_read_callback
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:342    .text:0000000000000264 fat16_get_next_cluster
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:424    .text:00000000000002f4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:428    .text:00000000000002f8 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:430    .text:00000000000002f8 fat16_free_clusters
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:537    .text:00000000000003b0 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:541    .text:00000000000003b4 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:543    .text:00000000000003b4 fat16_append_clusters
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:723    .text:000000000000051c fat16_write_dir_entry
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1053   .text:0000000000000790 fat16_open
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1305   .text:0000000000000970 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1310   .text:0000000000000978 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1313   .text:0000000000000978 fat16_close
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1342   .text:000000000000098c fat16_open_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1409   .text:00000000000009f8 fat16_close_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1439   .text:0000000000000a0c fat16_read_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1662   .text:0000000000000b98 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1666   .text:0000000000000b9c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1669   .text:0000000000000b9c fat16_write_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1956   .text:0000000000000da4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1962   .text:0000000000000db0 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:1965   .text:0000000000000db0 fat16_resize_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2171   .text:0000000000000f38 fat16_seek_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2262   .text:0000000000000fd0 fat16_open_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2325   .text:0000000000001034 fat16_close_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2354   .text:0000000000001048 fat16_read_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2565   .text:0000000000001218 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2570   .text:0000000000001220 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2573   .text:0000000000001220 fat16_get_dir_entry_of_path
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2736   .text:000000000000134c fat16_reset_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2761   .text:0000000000001360 fat16_set_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:2790   .text:0000000000001378 fat16_create_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3028   .text:000000000000152c fat16_delete_file
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3118   .text:00000000000015cc fat16_get_fs_size
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3145   .text:00000000000015ec fat16_get_fs_free
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3243   .text:0000000000001690 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3249   .text:000000000000169c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3252   .text:000000000000169c find_file_in_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3311   .text:00000000000016f0 open_file_in_dir
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccHNzp54.s:3350   .text:0000000000001720 fat16_file_size
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__divsi3
strlen
memset
strrchr
memcpy
__udivsi3
malloc
rprintf
free
__umodsi3
strchr
strncmp
strcmp
strncpy
