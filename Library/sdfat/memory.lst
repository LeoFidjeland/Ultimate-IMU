   1              		.file	"memory.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   6              		.global	_ZN7cMemoryC2Ev
   8              	_ZN7cMemoryC2Ev:
   9              	.LFB1:
  10              		.file 1 "../Library/sdfat/memory.cpp"
   1:../Library/sdfat/memory.cpp **** /*
   2:../Library/sdfat/memory.cpp **** 	Memory Library
   3:../Library/sdfat/memory.cpp **** 	
   4:../Library/sdfat/memory.cpp **** 	Used as an interface for the sdFat library
   5:../Library/sdfat/memory.cpp **** 	
   6:../Library/sdfat/memory.cpp **** 	by Ryan Owens
   7:../Library/sdfat/memory.cpp **** 	http://www.sparkfun.com
   8:../Library/sdfat/memory.cpp **** 	
   9:../Library/sdfat/memory.cpp **** 	Example Code:
  10:../Library/sdfat/memory.cpp **** 	test.create("Test", ".csv");
  11:../Library/sdfat/memory.cpp **** 	test.save("I got it working!");
  12:../Library/sdfat/memory.cpp **** 	test.close();	
  13:../Library/sdfat/memory.cpp ****  
  14:../Library/sdfat/memory.cpp **** */
  15:../Library/sdfat/memory.cpp **** #include "memory.h"
  16:../Library/sdfat/memory.cpp **** #include <stdlib.h>
  17:../Library/sdfat/memory.cpp **** #include <stdio.h>
  18:../Library/sdfat/memory.cpp **** #include "LPC214x.h"
  19:../Library/sdfat/memory.cpp **** #include "string.h"
  20:../Library/sdfat/memory.cpp **** 
  21:../Library/sdfat/memory.cpp **** 
  22:../Library/sdfat/memory.cpp **** extern "C"{
  23:../Library/sdfat/memory.cpp **** 	#include "rootdir.h"
  24:../Library/sdfat/memory.cpp **** 	#include "fat16.h"
  25:../Library/sdfat/memory.cpp **** 	#include "sd_raw.h"
  26:../Library/sdfat/memory.cpp **** 	#include "rprintf.h"
  27:../Library/sdfat/memory.cpp **** }
  28:../Library/sdfat/memory.cpp **** 
  29:../Library/sdfat/memory.cpp **** #define GLOBALOBJECT
  30:../Library/sdfat/memory.cpp **** #define DEBUG
  31:../Library/sdfat/memory.cpp **** 
  32:../Library/sdfat/memory.cpp **** cMemory::cMemory(void)
  11              		.loc 1 32 0
  12              		.cfi_startproc
  13              		@ Function supports interworking.
  14              		@ args = 0, pretend = 0, frame = 0
  15              		@ frame_needed = 0, uses_anonymous_args = 0
  16              		@ link register save eliminated.
  17              	.LVL0:
  18              	.LBB2:
  33:../Library/sdfat/memory.cpp **** {
  34:../Library/sdfat/memory.cpp **** 	handle=NULL;
  19              		.loc 1 34 0
  20 0000 0030A0E3 		mov	r3, #0
  21 0004 203080E5 		str	r3, [r0, #32]
  22              	.LBE2:
  35:../Library/sdfat/memory.cpp **** }
  23              		.loc 1 35 0
  24 0008 1EFF2FE1 		bx	lr
  25              		.cfi_endproc
  26              	.LFE1:
  28              		.align	2
  29              		.global	_ZN7cMemory6createEPKcS1_
  31              	_ZN7cMemory6createEPKcS1_:
  32              	.LFB3:
  36:../Library/sdfat/memory.cpp **** 
  37:../Library/sdfat/memory.cpp **** int cMemory::create(const char * name, const char * extension)
  38:../Library/sdfat/memory.cpp **** {
  33              		.loc 1 38 0
  34              		.cfi_startproc
  35              		@ Function supports interworking.
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL1:
  39 000c F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 14, -4
  43              		.cfi_offset 8, -8
  44              		.cfi_offset 7, -12
  45              		.cfi_offset 6, -16
  46              		.cfi_offset 5, -20
  47              		.cfi_offset 4, -24
  48              		.loc 1 38 0
  49 0010 0040A0E1 		mov	r4, r0
  50 0014 0260A0E1 		mov	r6, r2
  51 0018 0180A0E1 		mov	r8, r1
  52              	.LBB3:
  39:../Library/sdfat/memory.cpp **** 	int file_number=0;
  40:../Library/sdfat/memory.cpp **** 	//char * file_name;
  41:../Library/sdfat/memory.cpp **** 
  42:../Library/sdfat/memory.cpp **** 	//&file_name[0]=strcpy(&file_name[0], name);
  43:../Library/sdfat/memory.cpp **** 	strcpy(&file_name[0], name);
  53              		.loc 1 43 0
  54 001c FEFFFFEB 		bl	strcpy
  55              	.LVL2:
  44:../Library/sdfat/memory.cpp **** 	sprintf(file_name+strlen(file_name), "%03d", file_number);
  56              		.loc 1 44 0
  57 0020 0400A0E1 		mov	r0, r4
  58 0024 FEFFFFEB 		bl	strlen
  59 0028 90109FE5 		ldr	r1, .L7
  60 002c 0020A0E3 		mov	r2, #0
  61 0030 000084E0 		add	r0, r4, r0
  62 0034 FEFFFFEB 		bl	sprintf
  45:../Library/sdfat/memory.cpp **** 	//file_name = strcat(file_name, extension);
  46:../Library/sdfat/memory.cpp **** 	strcat(&file_name[0], extension);
  63              		.loc 1 46 0
  64 0038 0400A0E1 		mov	r0, r4
  65 003c 0610A0E1 		mov	r1, r6
  66 0040 FEFFFFEB 		bl	strcat
  39:../Library/sdfat/memory.cpp **** 	int file_number=0;
  67              		.loc 1 39 0
  68 0044 0050A0E3 		mov	r5, #0
  47:../Library/sdfat/memory.cpp **** 	
  48:../Library/sdfat/memory.cpp **** 	//Check to see if the file already exists in the root directory.
  49:../Library/sdfat/memory.cpp ****     while(root_file_exists(file_name))
  50:../Library/sdfat/memory.cpp ****     {
  51:../Library/sdfat/memory.cpp ****         file_number++;	//If the file already exists, increment the file number and check again.
  52:../Library/sdfat/memory.cpp ****         if(file_number == 999)
  69              		.loc 1 52 0
  70 0048 74709FE5 		ldr	r7, .L7+4
  49:../Library/sdfat/memory.cpp ****     while(root_file_exists(file_name))
  71              		.loc 1 49 0
  72 004c 0E0000EA 		b	.L3
  73              	.LVL3:
  74              	.L5:
  51:../Library/sdfat/memory.cpp ****         file_number++;	//If the file already exists, increment the file number and check again.
  75              		.loc 1 51 0
  76 0050 015085E2 		add	r5, r5, #1
  77              	.LVL4:
  78              		.loc 1 52 0
  79 0054 070055E1 		cmp	r5, r7
  80 0058 1500000A 		beq	.L6
  53:../Library/sdfat/memory.cpp ****         {
  54:../Library/sdfat/memory.cpp ****             return 0;
  55:../Library/sdfat/memory.cpp ****         }
  56:../Library/sdfat/memory.cpp **** 		//file_name=strcpy(file_name, name);
  57:../Library/sdfat/memory.cpp **** 		strcpy(&file_name[0], name);
  81              		.loc 1 57 0
  82 005c 0810A0E1 		mov	r1, r8
  83 0060 0400A0E1 		mov	r0, r4
  84 0064 FEFFFFEB 		bl	strcpy
  58:../Library/sdfat/memory.cpp **** 		sprintf(file_name+strlen(file_name), "%03d", file_number);
  85              		.loc 1 58 0
  86 0068 0400A0E1 		mov	r0, r4
  87 006c FEFFFFEB 		bl	strlen
  88 0070 48109FE5 		ldr	r1, .L7
  89 0074 000084E0 		add	r0, r4, r0
  90 0078 0520A0E1 		mov	r2, r5
  91 007c FEFFFFEB 		bl	sprintf
  59:../Library/sdfat/memory.cpp **** 		//file_name = strcat(file_name, extension);
  60:../Library/sdfat/memory.cpp **** 		strcat(&file_name[0], extension);
  92              		.loc 1 60 0
  93 0080 0400A0E1 		mov	r0, r4
  94 0084 0610A0E1 		mov	r1, r6
  95 0088 FEFFFFEB 		bl	strcat
  96              	.LVL5:
  97              	.L3:
  49:../Library/sdfat/memory.cpp ****     while(root_file_exists(file_name))
  98              		.loc 1 49 0 discriminator 1
  99 008c 0400A0E1 		mov	r0, r4
 100 0090 FEFFFFEB 		bl	root_file_exists
 101 0094 000050E3 		cmp	r0, #0
 102 0098 ECFFFF1A 		bne	.L5
  61:../Library/sdfat/memory.cpp ****     }
  62:../Library/sdfat/memory.cpp **** 	
  63:../Library/sdfat/memory.cpp **** 	//Get the file handle of the new file.  We will log the data to this file
  64:../Library/sdfat/memory.cpp **** 	handle = root_open_new(file_name);	
 103              		.loc 1 64 0
 104 009c 0400A0E1 		mov	r0, r4
 105 00a0 FEFFFFEB 		bl	root_open_new
 106 00a4 200084E5 		str	r0, [r4, #32]
  54:../Library/sdfat/memory.cpp ****             return 0;
 107              		.loc 1 54 0
 108 00a8 000090E2 		adds	r0, r0, #0
 109 00ac 0100A013 		movne	r0, #1
 110 00b0 000000EA 		b	.L4
 111              	.L6:
 112 00b4 0000A0E3 		mov	r0, #0
 113              	.L4:
 114              	.LBE3:
  65:../Library/sdfat/memory.cpp **** 	if(handle == NULL) return 0;
  66:../Library/sdfat/memory.cpp **** 	
  67:../Library/sdfat/memory.cpp **** 	return 1;
  68:../Library/sdfat/memory.cpp **** }
 115              		.loc 1 68 0
 116 00b8 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 117 00bc 1EFF2FE1 		bx	lr
 118              	.L8:
 119              		.align	2
 120              	.L7:
 121 00c0 00000000 		.word	.LC0
 122 00c4 E7030000 		.word	999
 123              		.cfi_endproc
 124              	.LFE3:
 126              		.align	2
 127              		.global	_ZN7cMemory6createEPKc
 129              	_ZN7cMemory6createEPKc:
 130              	.LFB4:
  69:../Library/sdfat/memory.cpp **** 
  70:../Library/sdfat/memory.cpp **** int cMemory::create(const char * name)
  71:../Library/sdfat/memory.cpp **** {
 131              		.loc 1 71 0
 132              		.cfi_startproc
 133              		@ Function supports interworking.
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              	.LVL6:
 137 00c8 10402DE9 		stmfd	sp!, {r4, lr}
 138              	.LCFI1:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 14, -4
 141              		.cfi_offset 4, -8
 142              		.loc 1 71 0
 143 00cc 0040A0E1 		mov	r4, r0
  72:../Library/sdfat/memory.cpp **** 	strcpy(&file_name[0], name);
 144              		.loc 1 72 0
 145 00d0 FEFFFFEB 		bl	strcpy
 146              	.LVL7:
  73:../Library/sdfat/memory.cpp **** 	
  74:../Library/sdfat/memory.cpp **** 	//Get the file handle of the new file.  We will log the data to this file
  75:../Library/sdfat/memory.cpp **** 	handle = root_open_new(file_name);	
 147              		.loc 1 75 0
 148 00d4 0400A0E1 		mov	r0, r4
 149 00d8 FEFFFFEB 		bl	root_open_new
 150 00dc 200084E5 		str	r0, [r4, #32]
  76:../Library/sdfat/memory.cpp **** 	if(handle == NULL) return 0;
  77:../Library/sdfat/memory.cpp **** 	
  78:../Library/sdfat/memory.cpp **** 	return 1;
  79:../Library/sdfat/memory.cpp **** }
 151              		.loc 1 79 0
 152 00e0 000090E2 		adds	r0, r0, #0
 153 00e4 0100A013 		movne	r0, #1
 154 00e8 1040BDE8 		ldmfd	sp!, {r4, lr}
 155 00ec 1EFF2FE1 		bx	lr
 156              		.cfi_endproc
 157              	.LFE4:
 159              		.align	2
 160              		.global	_ZN7cMemory4saveEPc
 162              	_ZN7cMemory4saveEPc:
 163              	.LFB5:
  80:../Library/sdfat/memory.cpp **** 
  81:../Library/sdfat/memory.cpp **** int cMemory::save(char * data)
  82:../Library/sdfat/memory.cpp **** {
 164              		.loc 1 82 0
 165              		.cfi_startproc
 166              		@ Function supports interworking.
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              	.LVL8:
 170 00f0 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 171              	.LCFI2:
 172              		.cfi_def_cfa_offset 16
 173              		.cfi_offset 14, -4
 174              		.cfi_offset 6, -8
 175              		.cfi_offset 5, -12
 176              		.cfi_offset 4, -16
 177              	.LBB4:
  83:../Library/sdfat/memory.cpp **** 	int error=0;
  84:../Library/sdfat/memory.cpp **** 	
  85:../Library/sdfat/memory.cpp **** 	if(handle == NULL)return 0;
 178              		.loc 1 85 0
 179 00f4 204090E5 		ldr	r4, [r0, #32]
 180 00f8 000054E3 		cmp	r4, #0
 181              	.LBE4:
  82:../Library/sdfat/memory.cpp **** {
 182              		.loc 1 82 0
 183 00fc 0060A0E1 		mov	r6, r0
 184 0100 0150A0E1 		mov	r5, r1
 185              	.LBB5:
 186              		.loc 1 85 0
 187 0104 1700000A 		beq	.L11
  86:../Library/sdfat/memory.cpp **** 	if(strlen(data)==0)return 0;
 188              		.loc 1 86 0
 189 0108 0040D1E5 		ldrb	r4, [r1, #0]	@ zero_extendqisi2
 190 010c 000054E3 		cmp	r4, #0
 191 0110 1400000A 		beq	.L11
 192 0114 0A40A0E3 		mov	r4, #10
 193              	.LVL9:
 194              	.L13:
  87:../Library/sdfat/memory.cpp **** 	
  88:../Library/sdfat/memory.cpp **** 	while(error < 10)
  89:../Library/sdfat/memory.cpp **** 	{
  90:../Library/sdfat/memory.cpp **** 		if(fat16_write_file(handle, (const unsigned char *)data, strlen(data))<0)error+=1;
 195              		.loc 1 90 0
 196 0118 0500A0E1 		mov	r0, r5
 197 011c FEFFFFEB 		bl	strlen
 198 0120 0028A0E1 		mov	r2, r0, asl #16
 199 0124 0510A0E1 		mov	r1, r5
 200 0128 200096E5 		ldr	r0, [r6, #32]
 201 012c 2228A0E1 		mov	r2, r2, lsr #16
 202 0130 FEFFFFEB 		bl	fat16_write_file
 203 0134 000050E3 		cmp	r0, #0
 204 0138 020000AA 		bge	.L16
  88:../Library/sdfat/memory.cpp **** 	while(error < 10)
 205              		.loc 1 88 0 discriminator 1
 206 013c 014054E2 		subs	r4, r4, #1
 207 0140 F4FFFF1A 		bne	.L13
 208 0144 070000EA 		b	.L11
 209              	.L16:
 210              		.loc 1 90 0
 211 0148 0A40A0E3 		mov	r4, #10
 212              	.L12:
  91:../Library/sdfat/memory.cpp **** 		else break;
  92:../Library/sdfat/memory.cpp **** 		//delay_ms(100);
  93:../Library/sdfat/memory.cpp **** 	}
  94:../Library/sdfat/memory.cpp **** 	if(error == 10)return 0;
  95:../Library/sdfat/memory.cpp **** 	
  96:../Library/sdfat/memory.cpp **** 	error=0;
  97:../Library/sdfat/memory.cpp **** 	while(error < 10)
  98:../Library/sdfat/memory.cpp **** 	{
  99:../Library/sdfat/memory.cpp **** 		if(!sd_raw_sync())error+=1;
 213              		.loc 1 99 0
 214 014c FEFFFFEB 		bl	sd_raw_sync
 215 0150 000050E3 		cmp	r0, #0
 216 0154 0200001A 		bne	.L17
  97:../Library/sdfat/memory.cpp **** 	while(error < 10)
 217              		.loc 1 97 0 discriminator 1
 218 0158 014054E2 		subs	r4, r4, #1
 219 015c FAFFFF1A 		bne	.L12
 220 0160 000000EA 		b	.L11
 221              	.L17:
 100:../Library/sdfat/memory.cpp **** 		else break;
 101:../Library/sdfat/memory.cpp **** 		//delay_ms(100);
 102:../Library/sdfat/memory.cpp **** 	}
 103:../Library/sdfat/memory.cpp **** 	if(error == 10) return 0;
 104:../Library/sdfat/memory.cpp **** 	return 1;
 222              		.loc 1 104 0
 223 0164 0140A0E3 		mov	r4, #1
 224              	.L11:
 225              	.LBE5:
 105:../Library/sdfat/memory.cpp **** }
 226              		.loc 1 105 0
 227 0168 0400A0E1 		mov	r0, r4
 228 016c 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 229 0170 1EFF2FE1 		bx	lr
 230              		.cfi_endproc
 231              	.LFE5:
 233              		.align	2
 234              		.global	_ZN7cMemory5closeEv
 236              	_ZN7cMemory5closeEv:
 237              	.LFB6:
 106:../Library/sdfat/memory.cpp **** 
 107:../Library/sdfat/memory.cpp **** void cMemory::close(void)
 108:../Library/sdfat/memory.cpp **** {
 238              		.loc 1 108 0
 239              		.cfi_startproc
 240              		@ Function supports interworking.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL10:
 244 0174 04E02DE5 		str	lr, [sp, #-4]!
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 14, -4
 109:../Library/sdfat/memory.cpp **** 	fat16_close_file(handle);
 248              		.loc 1 109 0
 249 0178 200090E5 		ldr	r0, [r0, #32]
 250              	.LVL11:
 251 017c FEFFFFEB 		bl	fat16_close_file
 110:../Library/sdfat/memory.cpp **** }
 252              		.loc 1 110 0
 253 0180 04E09DE4 		ldr	lr, [sp], #4
 254 0184 1EFF2FE1 		bx	lr
 255              		.cfi_endproc
 256              	.LFE6:
 258              		.align	2
 259              		.global	_ZN7cMemory4openEv
 261              	_ZN7cMemory4openEv:
 262              	.LFB7:
 111:../Library/sdfat/memory.cpp **** 
 112:../Library/sdfat/memory.cpp **** void cMemory::open(void)
 113:../Library/sdfat/memory.cpp **** {
 263              		.loc 1 113 0
 264              		.cfi_startproc
 265              		@ Function supports interworking.
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              	.LVL12:
 269 0188 10402DE9 		stmfd	sp!, {r4, lr}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 14, -4
 273              		.cfi_offset 4, -8
 274              		.loc 1 113 0
 275 018c 0040A0E1 		mov	r4, r0
 114:../Library/sdfat/memory.cpp **** 	handle = root_open(file_name);
 276              		.loc 1 114 0
 277 0190 FEFFFFEB 		bl	root_open
 278              	.LVL13:
 279 0194 200084E5 		str	r0, [r4, #32]
 115:../Library/sdfat/memory.cpp **** }
 280              		.loc 1 115 0
 281 0198 1040BDE8 		ldmfd	sp!, {r4, lr}
 282 019c 1EFF2FE1 		bx	lr
 283              		.cfi_endproc
 284              	.LFE7:
 286              		.align	2
 287              		.global	_ZN7cMemory4openEPc
 289              	_ZN7cMemory4openEPc:
 290              	.LFB8:
 116:../Library/sdfat/memory.cpp **** 
 117:../Library/sdfat/memory.cpp **** void cMemory::open(char * new_file_name)
 118:../Library/sdfat/memory.cpp **** {
 291              		.loc 1 118 0
 292              		.cfi_startproc
 293              		@ Function supports interworking.
 294              		@ args = 0, pretend = 0, frame = 4
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL14:
 297 01a0 71402DE9 		stmfd	sp!, {r0, r4, r5, r6, lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 20
 300              		.cfi_offset 14, -4
 301              		.cfi_offset 6, -8
 302              		.cfi_offset 5, -12
 303              		.cfi_offset 4, -16
 304              		.cfi_offset 0, -20
 305              		.loc 1 118 0
 306 01a4 0060A0E1 		mov	r6, r0
 307              	.LBB6:
 119:../Library/sdfat/memory.cpp **** 	int32_t offset=0;
 308              		.loc 1 119 0
 309 01a8 0050A0E3 		mov	r5, #0
 310 01ac 04408DE2 		add	r4, sp, #4
 311 01b0 045024E5 		str	r5, [r4, #-4]!
 312              	.LVL15:
 120:../Library/sdfat/memory.cpp **** 	
 121:../Library/sdfat/memory.cpp **** 	sprintf(file_name, "%s", new_file_name);
 313              		.loc 1 121 0
 314 01b4 FEFFFFEB 		bl	strcpy
 315              	.LVL16:
 122:../Library/sdfat/memory.cpp **** 	open();
 316              		.loc 1 122 0
 317 01b8 0600A0E1 		mov	r0, r6
 318 01bc FEFFFFEB 		bl	_ZN7cMemory4openEv
 123:../Library/sdfat/memory.cpp **** 	fat16_seek_file(handle, &offset, FAT16_SEEK_SET);
 319              		.loc 1 123 0
 320 01c0 200096E5 		ldr	r0, [r6, #32]
 321 01c4 0D10A0E1 		mov	r1, sp
 322 01c8 0520A0E1 		mov	r2, r5
 323 01cc FEFFFFEB 		bl	fat16_seek_file
 324              	.LBE6:
 124:../Library/sdfat/memory.cpp **** }
 325              		.loc 1 124 0
 326 01d0 7840BDE8 		ldmfd	sp!, {r3, r4, r5, r6, lr}
 327 01d4 1EFF2FE1 		bx	lr
 328              		.cfi_endproc
 329              	.LFE8:
 331              		.align	2
 332              		.global	_ZN7cMemory8readLineEPc
 334              	_ZN7cMemory8readLineEPc:
 335              	.LFB9:
 125:../Library/sdfat/memory.cpp **** 
 126:../Library/sdfat/memory.cpp **** int cMemory::readLine(char * buffer){
 336              		.loc 1 126 0
 337              		.cfi_startproc
 338              		@ Function supports interworking.
 339              		@ args = 0, pretend = 0, frame = 4
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL17:
 342 01d8 71402DE9 		stmfd	sp!, {r0, r4, r5, r6, lr}
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 20
 345              		.cfi_offset 14, -4
 346              		.cfi_offset 6, -8
 347              		.cfi_offset 5, -12
 348              		.cfi_offset 4, -16
 349              		.cfi_offset 0, -20
 350              	.LBB7:
 127:../Library/sdfat/memory.cpp **** 	char readChar[2]="";
 351              		.loc 1 127 0
 352 01dc 0030A0E3 		mov	r3, #0
 353 01e0 04508DE2 		add	r5, sp, #4
 354              	.LBE7:
 126:../Library/sdfat/memory.cpp **** int cMemory::readLine(char * buffer){
 355              		.loc 1 126 0
 356 01e4 0060A0E1 		mov	r6, r0
 357 01e8 0140A0E1 		mov	r4, r1
 358              	.LBB8:
 359              		.loc 1 127 0
 360 01ec B43065E1 		strh	r3, [r5, #-4]!	@ movhi
 128:../Library/sdfat/memory.cpp **** 	while(readChar[0] != '\n')
 361              		.loc 1 128 0
 362 01f0 070000EA 		b	.L24
 363              	.LVL18:
 364              	.L26:
 129:../Library/sdfat/memory.cpp **** 	{
 130:../Library/sdfat/memory.cpp **** 		if(fat16_read_file(handle, (uint8_t *)readChar, 1)<0)
 365              		.loc 1 130 0
 366 01f4 200096E5 		ldr	r0, [r6, #32]
 367 01f8 0D10A0E1 		mov	r1, sp
 368 01fc 0120A0E3 		mov	r2, #1
 369 0200 FEFFFFEB 		bl	fat16_read_file
 370 0204 000050E3 		cmp	r0, #0
 371 0208 080000BA 		blt	.L27
 131:../Library/sdfat/memory.cpp **** 			return 0;
 132:../Library/sdfat/memory.cpp **** 		else{
 133:../Library/sdfat/memory.cpp **** 			*buffer++=readChar[0];
 372              		.loc 1 133 0
 373 020c 0030DDE5 		ldrb	r3, [sp, #0]	@ zero_extendqisi2
 374 0210 0130C4E4 		strb	r3, [r4], #1
 375              	.LVL19:
 376              	.L24:
 128:../Library/sdfat/memory.cpp **** 	while(readChar[0] != '\n')
 377              		.loc 1 128 0 discriminator 1
 378 0214 0030DDE5 		ldrb	r3, [sp, #0]	@ zero_extendqisi2
 379 0218 0A0053E3 		cmp	r3, #10
 380 021c F4FFFF1A 		bne	.L26
 134:../Library/sdfat/memory.cpp **** 		}
 135:../Library/sdfat/memory.cpp **** 	}
 136:../Library/sdfat/memory.cpp **** 	*buffer++='\0';
 381              		.loc 1 136 0
 382 0220 0030A0E3 		mov	r3, #0
 383 0224 0030C4E5 		strb	r3, [r4, #0]
 384              	.LVL20:
 137:../Library/sdfat/memory.cpp **** 	return 1;
 385              		.loc 1 137 0
 386 0228 0100A0E3 		mov	r0, #1
 387 022c 000000EA 		b	.L25
 388              	.LVL21:
 389              	.L27:
 131:../Library/sdfat/memory.cpp **** 			return 0;
 390              		.loc 1 131 0
 391 0230 0000A0E3 		mov	r0, #0
 392              	.LVL22:
 393              	.L25:
 394              	.LBE8:
 138:../Library/sdfat/memory.cpp **** }
 395              		.loc 1 138 0
 396 0234 7840BDE8 		ldmfd	sp!, {r3, r4, r5, r6, lr}
 397 0238 1EFF2FE1 		bx	lr
 398              		.cfi_endproc
 399              	.LFE9:
 401              		.align	2
 402              		.global	_Z12memoryDeletePc
 404              	_Z12memoryDeletePc:
 405              	.LFB10:
 139:../Library/sdfat/memory.cpp **** 
 140:../Library/sdfat/memory.cpp **** int memoryDelete(char * file_name)
 141:../Library/sdfat/memory.cpp **** {
 406              		.loc 1 141 0
 407              		.cfi_startproc
 408              		@ Function supports interworking.
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              	.LVL23:
 412 023c 04E02DE5 		str	lr, [sp, #-4]!
 413              	.LCFI7:
 414              		.cfi_def_cfa_offset 4
 415              		.cfi_offset 14, -4
 142:../Library/sdfat/memory.cpp **** 	return root_delete(file_name);
 416              		.loc 1 142 0
 417 0240 FEFFFFEB 		bl	root_delete
 418              	.LVL24:
 143:../Library/sdfat/memory.cpp **** }
 419              		.loc 1 143 0
 420 0244 04E09DE4 		ldr	lr, [sp], #4
 421 0248 1EFF2FE1 		bx	lr
 422              		.cfi_endproc
 423              	.LFE10:
 425              		.align	2
 426              		.global	_Z12memoryExistsPc
 428              	_Z12memoryExistsPc:
 429              	.LFB11:
 144:../Library/sdfat/memory.cpp **** 
 145:../Library/sdfat/memory.cpp **** char memoryExists(char * file_name)
 146:../Library/sdfat/memory.cpp **** {
 430              		.loc 1 146 0
 431              		.cfi_startproc
 432              		@ Function supports interworking.
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL25:
 436 024c 04E02DE5 		str	lr, [sp, #-4]!
 437              	.LCFI8:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 14, -4
 147:../Library/sdfat/memory.cpp **** 	return root_file_exists(file_name);
 440              		.loc 1 147 0
 441 0250 FEFFFFEB 		bl	root_file_exists
 442              	.LVL26:
 148:../Library/sdfat/memory.cpp **** }
 443              		.loc 1 148 0
 444 0254 FF0000E2 		and	r0, r0, #255
 445 0258 04E09DE4 		ldr	lr, [sp], #4
 446 025c 1EFF2FE1 		bx	lr
 447              		.cfi_endproc
 448              	.LFE11:
 450              		.align	2
 451              		.global	_Z11memoryBeginv
 453              	_Z11memoryBeginv:
 454              	.LFB12:
 149:../Library/sdfat/memory.cpp **** 
 150:../Library/sdfat/memory.cpp **** char memoryBegin(void)
 151:../Library/sdfat/memory.cpp **** {
 455              		.loc 1 151 0
 456              		.cfi_startproc
 457              		@ Function supports interworking.
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460 0260 04E02DE5 		str	lr, [sp, #-4]!
 461              	.LCFI9:
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 14, -4
 152:../Library/sdfat/memory.cpp **** 	//Bring up SD and Open the root directory
 153:../Library/sdfat/memory.cpp ****     if(!sd_raw_init())
 464              		.loc 1 153 0
 465 0264 FEFFFFEB 		bl	sd_raw_init
 466 0268 000050E3 		cmp	r0, #0
 467 026c 0200000A 		beq	.L31
 154:../Library/sdfat/memory.cpp ****     {
 155:../Library/sdfat/memory.cpp ****         return 0;
 156:../Library/sdfat/memory.cpp ****     }
 157:../Library/sdfat/memory.cpp ****     if(openroot())
 468              		.loc 1 157 0
 469 0270 FEFFFFEB 		bl	openroot
 155:../Library/sdfat/memory.cpp ****         return 0;
 470              		.loc 1 155 0
 471 0274 010070E2 		rsbs	r0, r0, #1
 472 0278 0000A033 		movcc	r0, #0
 473              	.L31:
 158:../Library/sdfat/memory.cpp ****     {
 159:../Library/sdfat/memory.cpp ****         return 0;
 160:../Library/sdfat/memory.cpp ****     }
 161:../Library/sdfat/memory.cpp **** 	return 1;
 162:../Library/sdfat/memory.cpp **** }
 474              		.loc 1 162 0
 475 027c 04E09DE4 		ldr	lr, [sp], #4
 476 0280 1EFF2FE1 		bx	lr
 477              		.cfi_endproc
 478              	.LFE12:
 480              		.global	_ZN7cMemoryC1Ev
 481              		.set	_ZN7cMemoryC1Ev,_ZN7cMemoryC2Ev
 482              		.section	.rodata.str1.1,"aMS",%progbits,1
 483              	.LC0:
 484 0000 25303364 		.ascii	"%03d\000"
 484      00
 485              		.text
 486              	.Letext0:
 487              		.file 2 "../Library/sdfat/memory.h"
 488              		.file 3 "/opt/local/lib/gcc/arm-elf/4.6.1/../../../../arm-elf/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 memory.cpp
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:8      .text:0000000000000000 _ZN7cMemoryC2Ev
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:31     .text:000000000000000c _ZN7cMemory6createEPKcS1_
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:121    .text:00000000000000c0 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:126    .text:00000000000000c8 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:129    .text:00000000000000c8 _ZN7cMemory6createEPKc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:162    .text:00000000000000f0 _ZN7cMemory4saveEPc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:236    .text:0000000000000174 _ZN7cMemory5closeEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:261    .text:0000000000000188 _ZN7cMemory4openEv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:289    .text:00000000000001a0 _ZN7cMemory4openEPc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:334    .text:00000000000001d8 _ZN7cMemory8readLineEPc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:404    .text:000000000000023c _Z12memoryDeletePc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:428    .text:000000000000024c _Z12memoryExistsPc
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:453    .text:0000000000000260 _Z11memoryBeginv
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//cckyR3yn.s:8      .text:0000000000000000 _ZN7cMemoryC1Ev
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strcpy
strlen
sprintf
strcat
root_file_exists
root_open_new
fat16_write_file
sd_raw_sync
fat16_close_file
root_open
fat16_seek_file
fat16_read_file
root_delete
sd_raw_init
openroot
