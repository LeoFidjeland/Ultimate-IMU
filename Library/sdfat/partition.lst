   1              		.file	"partition.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.align	2
   6              		.global	partition_open
   8              	partition_open:
   9              	.LFB0:
  10              		.file 1 "../Library/sdfat/partition.c"
   1:../Library/sdfat/partition.c **** 
   2:../Library/sdfat/partition.c **** /* This program is free software; you can redistribute it and/or modify
   3:../Library/sdfat/partition.c ****  * it under the terms of the GNU General Public License version 2 as
   4:../Library/sdfat/partition.c ****  * published by the Free Software Foundation.
   5:../Library/sdfat/partition.c ****  */
   6:../Library/sdfat/partition.c **** 
   7:../Library/sdfat/partition.c **** #include "partition.h"
   8:../Library/sdfat/partition.c **** 
   9:../Library/sdfat/partition.c **** #include <stdlib.h>
  10:../Library/sdfat/partition.c **** #include <string.h>
  11:../Library/sdfat/partition.c **** 
  12:../Library/sdfat/partition.c **** /**
  13:../Library/sdfat/partition.c ****  * \addtogroup partition Partition table support
  14:../Library/sdfat/partition.c ****  *
  15:../Library/sdfat/partition.c ****  * Support for reading partition tables and access to partitions.
  16:../Library/sdfat/partition.c ****  *
  17:../Library/sdfat/partition.c ****  * @{
  18:../Library/sdfat/partition.c ****  */
  19:../Library/sdfat/partition.c **** /**
  20:../Library/sdfat/partition.c ****  * \file
  21:../Library/sdfat/partition.c ****  * Partition table implementation.
  22:../Library/sdfat/partition.c ****  *
  23:../Library/sdfat/partition.c ****  * \author Roland Riegel
  24:../Library/sdfat/partition.c ****  */
  25:../Library/sdfat/partition.c **** 
  26:../Library/sdfat/partition.c **** /**
  27:../Library/sdfat/partition.c ****  * Opens a partition.
  28:../Library/sdfat/partition.c ****  *
  29:../Library/sdfat/partition.c ****  * Opens a partition by its index number and returns a partition
  30:../Library/sdfat/partition.c ****  * handle which describes the opened partition.
  31:../Library/sdfat/partition.c ****  *
  32:../Library/sdfat/partition.c ****  * \note This function does not support extended partitions.
  33:../Library/sdfat/partition.c ****  *
  34:../Library/sdfat/partition.c ****  * \param[in] device_read A function pointer which is used to read from the disk.
  35:../Library/sdfat/partition.c ****  * \param[in] device_read_interval A function pointer which is used to read in constant intervals f
  36:../Library/sdfat/partition.c ****  * \param[in] device_write A function pointer which is used to write to the disk.
  37:../Library/sdfat/partition.c ****  * \param[in] index The index of the partition which should be opened, range 0 to 3.
  38:../Library/sdfat/partition.c ****  *                  A negative value is allowed as well. In this case, the partition opened is
  39:../Library/sdfat/partition.c ****  *                  not checked for existance, begins at offset zero, has a length of zero
  40:../Library/sdfat/partition.c ****  *                  and is of an unknown type.
  41:../Library/sdfat/partition.c ****  * \returns 0 on failure, a partition descriptor on success.
  42:../Library/sdfat/partition.c ****  * \see partition_close
  43:../Library/sdfat/partition.c ****  */
  44:../Library/sdfat/partition.c **** struct partition_struct* partition_open(device_read_t device_read, device_read_interval_t device_re
  45:../Library/sdfat/partition.c **** {
  11              		.loc 1 45 0
  12              		.cfi_startproc
  13              		@ Function supports interworking.
  14              		@ args = 0, pretend = 0, frame = 16
  15              		@ frame_needed = 0, uses_anonymous_args = 0
  16              	.LVL0:
  17 0000 FF412DE9 		stmfd	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  18              	.LCFI0:
  19              		.cfi_def_cfa_offset 40
  20              		.cfi_offset 14, -4
  21              		.cfi_offset 8, -8
  22              		.cfi_offset 7, -12
  23              		.cfi_offset 6, -16
  24              		.cfi_offset 5, -20
  25              		.cfi_offset 4, -24
  26              		.cfi_offset 3, -28
  27              		.cfi_offset 2, -32
  28              		.cfi_offset 1, -36
  29              		.cfi_offset 0, -40
  46:../Library/sdfat/partition.c ****     struct partition_struct* new_partition = 0;
  47:../Library/sdfat/partition.c ****     uint8_t buffer[0x10];
  48:../Library/sdfat/partition.c **** 
  49:../Library/sdfat/partition.c ****     if(!device_read || !device_read_interval || index0 >= 4)
  30              		.loc 1 49 0
  31 0004 000050E3 		cmp	r0, #0
  32 0008 00005113 		cmpne	r1, #0
  45:../Library/sdfat/partition.c **** {
  33              		.loc 1 45 0
  34 000c 033CA0E1 		mov	r3, r3, asl #24
  35              	.LVL1:
  36              		.loc 1 49 0
  37 0010 0050A013 		movne	r5, #0
  38 0014 0150A003 		moveq	r5, #1
  45:../Library/sdfat/partition.c **** {
  39              		.loc 1 45 0
  40 0018 0240A0E1 		mov	r4, r2
  41 001c 436CA0E1 		mov	r6, r3, asr #24
  42              		.loc 1 49 0
  43 0020 0180A0E1 		mov	r8, r1
  44 0024 0070A0E1 		mov	r7, r0
  50:../Library/sdfat/partition.c ****         return 0;
  45              		.loc 1 50 0
  46 0028 0050A003 		moveq	r5, #0
  49:../Library/sdfat/partition.c ****     if(!device_read || !device_read_interval || index0 >= 4)
  47              		.loc 1 49 0
  48 002c 3000000A 		beq	.L2
  49:../Library/sdfat/partition.c ****     if(!device_read || !device_read_interval || index0 >= 4)
  49              		.loc 1 49 0 is_stmt 0 discriminator 1
  50 0030 030056E3 		cmp	r6, #3
  51 0034 2E0000CA 		bgt	.L2
  51:../Library/sdfat/partition.c **** 
  52:../Library/sdfat/partition.c ****     if(index0 >= 0)
  52              		.loc 1 52 0 is_stmt 1
  53 0038 000056E3 		cmp	r6, #0
  54 003c 0B0000BA 		blt	.L3
  53:../Library/sdfat/partition.c ****     {
  54:../Library/sdfat/partition.c ****         /* read specified partition table index */
  55:../Library/sdfat/partition.c ****         if(!device_read(0x01be + index0 * 0x10, buffer, sizeof(buffer)))
  55              		.loc 1 55 0
  56 0040 0602A0E1 		mov	r0, r6, asl #4
  57              	.LVL2:
  58 0044 6F0F80E2 		add	r0, r0, #444
  59 0048 020080E2 		add	r0, r0, #2
  60 004c 0D10A0E1 		mov	r1, sp
  61              	.LVL3:
  62 0050 1020A0E3 		mov	r2, #16
  63              	.LVL4:
  64 0054 0FE0A0E1 		mov	lr, pc
  65 0058 17FF2FE1 		bx	r7
  66 005c 005050E2 		subs	r5, r0, #0
  67 0060 2300000A 		beq	.L2
  56:../Library/sdfat/partition.c ****             return 0;
  57:../Library/sdfat/partition.c **** 
  58:../Library/sdfat/partition.c ****         /* abort on empty partition entry */
  59:../Library/sdfat/partition.c ****         if(buffer[4] == 0x00)
  68              		.loc 1 59 0
  69 0064 0450DDE5 		ldrb	r5, [sp, #4]	@ zero_extendqisi2
  70 0068 000055E3 		cmp	r5, #0
  71 006c 2000000A 		beq	.L2
  72              	.L3:
  60:../Library/sdfat/partition.c ****             return 0;
  61:../Library/sdfat/partition.c ****     }
  62:../Library/sdfat/partition.c **** 
  63:../Library/sdfat/partition.c ****     /* allocate partition descriptor */
  64:../Library/sdfat/partition.c ****     new_partition = malloc(sizeof(*new_partition));
  73              		.loc 1 64 0
  74 0070 1800A0E3 		mov	r0, #24
  75 0074 FEFFFFEB 		bl	malloc
  76              	.LVL5:
  65:../Library/sdfat/partition.c ****     if(!new_partition)
  77              		.loc 1 65 0
  78 0078 005050E2 		subs	r5, r0, #0
  79 007c 1C00000A 		beq	.L2
  66:../Library/sdfat/partition.c ****         return 0;
  67:../Library/sdfat/partition.c ****     memset(new_partition, 0, sizeof(*new_partition));
  80              		.loc 1 67 0
  81 0080 0010A0E3 		mov	r1, #0
  82 0084 1820A0E3 		mov	r2, #24
  83 0088 FEFFFFEB 		bl	memset
  84              	.LVL6:
  68:../Library/sdfat/partition.c **** 
  69:../Library/sdfat/partition.c ****     /* fill partition descriptor */
  70:../Library/sdfat/partition.c ****     new_partition->device_read = device_read;
  71:../Library/sdfat/partition.c ****     new_partition->device_read_interval = device_read_interval;
  72:../Library/sdfat/partition.c ****     new_partition->device_write = device_write;
  73:../Library/sdfat/partition.c **** 
  74:../Library/sdfat/partition.c ****     if(index0 >= 0)
  85              		.loc 1 74 0
  86 008c 000056E3 		cmp	r6, #0
  75:../Library/sdfat/partition.c ****     {
  76:../Library/sdfat/partition.c ****         new_partition->type = buffer[4];
  77:../Library/sdfat/partition.c ****         new_partition->offset = ((uint32_t) buffer[8]) |
  78:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[9] << 8) |
  79:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[10] << 16) |
  80:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[11] << 24);
  81:../Library/sdfat/partition.c ****         new_partition->length = ((uint32_t) buffer[12]) |
  82:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[13] << 8) |
  83:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[14] << 16) |
  84:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[15] << 24);
  85:../Library/sdfat/partition.c ****     }
  86:../Library/sdfat/partition.c ****     else
  87:../Library/sdfat/partition.c ****     {
  88:../Library/sdfat/partition.c ****         new_partition->type = 0xff;
  87              		.loc 1 88 0
  88 0090 0030E0B3 		mvnlt	r3, #0
  71:../Library/sdfat/partition.c ****     new_partition->device_read_interval = device_read_interval;
  89              		.loc 1 71 0
  90 0094 800185E8 		stmia	r5, {r7, r8}
  72:../Library/sdfat/partition.c ****     new_partition->device_write = device_write;
  91              		.loc 1 72 0
  92 0098 084085E5 		str	r4, [r5, #8]
  93              		.loc 1 88 0
  94 009c 0C30C5B5 		strltb	r3, [r5, #12]
  74:../Library/sdfat/partition.c ****     if(index0 >= 0)
  95              		.loc 1 74 0
  96 00a0 130000BA 		blt	.L2
  76:../Library/sdfat/partition.c ****         new_partition->type = buffer[4];
  97              		.loc 1 76 0
  98 00a4 0430DDE5 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
  99 00a8 0C30C5E5 		strb	r3, [r5, #12]
  79:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[10] << 16) |
 100              		.loc 1 79 0
 101 00ac 0A30DDE5 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
  78:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[9] << 8) |
 102              		.loc 1 78 0
 103 00b0 0920DDE5 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
  79:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[10] << 16) |
 104              		.loc 1 79 0
 105 00b4 0338A0E1 		mov	r3, r3, asl #16
  77:../Library/sdfat/partition.c ****         new_partition->offset = ((uint32_t) buffer[8]) |
 106              		.loc 1 77 0
 107 00b8 023483E1 		orr	r3, r3, r2, asl #8
 108 00bc 0820DDE5 		ldrb	r2, [sp, #8]	@ zero_extendqisi2
  78:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[9] << 8) |
 109              		.loc 1 78 0
 110 00c0 023083E1 		orr	r3, r3, r2
  80:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[11] << 24);
 111              		.loc 1 80 0
 112 00c4 0B20DDE5 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
  79:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[10] << 16) |
 113              		.loc 1 79 0
 114 00c8 023C83E1 		orr	r3, r3, r2, asl #24
  77:../Library/sdfat/partition.c ****         new_partition->offset = ((uint32_t) buffer[8]) |
 115              		.loc 1 77 0
 116 00cc 103085E5 		str	r3, [r5, #16]
  83:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[14] << 16) |
 117              		.loc 1 83 0
 118 00d0 0E30DDE5 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
  82:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[13] << 8) |
 119              		.loc 1 82 0
 120 00d4 0D20DDE5 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
  83:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[14] << 16) |
 121              		.loc 1 83 0
 122 00d8 0338A0E1 		mov	r3, r3, asl #16
  81:../Library/sdfat/partition.c ****         new_partition->length = ((uint32_t) buffer[12]) |
 123              		.loc 1 81 0
 124 00dc 023483E1 		orr	r3, r3, r2, asl #8
 125 00e0 0C20DDE5 		ldrb	r2, [sp, #12]	@ zero_extendqisi2
  82:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[13] << 8) |
 126              		.loc 1 82 0
 127 00e4 023083E1 		orr	r3, r3, r2
  84:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[15] << 24);
 128              		.loc 1 84 0
 129 00e8 0F20DDE5 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
  83:../Library/sdfat/partition.c ****                                 ((uint32_t) buffer[14] << 16) |
 130              		.loc 1 83 0
 131 00ec 023C83E1 		orr	r3, r3, r2, asl #24
  81:../Library/sdfat/partition.c ****         new_partition->length = ((uint32_t) buffer[12]) |
 132              		.loc 1 81 0
 133 00f0 143085E5 		str	r3, [r5, #20]
 134              	.LVL7:
 135              	.L2:
  89:../Library/sdfat/partition.c ****     }
  90:../Library/sdfat/partition.c **** 
  91:../Library/sdfat/partition.c ****     return new_partition;
  92:../Library/sdfat/partition.c **** }
 136              		.loc 1 92 0
 137 00f4 0500A0E1 		mov	r0, r5
 138 00f8 10D08DE2 		add	sp, sp, #16
 139 00fc F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 140 0100 1EFF2FE1 		bx	lr
 141              		.cfi_endproc
 142              	.LFE0:
 144              		.align	2
 145              		.global	partition_close
 147              	partition_close:
 148              	.LFB1:
  93:../Library/sdfat/partition.c **** 
  94:../Library/sdfat/partition.c **** /**
  95:../Library/sdfat/partition.c ****  * Closes a partition.
  96:../Library/sdfat/partition.c ****  *
  97:../Library/sdfat/partition.c ****  * This function destroys a partition descriptor which was
  98:../Library/sdfat/partition.c ****  * previously obtained from a call to partition_open().
  99:../Library/sdfat/partition.c ****  * When this function returns, the given descriptor will be
 100:../Library/sdfat/partition.c ****  * invalid.
 101:../Library/sdfat/partition.c ****  *
 102:../Library/sdfat/partition.c ****  * \param[in] partition The partition descriptor to destroy.
 103:../Library/sdfat/partition.c ****  * \returns 0 on failure, 1 on success.
 104:../Library/sdfat/partition.c ****  * \see partition_open
 105:../Library/sdfat/partition.c ****  */
 106:../Library/sdfat/partition.c **** uint8_t partition_close(struct partition_struct* partition)
 107:../Library/sdfat/partition.c **** {
 149              		.loc 1 107 0
 150              		.cfi_startproc
 151              		@ Function supports interworking.
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL8:
 108:../Library/sdfat/partition.c ****     if(!partition)
 155              		.loc 1 108 0
 156 0104 003050E2 		subs	r3, r0, #0
 107:../Library/sdfat/partition.c **** {
 157              		.loc 1 107 0
 158 0108 04E02DE5 		str	lr, [sp, #-4]!
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 14, -4
 109:../Library/sdfat/partition.c ****         return 0;
 162              		.loc 1 109 0
 163 010c 0300A001 		moveq	r0, r3
 164              	.LVL9:
 108:../Library/sdfat/partition.c ****     if(!partition)
 165              		.loc 1 108 0
 166 0110 0100000A 		beq	.L10
 110:../Library/sdfat/partition.c **** 
 111:../Library/sdfat/partition.c ****     /* destroy partition descriptor */
 112:../Library/sdfat/partition.c ****     free(partition);
 167              		.loc 1 112 0
 168 0114 FEFFFFEB 		bl	free
 169              	.LVL10:
 113:../Library/sdfat/partition.c **** 
 114:../Library/sdfat/partition.c ****     return 1;
 170              		.loc 1 114 0
 171 0118 0100A0E3 		mov	r0, #1
 172              	.L10:
 115:../Library/sdfat/partition.c **** }
 173              		.loc 1 115 0
 174 011c 04E09DE4 		ldr	lr, [sp], #4
 175 0120 1EFF2FE1 		bx	lr
 176              		.cfi_endproc
 177              	.LFE1:
 179              	.Letext0:
 180              		.file 2 "/opt/local/lib/gcc/arm-elf/4.6.1/../../../../arm-elf/include/stdint.h"
 181              		.file 3 "../Library/sdfat/partition.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 partition.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccEcX1di.s:5      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccEcX1di.s:8      .text:0000000000000000 partition_open
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccEcX1di.s:147    .text:0000000000000104 partition_close
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
malloc
memset
free
