   1              		.file	"serial.c"
   2              		.text
   3              	.Ltext0:
   4              		.cfi_sections	.debug_frame
   5              		.global	__udivsi3
   6              		.align	2
   7              		.global	init_serial0
   9              	init_serial0:
  10              	.LFB0:
  11              		.file 1 "../Library/uart/serial.c"
   1:../Library/uart/serial.c **** /******************************************************************************/
   2:../Library/uart/serial.c **** /*  This file is part of the uVision/ARM development tools                    */
   3:../Library/uart/serial.c **** /*  Copyright KEIL ELEKTRONIK GmbH 2002-2004                                  */
   4:../Library/uart/serial.c **** /******************************************************************************/
   5:../Library/uart/serial.c **** /*                                                                            */
   6:../Library/uart/serial.c **** /*  SERIAL.C:  Low Level Serial Routines                                      */
   7:../Library/uart/serial.c **** /*  modified and extended by Martin Thomas                                    */
   8:../Library/uart/serial.c **** /*                                                                            */
   9:../Library/uart/serial.c **** /******************************************************************************/
  10:../Library/uart/serial.c **** 
  11:../Library/uart/serial.c **** #include "LPC214x.h"
  12:../Library/uart/serial.c **** #include "target.h"
  13:../Library/uart/serial.c **** #include "serial.h"
  14:../Library/uart/serial.c **** 
  15:../Library/uart/serial.c **** #define CR     0x0D
  16:../Library/uart/serial.c **** 
  17:../Library/uart/serial.c **** /* Initialize Serial Interface UART0 */
  18:../Library/uart/serial.c **** void init_serial0 ( unsigned long baudrate )
  19:../Library/uart/serial.c **** {
  12              		.loc 1 19 0
  13              		.cfi_startproc
  14              		@ Function supports interworking.
  15              		@ args = 0, pretend = 0, frame = 0
  16              		@ frame_needed = 0, uses_anonymous_args = 0
  17              	.LVL0:
  20:../Library/uart/serial.c ****     unsigned long Fdiv;
  21:../Library/uart/serial.c **** 
  22:../Library/uart/serial.c ****     PINSEL0 |= 0x00000005;                  /* Enable RxD0 and TxD0              */
  18              		.loc 1 22 0
  19 0000 44309FE5 		ldr	r3, .L2
  20 0004 002093E5 		ldr	r2, [r3, #0]
  19:../Library/uart/serial.c **** {
  21              		.loc 1 19 0
  22 0008 10402DE9 		stmfd	sp!, {r4, lr}
  23              	.LCFI0:
  24              		.cfi_def_cfa_offset 8
  25              		.cfi_offset 14, -4
  26              		.cfi_offset 4, -8
  27              		.loc 1 22 0
  28 000c 052082E3 		orr	r2, r2, #5
  23:../Library/uart/serial.c ****     U0LCR = 0x83;                          /* 8 bits, no Parity, 1 Stop bit     */
  29              		.loc 1 23 0
  30 0010 38409FE5 		ldr	r4, .L2+4
  22:../Library/uart/serial.c ****     PINSEL0 |= 0x00000005;                  /* Enable RxD0 and TxD0              */
  31              		.loc 1 22 0
  32 0014 002083E5 		str	r2, [r3, #0]
  33              		.loc 1 23 0
  34 0018 8330A0E3 		mov	r3, #131
  19:../Library/uart/serial.c **** {
  35              		.loc 1 19 0
  36 001c 0010A0E1 		mov	r1, r0
  37              		.loc 1 23 0
  38 0020 0C3084E5 		str	r3, [r4, #12]
  24:../Library/uart/serial.c ****     Fdiv = ( Fcclk / 16 ) / baudrate ;     /* baud rate                        */
  39              		.loc 1 24 0
  40 0024 28009FE5 		ldr	r0, .L2+8
  41              	.LVL1:
  42 0028 FEFFFFEB 		bl	__udivsi3
  43              	.LVL2:
  25:../Library/uart/serial.c **** 	U0DLM = Fdiv / 256;
  44              		.loc 1 25 0
  45 002c 2034A0E1 		mov	r3, r0, lsr #8
  46 0030 043084E5 		str	r3, [r4, #4]
  26:../Library/uart/serial.c ****     U0DLL = Fdiv % 256;
  47              		.loc 1 26 0
  48 0034 FF0000E2 		and	r0, r0, #255
  49              	.LVL3:
  27:../Library/uart/serial.c ****     U0LCR = 0x03;                           /* DLAB = 0                         */
  50              		.loc 1 27 0
  51 0038 0330A0E3 		mov	r3, #3
  26:../Library/uart/serial.c ****     U0DLL = Fdiv % 256;
  52              		.loc 1 26 0
  53 003c 000084E5 		str	r0, [r4, #0]
  54              		.loc 1 27 0
  55 0040 0C3084E5 		str	r3, [r4, #12]
  28:../Library/uart/serial.c **** }
  56              		.loc 1 28 0
  57 0044 1040BDE8 		ldmfd	sp!, {r4, lr}
  58 0048 1EFF2FE1 		bx	lr
  59              	.L3:
  60              		.align	2
  61              	.L2:
  62 004c 00C002E0 		.word	-536690688
  63 0050 00C000E0 		.word	-536821760
  64 0054 70383900 		.word	3750000
  65              		.cfi_endproc
  66              	.LFE0:
  68              		.align	2
  69              		.global	init_serial1
  71              	init_serial1:
  72              	.LFB1:
  29:../Library/uart/serial.c **** 
  30:../Library/uart/serial.c **** /* Initialize Serial Interface UART0 */
  31:../Library/uart/serial.c **** void init_serial1 ( unsigned long baudrate )
  32:../Library/uart/serial.c **** {
  73              		.loc 1 32 0
  74              		.cfi_startproc
  75              		@ Function supports interworking.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              	.LVL4:
  33:../Library/uart/serial.c ****     unsigned long Fdiv;
  34:../Library/uart/serial.c **** 
  35:../Library/uart/serial.c ****     PINSEL0 |= (1<<16) | (1<<18);         /* Enable RxD1 and TxD1              */
  79              		.loc 1 35 0
  80 0058 44309FE5 		ldr	r3, .L5
  81 005c 002093E5 		ldr	r2, [r3, #0]
  32:../Library/uart/serial.c **** {
  82              		.loc 1 32 0
  83 0060 10402DE9 		stmfd	sp!, {r4, lr}
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 14, -4
  87              		.cfi_offset 4, -8
  88              		.loc 1 35 0
  89 0064 052882E3 		orr	r2, r2, #327680
  36:../Library/uart/serial.c ****     U1LCR = 0x83;                          /* 8 bits, no Parity, 1 Stop bit     */
  90              		.loc 1 36 0
  91 0068 38409FE5 		ldr	r4, .L5+4
  35:../Library/uart/serial.c ****     PINSEL0 |= (1<<16) | (1<<18);         /* Enable RxD1 and TxD1              */
  92              		.loc 1 35 0
  93 006c 002083E5 		str	r2, [r3, #0]
  94              		.loc 1 36 0
  95 0070 8330A0E3 		mov	r3, #131
  32:../Library/uart/serial.c **** {
  96              		.loc 1 32 0
  97 0074 0010A0E1 		mov	r1, r0
  98              		.loc 1 36 0
  99 0078 0C3084E5 		str	r3, [r4, #12]
  37:../Library/uart/serial.c ****     Fdiv = ( Fcclk / 16 ) / baudrate ;     /* baud rate                        */
 100              		.loc 1 37 0
 101 007c 28009FE5 		ldr	r0, .L5+8
 102              	.LVL5:
 103 0080 FEFFFFEB 		bl	__udivsi3
 104              	.LVL6:
  38:../Library/uart/serial.c ****     U1DLM = Fdiv / 256;
 105              		.loc 1 38 0
 106 0084 2034A0E1 		mov	r3, r0, lsr #8
 107 0088 043084E5 		str	r3, [r4, #4]
  39:../Library/uart/serial.c ****     U1DLL = Fdiv % 256;
 108              		.loc 1 39 0
 109 008c FF0000E2 		and	r0, r0, #255
 110              	.LVL7:
  40:../Library/uart/serial.c ****     U1LCR = 0x03;                           /* DLAB = 0                         */
 111              		.loc 1 40 0
 112 0090 0330A0E3 		mov	r3, #3
  39:../Library/uart/serial.c ****     U1DLL = Fdiv % 256;
 113              		.loc 1 39 0
 114 0094 000084E5 		str	r0, [r4, #0]
 115              		.loc 1 40 0
 116 0098 0C3084E5 		str	r3, [r4, #12]
  41:../Library/uart/serial.c **** }
 117              		.loc 1 41 0
 118 009c 1040BDE8 		ldmfd	sp!, {r4, lr}
 119 00a0 1EFF2FE1 		bx	lr
 120              	.L6:
 121              		.align	2
 122              	.L5:
 123 00a4 00C002E0 		.word	-536690688
 124 00a8 000001E0 		.word	-536805376
 125 00ac 70383900 		.word	3750000
 126              		.cfi_endproc
 127              	.LFE1:
 129              		.align	2
 130              		.global	putchar_serial0
 132              	putchar_serial0:
 133              	.LFB2:
  42:../Library/uart/serial.c **** 
  43:../Library/uart/serial.c **** /* Write character to Serial Port 0 with \n -> \r\n  */
  44:../Library/uart/serial.c **** int putchar_serial0 (int ch)
  45:../Library/uart/serial.c **** {
 134              		.loc 1 45 0
 135              		.cfi_startproc
 136              		@ Function supports interworking.
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL8:
  46:../Library/uart/serial.c ****     if (ch == '\n')
 141              		.loc 1 46 0
 142 00b0 0A0050E3 		cmp	r0, #10
 143 00b4 30309FE5 		ldr	r3, .L15
 144 00b8 0500001A 		bne	.L11
 145              	.L12:
  47:../Library/uart/serial.c ****     {
  48:../Library/uart/serial.c ****         while (!(U0LSR & 0x20));
 146              		.loc 1 48 0 discriminator 1
 147 00bc 142093E5 		ldr	r2, [r3, #20]
 148 00c0 200012E3 		tst	r2, #32
 149 00c4 FCFFFF0A 		beq	.L12
  49:../Library/uart/serial.c ****         U0THR = CR;                  /* output CR */
 150              		.loc 1 49 0
 151 00c8 1C209FE5 		ldr	r2, .L15
 152 00cc 0D10A0E3 		mov	r1, #13
 153 00d0 001082E5 		str	r1, [r2, #0]
 154              	.L11:
  50:../Library/uart/serial.c ****     }
  51:../Library/uart/serial.c ****     while (!(U0LSR & 0x20));
 155              		.loc 1 51 0 discriminator 1
 156 00d4 142093E5 		ldr	r2, [r3, #20]
 157 00d8 200012E3 		tst	r2, #32
 158 00dc FCFFFF0A 		beq	.L11
  52:../Library/uart/serial.c ****     return (U0THR = ch);
 159              		.loc 1 52 0
 160 00e0 04309FE5 		ldr	r3, .L15
 161 00e4 000083E5 		str	r0, [r3, #0]
  53:../Library/uart/serial.c **** }
 162              		.loc 1 53 0
 163 00e8 1EFF2FE1 		bx	lr
 164              	.L16:
 165              		.align	2
 166              	.L15:
 167 00ec 00C000E0 		.word	-536821760
 168              		.cfi_endproc
 169              	.LFE2:
 171              		.align	2
 172              		.global	putc_serial0
 174              	putc_serial0:
 175              	.LFB3:
  54:../Library/uart/serial.c **** 
  55:../Library/uart/serial.c **** /* Write character to Serial Port 0 without \n -> \r\n  */
  56:../Library/uart/serial.c **** int putc_serial0 (int ch)
  57:../Library/uart/serial.c **** {
 176              		.loc 1 57 0
 177              		.cfi_startproc
 178              		@ Function supports interworking.
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              	.LVL9:
  58:../Library/uart/serial.c ****     while (!(U0LSR & 0x20));
 183              		.loc 1 58 0
 184 00f0 14309FE5 		ldr	r3, .L20
 185              	.L18:
 186              		.loc 1 58 0 is_stmt 0 discriminator 1
 187 00f4 142093E5 		ldr	r2, [r3, #20]
 188 00f8 200012E3 		tst	r2, #32
 189 00fc FCFFFF0A 		beq	.L18
  59:../Library/uart/serial.c ****     return (U0THR = ch);
 190              		.loc 1 59 0 is_stmt 1
 191 0100 04309FE5 		ldr	r3, .L20
 192 0104 000083E5 		str	r0, [r3, #0]
  60:../Library/uart/serial.c **** }
 193              		.loc 1 60 0
 194 0108 1EFF2FE1 		bx	lr
 195              	.L21:
 196              		.align	2
 197              	.L20:
 198 010c 00C000E0 		.word	-536821760
 199              		.cfi_endproc
 200              	.LFE3:
 202              		.align	2
 203              		.global	putc_serial1
 205              	putc_serial1:
 206              	.LFB4:
  61:../Library/uart/serial.c **** 
  62:../Library/uart/serial.c **** /* Write character to Serial Port 1 without \n -> \r\n  */
  63:../Library/uart/serial.c **** int putc_serial1 (int ch)
  64:../Library/uart/serial.c **** {
 207              		.loc 1 64 0
 208              		.cfi_startproc
 209              		@ Function supports interworking.
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL10:
  65:../Library/uart/serial.c ****     while (!(U1LSR & 0x20));
 214              		.loc 1 65 0
 215 0110 14309FE5 		ldr	r3, .L25
 216              	.L23:
 217              		.loc 1 65 0 is_stmt 0 discriminator 1
 218 0114 142093E5 		ldr	r2, [r3, #20]
 219 0118 200012E3 		tst	r2, #32
 220 011c FCFFFF0A 		beq	.L23
  66:../Library/uart/serial.c ****     return (U1THR = ch);
 221              		.loc 1 66 0 is_stmt 1
 222 0120 04309FE5 		ldr	r3, .L25
 223 0124 000083E5 		str	r0, [r3, #0]
  67:../Library/uart/serial.c **** }
 224              		.loc 1 67 0
 225 0128 1EFF2FE1 		bx	lr
 226              	.L26:
 227              		.align	2
 228              	.L25:
 229 012c 000001E0 		.word	-536805376
 230              		.cfi_endproc
 231              	.LFE4:
 233              		.align	2
 234              		.global	putstring_serial0
 236              	putstring_serial0:
 237              	.LFB5:
  68:../Library/uart/serial.c **** 
  69:../Library/uart/serial.c **** void putstring_serial0 (const char *string)
  70:../Library/uart/serial.c **** {
 238              		.loc 1 70 0
 239              		.cfi_startproc
 240              		@ Function supports interworking.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL11:
 244 0130 10402DE9 		stmfd	sp!, {r4, lr}
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 14, -4
 248              		.cfi_offset 4, -8
 249              		.loc 1 70 0
 250 0134 0040A0E1 		mov	r4, r0
  71:../Library/uart/serial.c ****     char ch;
  72:../Library/uart/serial.c **** 
  73:../Library/uart/serial.c ****     while ((ch = *string))
 251              		.loc 1 73 0
 252 0138 000000EA 		b	.L28
 253              	.LVL12:
 254              	.L29:
  74:../Library/uart/serial.c ****     {
  75:../Library/uart/serial.c ****         putchar_serial0(ch);
 255              		.loc 1 75 0
 256 013c FEFFFFEB 		bl	putchar_serial0
 257              	.LVL13:
 258              	.L28:
  73:../Library/uart/serial.c ****     while ((ch = *string))
 259              		.loc 1 73 0 discriminator 1
 260 0140 0100D4E4 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 261              	.LVL14:
 262 0144 000050E3 		cmp	r0, #0
 263 0148 FBFFFF1A 		bne	.L29
  76:../Library/uart/serial.c ****         string++;
  77:../Library/uart/serial.c ****     }
  78:../Library/uart/serial.c **** }
 264              		.loc 1 78 0
 265 014c 1040BDE8 		ldmfd	sp!, {r4, lr}
 266 0150 1EFF2FE1 		bx	lr
 267              		.cfi_endproc
 268              	.LFE5:
 270              		.align	2
 271              		.global	getkey_serial0
 273              	getkey_serial0:
 274              	.LFB6:
  79:../Library/uart/serial.c **** 
  80:../Library/uart/serial.c **** 
  81:../Library/uart/serial.c **** /* Read character from Serial Port   */
  82:../Library/uart/serial.c **** int getkey_serial0 (void)
  83:../Library/uart/serial.c **** {
 275              		.loc 1 83 0
 276              		.cfi_startproc
 277              		@ Function supports interworking.
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
  84:../Library/uart/serial.c **** 	if (U0LSR & 0x01)
 281              		.loc 1 84 0
 282 0154 0C309FE5 		ldr	r3, .L33
 283 0158 140093E5 		ldr	r0, [r3, #20]
 284 015c 010010E2 		ands	r0, r0, #1
  85:../Library/uart/serial.c ****     {
  86:../Library/uart/serial.c ****         return (U0RBR);
 285              		.loc 1 86 0
 286 0160 00009315 		ldrne	r0, [r3, #0]
  87:../Library/uart/serial.c ****     }
  88:../Library/uart/serial.c ****     else
  89:../Library/uart/serial.c ****     {
  90:../Library/uart/serial.c ****         return 0;
  91:../Library/uart/serial.c ****     }
  92:../Library/uart/serial.c **** }
 287              		.loc 1 92 0
 288 0164 1EFF2FE1 		bx	lr
 289              	.L34:
 290              		.align	2
 291              	.L33:
 292 0168 00C000E0 		.word	-536821760
 293              		.cfi_endproc
 294              	.LFE6:
 296              		.align	2
 297              		.global	getc0
 299              	getc0:
 300              	.LFB7:
  93:../Library/uart/serial.c **** 
  94:../Library/uart/serial.c **** /* Read character from Serial Port   */
  95:../Library/uart/serial.c **** int getc0 (void)
  96:../Library/uart/serial.c **** {
 301              		.loc 1 96 0
 302              		.cfi_startproc
 303              		@ Function supports interworking.
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
  97:../Library/uart/serial.c **** 	while ( (U0LSR & 0x01) == 0 ); //Wait for character
 307              		.loc 1 97 0
 308 016c 14309FE5 		ldr	r3, .L38
 309              	.L36:
 310              		.loc 1 97 0 is_stmt 0 discriminator 1
 311 0170 142093E5 		ldr	r2, [r3, #20]
 312 0174 010012E3 		tst	r2, #1
 313 0178 FCFFFF0A 		beq	.L36
  98:../Library/uart/serial.c **** 	return U0RBR;
 314              		.loc 1 98 0 is_stmt 1
 315 017c 04309FE5 		ldr	r3, .L38
 316 0180 000093E5 		ldr	r0, [r3, #0]
  99:../Library/uart/serial.c **** }
 317              		.loc 1 99 0
 318 0184 1EFF2FE1 		bx	lr
 319              	.L39:
 320              		.align	2
 321              	.L38:
 322 0188 00C000E0 		.word	-536821760
 323              		.cfi_endproc
 324              	.LFE7:
 326              		.align	2
 327              		.global	getc1
 329              	getc1:
 330              	.LFB8:
 100:../Library/uart/serial.c **** 
 101:../Library/uart/serial.c **** /* Read character from Serial Port   */
 102:../Library/uart/serial.c **** int getc1 (void)
 103:../Library/uart/serial.c **** {
 331              		.loc 1 103 0
 332              		.cfi_startproc
 333              		@ Function supports interworking.
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 104:../Library/uart/serial.c **** 	while ( (U1LSR & 0x01) == 0 ); //Wait for character
 337              		.loc 1 104 0
 338 018c 14309FE5 		ldr	r3, .L43
 339              	.L41:
 340              		.loc 1 104 0 is_stmt 0 discriminator 1
 341 0190 142093E5 		ldr	r2, [r3, #20]
 342 0194 010012E3 		tst	r2, #1
 343 0198 FCFFFF0A 		beq	.L41
 105:../Library/uart/serial.c **** 	return U1RBR;
 344              		.loc 1 105 0 is_stmt 1
 345 019c 04309FE5 		ldr	r3, .L43
 346 01a0 000093E5 		ldr	r0, [r3, #0]
 106:../Library/uart/serial.c **** }
 347              		.loc 1 106 0
 348 01a4 1EFF2FE1 		bx	lr
 349              	.L44:
 350              		.align	2
 351              	.L43:
 352 01a8 000001E0 		.word	-536805376
 353              		.cfi_endproc
 354              	.LFE8:
 356              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 serial.c
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:6      .text:0000000000000000 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:9      .text:0000000000000000 init_serial0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:62     .text:000000000000004c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:68     .text:0000000000000058 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:71     .text:0000000000000058 init_serial1
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:123    .text:00000000000000a4 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:129    .text:00000000000000b0 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:132    .text:00000000000000b0 putchar_serial0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:167    .text:00000000000000ec $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:171    .text:00000000000000f0 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:174    .text:00000000000000f0 putc_serial0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:198    .text:000000000000010c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:202    .text:0000000000000110 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:205    .text:0000000000000110 putc_serial1
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:229    .text:000000000000012c $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:233    .text:0000000000000130 $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:236    .text:0000000000000130 putstring_serial0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:273    .text:0000000000000154 getkey_serial0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:292    .text:0000000000000168 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:296    .text:000000000000016c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:299    .text:000000000000016c getc0
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:322    .text:0000000000000188 $d
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:326    .text:000000000000018c $a
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:329    .text:000000000000018c getc1
/var/folders/vb/2fcwf0x52qn_fy1j7_hx1lpr0000gn/T//ccZMA4QK.s:352    .text:00000000000001a8 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__udivsi3
